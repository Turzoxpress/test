{"version":3,"sources":["Components/Password/Logo2.png","Components/Login/Logo2.png","Components/Login/bg.jpg","Components/Password/bg.jpg","Components/Password/bg2.jpg","Components/Layout/logo2.png","Components/Dashboard/Dashboard.jsx","Components/Loading/LoadingIndicator.jsx","Components/User/CreateUserForm.jsx","Components/User/CreateUser.jsx","Components/Pagination/PaginationComponent.jsx","Components/User/DatatableUserList.jsx","Components/User/UserListView.jsx","Components/User/ViewAddressInfo.jsx","Components/User/UserDetailView.jsx","ProfileContext.js","Components/User/UpdateUserAvatar.jsx","Components/User/UpdateUserCover.jsx","Components/User/UpdateUserProfile.jsx","Components/User/UpdateUserAddress.jsx","Components/User/UpdateInformation.jsx","Components/User/UpdateUser.jsx","Components/Layout/Footer.jsx","Components/Login/Login.jsx","Components/Password/ForgetPassword.jsx","Components/Password/ResetPassword.jsx","Components/AccountInfo/AccountInfo.jsx","Components/InstituteRegistration/InstituteCreate.jsx","Components/InstituteRegistration/DatatableInstList.jsx","Components/InstituteRegistration/InstituteListView.jsx","Components/InstituteRegistration/DatatableInstDetail.jsx","Components/InstituteRegistration/InstituteDetails.jsx","Components/InstituteRegistration/InstituteUpdate.jsx","Components/Profile/ViewAddressInfo.jsx","Components/Profile/ViewProfile.jsx","Components/Profile/UploadAvatar.jsx","Components/Profile/UploadCover.jsx","Components/Profile/UpdateProfile.jsx","Components/Profile/UpdateAddress.jsx","Components/Profile/EditInformation.jsx","Components/Profile/EditProfile.jsx","Components/Logout/Logout.jsx","Components/Layout/Navbar.jsx","Components/Layout/Sidebar.jsx","Components/PrivateRoute/PrivateRoute.jsx","Components/PackageSystem/CreatePackage.jsx","Components/PackageSystem/DatatablePkgList.jsx","Components/PackageSystem/PackageListView.jsx","Components/PackageSystem/DatatableParams.jsx","Components/PackageSystem/PackageDetails.jsx","Components/PackageSystem/PackageEdit.jsx","Components/PackageSystem/DatatablePkgHistoryList.jsx","Components/PackageSystem/PackageHistory.jsx","Components/PackageSystem/PackageHistoryDetail.jsx","Components/Settings/DatatableUserTypeList.jsx","Components/Settings/UserPermission.jsx","Components/Settings/DatatablePackageSetup.jsx","Components/Settings/PackageSetup.jsx","Components/Settings/DatatableInstType.jsx","Components/Settings/InstituteType.jsx","Components/Settings/Settings.jsx","Components/BillingSystem/CreateBillForm.jsx","Components/BillingSystem/CreateBill.jsx","Components/BillingSystem/UpdateBillForm.jsx","Components/BillingSystem/UpdateBill.jsx","Components/BillingSystem/DatatableBillingList.jsx","Components/BillingSystem/DatatableBillingHistoryList.jsx","Components/BillingSystem/BillingListView.jsx","Components/BillingSystem/BillingInvoiceView.jsx","Components/PaymentSystem/DatatablePaymentList.jsx","Components/PaymentSystem/PaymentListView.jsx","Components/PaymentSystem/DatatablePaymentHistoryList.jsx","Components/PaymentSystem/PaymentHistoryView.jsx","Components/PaymentSystem/DatatableInstPaymentHistory.jsx","Components/PaymentSystem/InstPaymentHistory.jsx","Components/PaymentSystem/PaymentApprove.jsx","Components/Settings/CreateUserType.jsx","Components/Settings/ViewUserType.jsx","Components/Settings/EditUserType.jsx","Components/Settings/AddNewPkgItem.jsx","Components/Settings/EditNewPkgItem.jsx","Components/Settings/AddNewInstType.jsx","Components/Settings/EditNewInstType.jsx","Components/Email/Compose.jsx","Components/Email/ViewEmail.jsx","Components/Email/Inbox.jsx","Components/Email/Sent.jsx","Components/Email/Draft.jsx","Components/Email/Trash.jsx","Components/Email/Email.jsx","App.js","Components/ErrorHandling/errorHandle.js","serviceWorker.js","index.js"],"names":["module","exports","Dashboard","StorageOptions","maintainAspectRatio","legend","display","position","labels","fontSize","boxWidth","data","name","uv","pv","amt","Fragment","className","src","height","width","canvas","ctx","getContext","tot_institute_gradient","createLinearGradient","addColorStop","university_gradient","college_gradient","school_gradient","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","invoice_send_gradient","payment_received_gradient","due_gradient","style","textAlign","paddingLeft","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","fill","LoadingIndicator","props","usePromiseTracker","promiseInProgress","justifyContent","alignItems","color","zIndex","ErrorMsg","styled","p","CreateUserForm","useForm","register","handleSubmit","errors","accessToken","localStorage","getItem","substring","length","history","useHistory","useState","setData","role","setRole","useEffect","a","config","method","url","headers","Authorization","trackPromise","axios","userTypeApiResp","typename","fetchData","passwordShown","setPasswordShown","selectedDate","setSelectedDate","errors_date_of_birth","setErrors_date_of_birth","onSubmit","date_of_birth","then","response","status","toast","push","msg","ref","required","pattern","value","message","fname","lname","email","mobile","hidden","defaultValue","gender","selected","onChange","date","dateFormat","maxDate","Date","showYearDropdown","scrollableMonthYearDropdown","username","id","onClick","toggle","password","e","target","sort","b","localeCompare","map","key","data-id","CreateUser","to","title","minHeight","padding","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","Pagination","Item","active","size","Prev","disabled","Next","DatatableUserList","colSpan","row","index","pathname","state","UserListView","userListApiResp","search","setSearch","totalItems","setTotalItems","setCurrentPage","currentData","computedData","filter","d","toLowerCase","includes","slice","page","ViewAddressInfo","user","setUser","address","post_code","post_office","thana","district","division","per_address","per_post_code","per_post_office","per_thana","per_district","per_division","UserDetailView","location","useLocation","cover_img","background","avatar_img","alt","created_at","initial","split","undefined","join","myDate","month","getMonth","getDate","getFullYear","formatDate","paddingTop","marginLeft","Moment","format","nationality","designation","place_of_birth","marital_status","religion","nid","ProfileContext","createContext","ProfileProvider","isProfileUpdate","setIsProfileUpdate","Provider","children","UpdateUserAvatar","useContext","profileImg","setProfileImg","userApiResp","formData","FormData","append","marginTop","accept","reader","FileReader","onload","readyState","result","readAsDataURL","files","validate","htmlFor","UpdateUserCover","coverImg","setCoverImg","UpdateUserProfile","setSelectedGender","setSelectedMaritalStatus","setSelectedReligion","selectedGender","selectedMaritalStatus","selectedReligion","min","UpdateUserAddress","divisionData","setDivisionData","districtData","setDistrictData","thanaUpazilaData","setThanaUpazila","perDivisionData","setPerDivisionData","perDistrictData","setPerDistrictData","perThanaUpazilaData","setPerThanaUpazila","isSameAsPresent","setIsSameAsPresent","get","divisionApiResp","divisions","divisionArray","parseInt","divisionId","indexOf","division_id","districtApiResp","districtArray","districtId","district_id","thanaUpazilaApiResp","ChangeDivision","selectedIndex","optionElement","childNodes","getAttribute","ChangeDistrict","ChangePerDivision","perDivisionId","ChangePerDistrict","perDistrictId","ChangeDivisionIsSame","console","log","JSON","stringify","ChangeThanaUpazila","checked","document","querySelector","index2","ChangeIsSameAsPresent","ChangePerThanaUpazila","UpdateInformation","showGeneralInfo","setShowGeneralInfo","showAddressInfo","setShowAddressInfo","marginRight","UpdateUser","showEdit","setShowEdit","showProfilePhoto","setShowProfilePhoto","showCoverPhoto","setShowCoverPhoto","marginBottom","aria-orientation","Footer","href","Login","isRememberMe","setIsRememberMe","logo","post","setItem","token","role_details","removeItem","placeholder","backgroundImage","backgroundRepeat","backgroundSize","ForgetPassword","closeOnClick","autoClose","ResetPassword","match","watch","useRef","current","newPasswordShown","setNewPasswordShown","confirmPasswordShown","setConfirmPasswordShown","reset_token","params","minLength","password_confirmation","AccountInfo","oldPasswordShown","setOldPasswordShown","data-toggle","aria-controls","aria-selected","aria-labelledby","old_password","InstituteCreate","allPkgData","setAllPkgData","instituteTypes","setInstituteTypes","typeOfInst","setTypeOfInst","allPkgApiResp","parameter","packages","isCreateNewPackage","setIsCreateNewPackage","isPackageName","setIsPackageName","pkgTitle","setPkgTitle","pkgDescription","setPkgDescription","displayFrontEnd","setDisplayFrontEnd","payableAmount","setPayableAmount","pkgParamList","setPkgParamList","selectedPackageId","setSelectedPackageId","handlePackageName","pkgId","package_id","pkgParamApiResp","find","x","description","payable_amount","apiResponse","apiResponseFiltered","res","discountError","setDiscountError","handleInputChange","package_amount","package_number","quantity","price","parseFloat","number","unitPrice","toFixed","getElementById","totalAmount","total_parameter","calculateTotalAmount","discountValue","calculateDiscount","subscription_s_date","setSubscription_s_date","errors_subscription_s_date","setErrors_subscription_s_date","subscription_e_date","setSubscription_e_date","errors_subscription_e_date","setErrors_subscription_e_date","last_payment_date","setLast_payment_date","errors_last_payment_date","setErrors_last_payment_date","institute_id","instNameShortForm","serialNum","instituteData","instituteName","phone","last_payment","payment_amount","postData","createInstApiResp","integer_id","firstName","instituteId","packageTitle","packageDescription","parameters","hasOwnProperty","object","name_key","quantity_key","price_key","getPackageParameter","packageData","savePkgApiResp","packageId","package","short_form","rows","cols","readOnly","defaultChecked","package_item_name","placeholderText","minDate","DatatableInstList","isActive","setisActive","utc","instStatusApiResp","toggleInstStatus","InstituteListView","DatatableInstDetail","package_title","InstituteDetails","instDetail","setInstDetail","useParams","instDetailApiResp","InstituteUpdate","setPkgData","pkgApiResp","setSelectedOption","instData","setInstData","instApiResp","updatePkgApiResp","updateInstApiResp","updatePkgData","postInstData","instName","ViewProfile","UploadAvatar","UploadCover","UpdateProfile","UpdateAddress","user_id","EditInformation","EditProfile","Logout","Navbar","data-target","aria-expanded","aria-label","aria-haspopup","Sidebar","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","classList","add","data-accordion","activeclassname","exact","PrivateRoute","Component","component","rest","render","from","CreatePackage","Datatable","packageType","deletePkgApiResp","go","charAt","toUpperCase","deletePackage","PackageListView","reverse","packageDetail","reduce","PackageDetails","setPackageDetail","pkgDetailApiResp","PackageEdit","pkgData","selectedOption","handleRadioChange","list","displayFrontend","splice","handleRemoveClick","DatatablePkgHistoryList","PackageHistory","fetchInstData","updated_at","PackageHistoryDetail","setPackageTitle","DatatableUserTypeList","UserPermission","DatatablePackageSetup","updateApi","setUpdateApi","togglePackageStatus","PackageSetup","DatatableInstType","InstituteType","Settings","showUserPermission","setShowUserPermission","showPackageSetup","setShowPackageSetup","showInstituteType","setShowInstituteType","CreateBillForm","setInstituteName","billingAmount","setBillingAmount","instituteIdData","setInstituteIdData","instIdApiResp","userEmail","ChangeInstName","institute_name","year","amount","CreateBill","UpdateBillForm","setMonth","setYear","invoiceApiResp","UpdateBill","DatatableBillingList","DatatableBillingHistoryList","billingListApiResp","jsObjects","obj","BillingListView","BillingInvoiceView","DatatablePaymentList","showPerPage","start","end","PaymentListView","q","setQ","columns","Object","keys","some","column","toString","DatatablePaymentHistoryList","institute_id_string","PaymentHistoryView","instListApiResp","DatatableInstPaymentHistory","InstPaymentHistory","details","PaymentApprove","CreateUserType","permissionError","setPermissionError","setCharAt","str","chr","institute","setInstitute","pkg","setPkg","bill","setBill","payment","setPayment","ViewUserType","EditUserType","AddNewPkgItem","EditNewPkgItem","AddNewInstType","EditNewInstType","textTransform","Compose","emailAddress","to_address","body","minWidth","cursor","ViewEmail","email_id","fileAttachement","setFileAttachement","imageAttachement","setImageAttachement","file_attachement","replace","image_attachement","from_address","sending_date","sendDraftEmail","download","Inbox","showViewEmail","setShowViewEmail","showInbox","setShowInbox","emailId","setEmailId","sender","deleteEmail","Sent","showSent","setShowSent","Draft","showDraft","setShowDraft","Trash","showTrash","setShowTrash","Email","showCompose","setShowCompose","borderBottom","App","interceptors","request","use","toLocaleString","error","Promise","reject","statusText","alert","basename","path","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Zoom","Boolean","hostname","defaults","baseURL","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.00a226f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo2.9af1038c.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo2.9af1038c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.4d66afad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.f4477b86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.33b242a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.b064fe4f.png\";","import React from \"react\";\r\nimport { HorizontalBar, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nexport default function Dashboard() {\r\n  /**************Institute chart start***************** */\r\n  const instituteData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n    const tot_institute_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    tot_institute_gradient.addColorStop(0, \"#ff2260\");\r\n    tot_institute_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const university_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    university_gradient.addColorStop(0, \"#553eff\");\r\n    university_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const college_gradient = ctx.createLinearGradient(0, 0, 270, 0);\r\n    college_gradient.addColorStop(0, \"#0087ff\");\r\n    college_gradient.addColorStop(1, \"#00e09f\");\r\n\r\n    const school_gradient = ctx.createLinearGradient(0, 0, 370, 0);\r\n    school_gradient.addColorStop(0, \"#423eff\");\r\n    school_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Total Institute\", \"University\", \"College\", \"School\"],\r\n      datasets: [\r\n        {\r\n          label: \"# of Institute\",\r\n          data: [100, 60, 20, 20, 0, 100],\r\n          backgroundColor: [\r\n            tot_institute_gradient,\r\n            university_gradient,\r\n            college_gradient,\r\n            school_gradient,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  var instituteOptions = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  /**************Institute chart end***************** */\r\n\r\n  /**************Payment chart start***************** */\r\n  const paymentData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 750, 0);\r\n    invoice_send_gradient.addColorStop(0, \"#553eff\");\r\n    invoice_send_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 550, 0);\r\n    payment_received_gradient.addColorStop(0, \"#ff2260\");\r\n    payment_received_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    due_gradient.addColorStop(0, \"#423eff\");\r\n    due_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Invoice Send\", \"Payment Received\", \"Due\"],\r\n      datasets: [\r\n        {\r\n          label: \"Total\",\r\n          data: [100, 60, 40, 0, 100],\r\n          backgroundColor: [\r\n            invoice_send_gradient,\r\n            payment_received_gradient,\r\n            due_gradient,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  var paymentOptions = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  /**************Payment chart end***************** */\r\n\r\n  /* /****************bandwidth chart stard**********************/\r\n\r\n  const BandWidthData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    invoice_send_gradient.addColorStop(0, \"#3da9f0\");\r\n    invoice_send_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 550, 0);\r\n    payment_received_gradient.addColorStop(0, \"#3da9f0\");\r\n    payment_received_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    due_gradient.addColorStop(0, \"#3da9f0\");\r\n    due_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n      datasets: [\r\n        {\r\n          data: [12, 19, 3, 5, 2, 3],\r\n          backgroundColor: invoice_send_gradient,\r\n        },\r\n        {\r\n          data: [2, 3, 20, 5, 1, 4],\r\n          backgroundColor: payment_received_gradient,\r\n        },\r\n        {\r\n          data: [3, 10, 13, 15, 22, 30],\r\n          backgroundColor: due_gradient,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const BandWidthOptions = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  /****************bandwidth chart end**********************/\r\n\r\n  /****************storage chart start**********************/\r\n\r\n  const StorageData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    invoice_send_gradient.addColorStop(0, \"#fe3eff\");\r\n    invoice_send_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    payment_received_gradient.addColorStop(0, \"#ff2260\");\r\n    payment_received_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    due_gradient.addColorStop(0, \"#423eff\");\r\n    due_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Video\", \"Audio\", \"Documents\", \"Free\"],\r\n      datasets: [\r\n        {\r\n          data: [15, 12, 16, 5],\r\n          backgroundColor: [\r\n            invoice_send_gradient,\r\n            payment_received_gradient,\r\n            due_gradient,\r\n            \"#BCBEC0\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const StorageOptions = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: true,\r\n      position: \"bottom\",\r\n      labels: {\r\n        fontSize: 8,\r\n        boxWidth: 8,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    cutoutPercentage: 50,\r\n  };\r\n  /****************storage chart end**********************/\r\n\r\n  // new chart start\r\n  const data = [\r\n    { name: \"\", uv: 2000, pv: 2400, amt: 2400 },\r\n    { name: \"\", uv: 6000, pv: 1398, amt: 2210 },\r\n    { name: \"\", uv: 2000, pv: 9800, amt: 2290 },\r\n    { name: \"\", uv: 4000, pv: 9800, amt: 2290 },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              <div className=\"row\">\r\n                {/* institute  */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-5 col-xl-5\">\r\n                  <div className=\"custom-info-box\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/attendance.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text\">Institute</span>\r\n                    </div>\r\n                    <div className=\"mt-3 pt-5\">\r\n                      <HorizontalBar\r\n                        data={instituteData}\r\n                        options={instituteOptions}\r\n                        height={200}\r\n                        width={400}\r\n                      />\r\n                    </div>\r\n                    {/* Institute chart end */}\r\n\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                </div>\r\n                {/* Payment */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-5 col-xl-5\">\r\n                  <div className=\"custom-info-box\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/attendance.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text\">Payment</span>\r\n                    </div>\r\n                    <div className=\"mt-3 pt-5\">\r\n                      <HorizontalBar\r\n                        data={paymentData}\r\n                        options={paymentOptions}\r\n                        height={200}\r\n                        width={400}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* System Info */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-2 col-xl-2\">\r\n                  {/* text sytem info */}\r\n                  <div className=\"system-info-box mt-3 mb-2\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/attendance.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text system-info-text\">\r\n                        System Info\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* Storage */}\r\n                  <div className=\"storage-info-box\">\r\n                    <div>\r\n                      <span className=\"system-info-chart-text\">Storage</span>\r\n                      <div className=\"mb-4 mt-1\">\r\n                        <Doughnut\r\n                          data={StorageData}\r\n                          width={100}\r\n                          height={150}\r\n                          options={StorageOptions}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-4\">\r\n                {/* live class */}\r\n                <div className=\"col-sm-12 col-md-12 col-xl-6 col-xl-6 mt-2 mb-2\">\r\n                  <div className=\"live-class-box\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/liveClass.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text\">Live Class</span>\r\n                    </div>\r\n                    {/* Live class chart start */}\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/LiveClass_1.png\"\r\n                        className=\"img-fluid ml-2 mr-4 current-class-img\"\r\n                        width=\"100\"\r\n                      />\r\n                      <span className=\"current-class-text\">Current Class</span>\r\n                      <span className=\"current-class-num\">7</span>\r\n                      <img\r\n                        src=\"img/LiveClass_2.png\"\r\n                        className=\"img-fluid mr-4 this-week-img\"\r\n                        width=\"100\"\r\n                      />\r\n                      <span className=\"this-week-text\">This Week</span>\r\n                      <span className=\"this-week-num\">56</span>\r\n                      <img\r\n                        src=\"img/LiveClass_3.png\"\r\n                        className=\"img-fluid mr-4 this-month-img\"\r\n                        width=\"100\"\r\n                      />\r\n                      <span className=\"this-month-text\">This Month</span>\r\n                      <span className=\"this-month-num\">100</span>\r\n                      <img\r\n                        src=\"img/LiveClass_4.png\"\r\n                        className=\"img-fluid mr-2 last-month-img\"\r\n                        width=\"100\"\r\n                      />\r\n                      <span className=\"last-month-text\">Last Month</span>\r\n                      <span className=\"last-month-num\">220</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* New User */}\r\n                <div className=\"col-sm-12 col-md-12 col-xl-4 col-xl-4 mt-2 mb-2\">\r\n                  <div className=\"new-user-box\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/calender.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text\">New User</span>\r\n                      {/* New User chart start */}\r\n                      <div className=\"container-chart\">\r\n                        <img\r\n                          src=\"img/Asset11.png\"\r\n                          className=\"img-fluid ml-2 mr-4 current-img\"\r\n                          width=\"100\"\r\n                        />\r\n                        <span className=\"current-text\">Current</span>\r\n                        <span className=\"current-number\">450</span>\r\n                        <img\r\n                          src=\"img/Asset12.png\"\r\n                          className=\"img-fluid mr-2 week-img\"\r\n                          width=\"100\"\r\n                        />\r\n                        <span className=\"week-text\">This Week</span>\r\n                        <span className=\"week-number\">94</span>\r\n                      </div>\r\n                      {/* New User chart end */}\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                </div>\r\n                {/* Bandwidth usages */}\r\n                <div className=\"col-sm-12 col-md-12 col-xl-2 col-xl-2 mt-2\">\r\n                  <div className=\"live-class-box\">\r\n                    <div className=\"container-chart\">\r\n                      <span className=\"system-info-chart-text\">\r\n                        Bandwidth usages\r\n                      </span>\r\n                      <div className=\"mb-3 mt-2\">\r\n                        <Bar\r\n                          data={BandWidthData}\r\n                          options={BandWidthOptions}\r\n                          width={100}\r\n                          height={150}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                {/* Churn Rate Details */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-12 col-xl-10 mt-1\">\r\n                  <div className=\"table-info-box\">\r\n                    <div className=\"container-chart\">\r\n                      <img\r\n                        src=\"img/attendance.png\"\r\n                        className=\"mr-5 top-left-icon\"\r\n                        height=\"60\"\r\n                        width=\"60\"\r\n                      />\r\n                      <span className=\"top-left-text\">Churn Rate Details</span>\r\n                    </div>\r\n                    <div className=\"mt-3 pt-5\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-striped table-sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th></th>\r\n                              <th className=\"text-left\">August</th>\r\n                              <th className=\"text-left\">September</th>\r\n                              <th className=\"text-left\">October</th>\r\n                              <th className=\"text-left\">November</th>\r\n                              <th className=\"text-left\">December</th>\r\n                              <th className=\"text-left\">January</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">\r\n                                Existing Customers\r\n                              </td>\r\n                              <td className=\"text-left\">10,000</td>\r\n                              <td className=\"text-left\">14,000</td>\r\n                              <td className=\"text-left\">18,531</td>\r\n                              <td className=\"text-left\">18,531</td>\r\n                              <td className=\"text-left\">18,531</td>\r\n                              <td className=\"text-left\">18,531</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">Existing Churn</td>\r\n                              <td className=\"text-left\">500</td>\r\n                              <td className=\"text-left\">719</td>\r\n                              <td className=\"text-left\">927</td>\r\n                              <td className=\"text-left\">927</td>\r\n                              <td className=\"text-left\">927</td>\r\n                              <td className=\"text-left\">927</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">New Customers</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                              <td className=\"text-left\">5000</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">New Churn</td>\r\n                              <td className=\"text-left\">125</td>\r\n                              <td className=\"text-left\">125</td>\r\n                              <td className=\"text-left\">125</td>\r\n                              <td className=\"text-left\">125</td>\r\n                              <td className=\"text-left\">125</td>\r\n                              <td className=\"text-left\">125</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">\r\n                                Total Customers\r\n                              </td>\r\n                              <td className=\"text-left\">14,375</td>\r\n                              <td className=\"text-left\">18,531</td>\r\n                              <td className=\"text-left\">22,479</td>\r\n                              <td className=\"text-left\">22,479</td>\r\n                              <td className=\"text-left\">22,479</td>\r\n                              <td className=\"text-left\">22,479</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">\r\n                                Adjusted Churn Rate\r\n                              </td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-left pl-5\">\r\n                                Quartely Churn Rate\r\n                              </td>\r\n                              <td className=\"text-left\">5.17%</td>\r\n                              <td className=\"text-left\">5.17%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                              <td className=\"text-left\">5.13%</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* ram and processor */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-12 col-xl-2 mt-3\">\r\n                  <div className=\"info-box\">\r\n                    <div className=\"info-box-content attendance-thumbnail\">\r\n                      <span\r\n                        className=\"info-box-text attendance-text\"\r\n                        style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                      >\r\n                        Ram usages\r\n                      </span>\r\n                      <div className=\"mb-3 mt-5\">\r\n                        <AreaChart\r\n                          width={150}\r\n                          height={100}\r\n                          data={data}\r\n                          margin={{\r\n                            top: 10,\r\n                            right: 30,\r\n                            left: 0,\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis dataKey=\"name\" />\r\n                          <YAxis />\r\n                          <Tooltip />\r\n                          <Area\r\n                            type=\"monotone\"\r\n                            dataKey=\"uv\"\r\n                            stroke=\"#465FFF\"\r\n                            fill=\"#2F8FFF\"\r\n                          />\r\n                        </AreaChart>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n\r\n                  {/* -------------------- */}\r\n                  <div className=\"info-box\">\r\n                    <div className=\"info-box-content attendance-thumbnail\">\r\n                      <span\r\n                        className=\"info-box-text attendance-text\"\r\n                        style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                      >\r\n                        Processor usages\r\n                      </span>\r\n                      <div className=\"mb-3 mt-5\">\r\n                        <AreaChart\r\n                          width={150}\r\n                          height={100}\r\n                          data={data}\r\n                          margin={{\r\n                            top: 10,\r\n                            right: 30,\r\n                            left: 0,\r\n                            bottom: 0,\r\n                          }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis dataKey=\"name\" />\r\n                          <YAxis />\r\n                          <Tooltip />\r\n                          <Area\r\n                            type=\"monotone\"\r\n                            dataKey=\"uv\"\r\n                            stroke=\"#465FFF\"\r\n                            fill=\"#FF2260\"\r\n                          />\r\n                        </AreaChart>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.info-box-content */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingIndicator = (props) => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#F8F8F8AD\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#ff3462\"\r\n          height=\"50\"\r\n          width=\"50\"\r\n          style={{\r\n            zIndex: \"10000\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateUserForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/RegisterNewUserNormal\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"User Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/user-list-view\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  //GET USERTYPE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setRole(userTypeApiResp.data.data.typename);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE -END\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* firstname and lastname */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* email and mobile no */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Email\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n            {errors.email && <ErrorMsg>{errors.email.message}</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^\\+[1-9]{1}[0-9]{3,14}$/,\r\n                  message: \"* Please Enter Valid Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* gender and date of birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* username and password */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.username && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Password\r\n            </label>\r\n            <br />\r\n            <input\r\n              id=\"password-field1\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n\r\n            <span\r\n              onClick={togglePasswordVisiblity}\r\n              toggle=\"#password-field1\"\r\n              className={`fa fa-fw ${\r\n                passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n              } field-icon toggle-password`}\r\n            />\r\n            {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* User Type  */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Type\r\n            </label>\r\n            <br />\r\n            {data.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"role\"\r\n                name=\"role\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select User Type--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {data\r\n                  .sort((a, b) => a.typename.localeCompare(b.typename))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.typename}>\r\n                        {e.typename}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.typename && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Create\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateUserForm from \"./CreateUserForm\";\r\n\r\nexport default function CreateUser() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/user-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateUserForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\n\r\nexport default function PaginationComponent({\r\n  total = 0,\r\n  itemsPerPage = 10,\r\n  currentPage = 1,\r\n  onPageChange,\r\n}) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  //total = total items in response object\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0) {\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  }, [totalPages, currentPage]);\r\n\r\n  if (totalPages === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"float-right\" size=\"sm\">\r\n        <Pagination.Prev\r\n          onClick={() => onPageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n          style={{ fontSize: \"16px\" }}\r\n        >\r\n          Previous\r\n        </Pagination.Prev>\r\n        {paginationItems}\r\n        <Pagination.Next\r\n          onClick={() => onPageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </Pagination.Next>\r\n      </Pagination>\r\n    </>\r\n  );\r\n}\r\n","import Pagination from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function DatatableUserList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Name</th>\r\n            <th className=\"inst-list-th text-center\">User Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"fname\"]} {row[\"lname\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"username\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"mobile\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"role\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/user-detail-view\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-user\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i className=\"fas fa-toggle-on action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserList from \"./DatatableUserList\";\r\nexport default function UserListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllUserNormalList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userListApiResp - \" + JSON.stringify(userListApiResp.data.msg)\r\n      // );\r\n      setData(userListApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.fname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.lname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.email.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.role.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">User Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/create-user\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create User\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableUserList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo(props) {\r\n  const [user, setUser] = useState({});\r\n\r\n  //const location = useLocation();\r\n  //console.log(\"Email: \" + props.email);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserAddress\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: props.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(\"Address Info: \" + response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function UserDetailView() {\r\n  const [user, setUser] = useState({});\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserProfileInfo\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: location.state.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        // console.log(\"User Profile Info: \" + JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          {/*   */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {user.date_of_birth\r\n                                        ? Moment(\r\n                                            new Date(user.date_of_birth)\r\n                                          ).format(\"DD/MM/YYYY\")\r\n                                        : null}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo email={location.state.email} />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = (props) => {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useState(false);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={[isProfileUpdate, setIsProfileUpdate]}>\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAvatar(props) {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAvatarImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                {profileImg ? (\r\n                  <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/avatar-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgAvatar\"\r\n                  />\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserCover(props) {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserCoverImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateUserProfile(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n\r\n  //console.log(location);\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(\"selectedDate ... \" + selectedDate);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n        email: props.email,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/NormalUserProfileInfoUpdate\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n      //console.log(\"data ... \" + JSON.stringify(data));\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push({\r\n              pathname: \"/user-detail-view\",\r\n              state: { email: props.email },\r\n            });\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  //**************************************************************************** */\r\n  const [user, setUser] = useState({});\r\n  //GetNormalUserProfileInfo\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        //console.log(\"Date: \" + response.data.msg.date_of_birth);\r\n        if (response.data.msg.date_of_birth) {\r\n          setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        }\r\n\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              //defaultValue={new Date()}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAddress(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n    data[\"email\"] = props.email;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAddressUpdate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n    console.log(\"Data...\" + JSON.stringify(data));\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          //history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserAddress\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Address - \" + JSON.stringify(userApiResp.data.msg));\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        {/* address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            {perDivisionData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_division\"\r\n                id=\"per_division\"\r\n                value={user.per_division}\r\n                onChange={(e) => ChangePerDivision(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDivisionData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            {perDistrictData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_district\"\r\n                id=\"per_district\"\r\n                value={user.per_district}\r\n                onChange={(e) => ChangePerDistrict(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDistrictData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateUserProfile from \"./UpdateUserProfile\";\r\nimport UpdateUserAddress from \"./UpdateUserAddress\";\r\n\r\nexport default function UpdateInformation({ location }) {\r\n  //console.log(location);\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Update Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? (\r\n          <UpdateUserProfile email={location.state.email} />\r\n        ) : null}\r\n        {showAddressInfo ? (\r\n          <UpdateUserAddress email={location.state.email} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport UpdateUserAvatar from \"./UpdateUserAvatar\";\r\nimport UpdateUserCover from \"./UpdateUserCover\";\r\nimport UpdateInformation from \"./UpdateInformation\";\r\nexport default function UpdateUser() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Update start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 style={{ marginBottom: \"32px\", color: \"black\" }}>\r\n                        Update Profile\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Update\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                //console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? (\r\n                              <UpdateInformation location={location} />\r\n                            ) : null}\r\n                            {showProfilePhoto ? (\r\n                              <UpdateUserAvatar email={location.state.email} />\r\n                            ) : null}\r\n                            {showCoverPhoto ? (\r\n                              <UpdateUserCover email={location.state.email} />\r\n                            ) : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Update end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      {/* Copyright */}\r\n      <div className=\"footer-copyright py-3 small text-center\">\r\n        <span className=\"font-italic\"> Copyright © 2020-2050 | </span>\r\n        <a href=\"https://brlbd.com/\" className=\"text-muted font-italic\">\r\n          Babylon Resources Ltd.\r\n        </a>\r\n      </div>\r\n      {/* Copyright */}\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Footer from \"../Layout/Footer\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function Login(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  /*REMEMBER ME START*/\r\n  const [isRememberMe, setIsRememberMe] = useState(false);\r\n  /*REMEMBER ME END*/\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"Username & Password \" + JSON.stringify(data));\r\n\r\n    const email = data.email;\r\n\r\n    trackPromise(\r\n      axios.post(\"/authenticate\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\" || response.data.status === 200) {\r\n          localStorage.setItem(\r\n            \"token\",\r\n            JSON.stringify(response.data.msg.token)\r\n          );\r\n          localStorage.setItem(\"role\", JSON.stringify(response.data.msg.role));\r\n          if (response.data.msg.role_details) {\r\n            localStorage.setItem(\r\n              \"role_details\",\r\n              JSON.stringify(response.data.msg.role_details)\r\n            );\r\n          }\r\n          localStorage.setItem(\"emailAddress\", email);\r\n          // console.log(\"email: \" + email);\r\n          // localStorage.setItem(\"email\", \"email\");\r\n          //console.log(this.props.history.push(\"/Dashboard\"));\r\n          if (isRememberMe) {\r\n            localStorage.setItem(\"email\", data.email);\r\n            localStorage.setItem(\"password\", data.password);\r\n          } else {\r\n            localStorage.removeItem(\"email\");\r\n            localStorage.removeItem(\"password\");\r\n          }\r\n          props.history.push(\"/dashboard\");\r\n        } else {\r\n          toast(\"Wrong Email Or Password\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-4 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n              {/* user name */}\r\n              <div className=\"mb-3\">\r\n                <label>User Name</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  defaultValue={\r\n                    localStorage.getItem(\"email\")\r\n                      ? localStorage.getItem(\"email\")\r\n                      : \"\"\r\n                  }\r\n                  placeholder=\"Enter Your Email Address\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n              {/* password */}\r\n              <div className=\"mb-3\">\r\n                <label>Password</label>\r\n                <input\r\n                  id=\"password-field1\"\r\n                  type={passwordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  defaultValue={\r\n                    localStorage.getItem(\"password\")\r\n                      ? localStorage.getItem(\"password\")\r\n                      : \"\"\r\n                  }\r\n                  placeholder=\"Enter Your Password\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <span\r\n                  onClick={togglePasswordVisiblity}\r\n                  toggle=\"#password-field1\"\r\n                  className={`fa fa-fw ${\r\n                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                ></span>\r\n                {errors.password && (\r\n                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                )}\r\n              </div>\r\n              {/* remember me and forgot password */}\r\n              <div className=\"form-check\">\r\n                <div className=\"float-left\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input check-input\"\r\n                    id=\"exampleCheck1\"\r\n                    checked={isRememberMe}\r\n                    onChange={() => setIsRememberMe(!isRememberMe)}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n                    Remember Me\r\n                  </label>\r\n                </div>\r\n                <p className=\"mb-1\">\r\n                  <Link\r\n                    to=\"/forget-password\"\r\n                    className=\"float-right small mt-1\"\r\n                  >\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"exampleCheck1\"\r\n                      style={{ fontSize: \"16px\" }}\r\n                    >\r\n                      Forgot Password?\r\n                    </label>\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"input-group mb-5\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-4 pr-5 pl-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"login-footer\">\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-8\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1 className=\"pt-5\">Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function ForgetPassword(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    trackPromise(\r\n      axios.post(\"/password-reset-request\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\r\n            \"Password reset link has been sent to your mail.  \\nPlease check your mail.\",\r\n            { closeOnClick: true, autoClose: false, className: \"toast-error\" }\r\n          );\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-3 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-2 mr-4 ml-4\">\r\n            <h4 className=\"font-weight-normal float-left\">\r\n              Forgot your password?\r\n            </h4>\r\n            <p className=\"font-weight-normal text-size float-left\">\r\n              Enter your email below to receive your password reset instruction\r\n            </p>\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"mt-2\" onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"mb-2\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter your email ID\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n\r\n              <div className=\"input-group\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-3 pr-5 pl-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n              <p className=\"mb-5 mt-1 \">\r\n                <Link to=\"/\" className=\"small\">\r\n                  <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back to\r\n                  Login Page\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-9\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              minHeight: \"100vh\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1>Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg2.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ResetPassword({ match, props }) {\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    // data[\"property\"] = value;\r\n    const reset_token = match.params.token;\r\n    data[\"token\"] = reset_token;\r\n    trackPromise(\r\n      axios.post(\"/password-reset\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Password Reset Success\", {\r\n            className: \"toast-error\",\r\n          });\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-3 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-2 mr-4 ml-4\">\r\n            <h4 className=\"font-weight-normal\">Reset Password</h4>\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"mt-3\" onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"mb-3\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Your Email Address\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label>New Password</label>\r\n                <input\r\n                  id=\"password-field2\"\r\n                  type={newPasswordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your New Password\"\r\n                  name=\"password\"\r\n                  ref={register({\r\n                    required: \"* This Field is Required\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"* Minimum 8 Character Required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <span\r\n                  onClick={toggleNewPasswordVisiblity}\r\n                  toggle=\"#password-field2\"\r\n                  className={`fa fa-fw ${\r\n                    newPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                />\r\n                {errors.password && (\r\n                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label>Confirm Password</label>\r\n                <input\r\n                  id=\"password-field3\"\r\n                  type={confirmPasswordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your Confirm Password\"\r\n                  name=\"password_confirmation\"\r\n                  ref={register({\r\n                    required: \"* This Field is Required\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"* Minimum 8 Character Required\",\r\n                    },\r\n                    validate: (value) =>\r\n                      value === password.current ||\r\n                      \"Both Password Should Match\",\r\n                  })}\r\n                />\r\n                <span\r\n                  onClick={toggleConfirmPasswordVisiblity}\r\n                  toggle=\"#password-field3\"\r\n                  className={`fa fa-fw ${\r\n                    confirmPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                />\r\n                {errors.password_confirmation && (\r\n                  <ErrorMsg>{errors.password_confirmation.message}</ErrorMsg>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-group\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-4 pr-4 pl-4\"\r\n                  type=\"submit\"\r\n                >\r\n                  Reset Password\r\n                </button>\r\n              </div>\r\n              <p className=\"mb-5 mt-1\">\r\n                <Link to=\"/\" className=\"small\">\r\n                  <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back to\r\n                  Login Page\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-9\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              minHeight: \"100vh\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1>Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AccountInfo() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/password-update\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(\"The old password you have entered is incorrect\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  // -api for get user info\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [oldPasswordShown, setOldPasswordShown] = useState(false);\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleOldPasswordVisiblity = () => {\r\n    setOldPasswordShown(oldPasswordShown ? false : true);\r\n  };\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <h4 className=\"heading\">Account Info</h4>\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Account Details\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Change Password\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table  table-sm table-borderless w-50 table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.fname} {user.lname}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.username}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Type</td>\r\n                                  <td className=\"text-left\">: {user.role}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Password</td>\r\n                                  <td className=\"text-left\">: ********</td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* input field */}\r\n                          {/* form start */}\r\n                          <form\r\n                            className=\"form-horizontal\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"card-body padding-left\">\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type Your Old Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field1\"\r\n                                    type={\r\n                                      oldPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"old_password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleOldPasswordVisiblity}\r\n                                    toggle=\"#password-field1\"\r\n                                    className={`fa fa-fw ${\r\n                                      oldPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.old_password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.old_password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type New Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field2\"\r\n                                    type={\r\n                                      newPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleNewPasswordVisiblity}\r\n                                    toggle=\"#password-field2\"\r\n                                    className={`fa fa-fw ${\r\n                                      newPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Confirm Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field3\"\r\n                                    type={\r\n                                      confirmPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password_confirmation\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                      validate: (value) =>\r\n                                        value === password.current ||\r\n                                        \"Both Password Should Match\",\r\n                                    })}\r\n                                  />\r\n                                  <span\r\n                                    onClick={toggleConfirmPasswordVisiblity}\r\n                                    toggle=\"#password-field3\"\r\n                                    className={`fa fa-fw ${\r\n                                      confirmPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password_confirmation && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password_confirmation.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <button type=\"submit\" className=\"btn btn-update\">\r\n                                Update\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteCreate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  const [allPkgData, setAllPkgData] = useState([]);\r\n  const [instituteTypes, setInstituteTypes] = useState([]);\r\n  const [typeOfInst, setTypeOfInst] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setAllPkgData(allPkgApiResp.data.msg);\r\n      //get institute type data\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setInstituteTypes(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  let parameter = [];\r\n  let packages = {};\r\n  function getPackageParameter(data) {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    var total_parameter = 0;\r\n    for (let key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        if (key.includes(\"name-\")) {\r\n          total_parameter = total_parameter + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      let object = {};\r\n      let name_key = `name-${i}`;\r\n      let quantity_key = `quantity-${i}`;\r\n      let price_key = `price-${i}`;\r\n\r\n      object[\"name\"] = data[name_key];\r\n      object[\"quantity\"] = data[quantity_key];\r\n      object[\"price\"] = data[price_key];\r\n\r\n      parameter.push(object);\r\n    }\r\n    //console.log(JSON.stringify(parameter));\r\n\r\n    return parameter;\r\n  }\r\n  let history = useHistory();\r\n  // POST INSTITUTE & PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    if (subscription_s_date) {\r\n      if (subscription_e_date) {\r\n        if (last_payment_date) {\r\n          // IF PACKAGE IS SELECTED FROM DROPDOWN THEN isPackageName = TRUE\r\n          if (isPackageName) {\r\n            // console.log(\r\n            //   \"Drop Down Package data: \" +\r\n            //     JSON.stringify(data) +\r\n            //     \" selected: \" +\r\n            //     selectedPackageId\r\n            // );\r\n            let institute_id =\r\n              data.typeOfInst +\r\n              \"-\" +\r\n              data.instNameShortForm +\r\n              \"-\" +\r\n              data.serialNum;\r\n            const instituteData = {\r\n              package_id: selectedPackageId,\r\n              institute_id: institute_id,\r\n              password: data.password,\r\n              name: data.instituteName,\r\n              address: data.address,\r\n              email: data.email,\r\n              phone: data.phone,\r\n              subscription_s_date: subscription_s_date,\r\n              subscription_e_date: subscription_e_date,\r\n              last_payment: last_payment_date,\r\n              payment_amount: data.payableAmount,\r\n            };\r\n            console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n            postData(instituteData);\r\n            async function postData(instituteData) {\r\n              let accessToken = localStorage.getItem(\"token\");\r\n              //alert(accessToken);\r\n              accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n              var config = {\r\n                method: \"post\",\r\n                url: \"/institute-create\",\r\n                headers: {\r\n                  Authorization: `Bearer ${accessToken}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                data: instituteData,\r\n              };\r\n              const createInstApiResp = await trackPromise(axios(config));\r\n              //console.log(\"createInstApiResp - \" + createInstApiResp.data);\r\n              if (createInstApiResp.data.status === \"ok\") {\r\n                // toast(\"Institute Created Successfully\", {\r\n                //   className: \"toast-error\",\r\n                // });\r\n                // send nisa apu data\r\n                let integer_id = createInstApiResp.data.integer_id;\r\n                console.log(\"integer_id: \" + integer_id);\r\n                const instituteData = {\r\n                  subscription_s_date: subscription_s_date,\r\n                  subscription_e_date: subscription_e_date,\r\n                  last_payment: last_payment_date,\r\n                  payment_amount: data.payableAmount,\r\n                  firstName: data.instituteName,\r\n                  email: data.email,\r\n                  mobile: data.phone,\r\n                  username: institute_id,\r\n                  password: data.password,\r\n                  instituteId: integer_id,\r\n                };\r\n                console.log(\"instituteData: \" + JSON.stringify(instituteData));\r\n\r\n                const sendApiResponse = await trackPromise(\r\n                  axios.post(\r\n                    \"http://34.66.76.39:9091/api/other/user\",\r\n                    instituteData\r\n                  )\r\n                );\r\n                if (sendApiResponse.data.status === \"ok\") {\r\n                  toast(\"Institute Created Successfully\", {\r\n                    className: \"toast-error\",\r\n                  });\r\n                  history.push(\"/institute-list-view\");\r\n                } else {\r\n                  toast(createInstApiResp.data.msg, {\r\n                    className: \"toast-error\",\r\n                  });\r\n                }\r\n                // send nisa apu data\r\n\r\n                // history.push(\"/institute-list-view\");\r\n              } else {\r\n                toast(createInstApiResp.data.msg, {\r\n                  className: \"toast-error\",\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            //console.log(\"DATA: \" + JSON.stringify(data));\r\n\r\n            packages = {\r\n              title: data.packageTitle,\r\n              description: data.packageDescription,\r\n              display: data.display,\r\n              type: \"custom\",\r\n              payable_amount: data.payableAmount,\r\n            };\r\n\r\n            const parameters = getPackageParameter(data);\r\n            //console.log(\"parameters: \" + JSON.stringify(parameters));\r\n\r\n            const packageData = {\r\n              package: packages,\r\n              parameters: parameters,\r\n            };\r\n\r\n            postData(packageData);\r\n            async function postData(packageData) {\r\n              let accessToken = localStorage.getItem(\"token\");\r\n              //alert(accessToken);\r\n              accessToken = accessToken.substring(1, accessToken.length - 1);\r\n              var config = {\r\n                method: \"post\",\r\n                url: \"/package-save\",\r\n                headers: {\r\n                  Authorization: `Bearer ${accessToken}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                data: packageData,\r\n              };\r\n              // console.log(\"PACKAGE DATA---\" + JSON.stringify(packageData));\r\n              const savePkgApiResp = await trackPromise(axios(config));\r\n              //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n              if (savePkgApiResp.data.status === \"ok\") {\r\n                let packageId = savePkgApiResp.data.msg.package_id;\r\n                //console.log(\"packageId: \" + packageId);\r\n                let institute_id =\r\n                  data.typeOfInst +\r\n                  \"-\" +\r\n                  data.instNameShortForm +\r\n                  \"-\" +\r\n                  data.serialNum;\r\n                const instituteData = {\r\n                  package_id: packageId,\r\n                  institute_id: institute_id,\r\n                  password: data.password,\r\n                  name: data.instituteName,\r\n                  address: data.address,\r\n                  email: data.email,\r\n                  phone: data.phone,\r\n                  subscription_s_date: subscription_s_date,\r\n                  subscription_e_date: subscription_e_date,\r\n                  last_payment: last_payment_date,\r\n                  payment_amount: data.payableAmount,\r\n                };\r\n                //console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n                postData(instituteData);\r\n                async function postData(instituteData) {\r\n                  let accessToken = localStorage.getItem(\"token\");\r\n                  //alert(accessToken);\r\n                  accessToken = accessToken.substring(\r\n                    1,\r\n                    accessToken.length - 1\r\n                  );\r\n\r\n                  var config = {\r\n                    method: \"post\",\r\n                    url: \"/institute-create\",\r\n                    headers: {\r\n                      Authorization: `Bearer ${accessToken}`,\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                    data: instituteData,\r\n                  };\r\n                  const createInstApiResp = await trackPromise(axios(config));\r\n                  //console.log(\"createInstApiResp - \" + createInstApiResp.data);\r\n                  if (createInstApiResp.data.status === \"ok\") {\r\n                    // send nisa apu data\r\n                    let integer_id = createInstApiResp.data.integer_id;\r\n                    console.log(\"integer_id: \" + integer_id);\r\n                    const instituteData = {\r\n                      subscription_s_date: subscription_s_date,\r\n                      subscription_e_date: subscription_e_date,\r\n                      last_payment: last_payment_date,\r\n                      payment_amount: data.payableAmount,\r\n                      firstName: data.instituteName,\r\n                      email: data.email,\r\n                      mobile: data.phone,\r\n                      username: institute_id,\r\n                      password: data.password,\r\n                      instituteId: integer_id,\r\n                    };\r\n                    console.log(\r\n                      \"instituteData: \" + JSON.stringify(instituteData)\r\n                    );\r\n\r\n                    const sendApiResponse = await trackPromise(\r\n                      axios.post(\r\n                        \"http://34.66.76.39:9091/api/other/user\",\r\n                        instituteData\r\n                      )\r\n                    );\r\n                    if (sendApiResponse.data.status === \"ok\") {\r\n                      toast(\"Institute Created Successfully\", {\r\n                        className: \"toast-error\",\r\n                      });\r\n                      history.push(\"/institute-list-view\");\r\n                    } else {\r\n                      toast(createInstApiResp.data.msg, {\r\n                        className: \"toast-error\",\r\n                      });\r\n                    }\r\n                    // send nisa apu data\r\n                    // toast(\"Institute Created Successfully\", {\r\n                    //   className: \"toast-error\",\r\n                    // });\r\n                    // history.push(\"/institute-list-view\");\r\n                  } else {\r\n                    toast(createInstApiResp.data.msg, {\r\n                      className: \"toast-error\",\r\n                    });\r\n                  }\r\n                }\r\n              } else {\r\n                toast(savePkgApiResp.data.msg, {\r\n                  className: \"toast-error\",\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          setErrors_last_payment_date(true);\r\n        }\r\n      } else {\r\n        setErrors_subscription_e_date(true);\r\n      }\r\n    } else {\r\n      setErrors_subscription_s_date(true);\r\n    }\r\n  };\r\n  // POST INSTITUTE & PACKAGE DATA -END\r\n  // ---------------------------------------------------------------------------------------------\r\n  /*PACKAGE START***************************************************************************************************/\r\n  const [isCreateNewPackage, setIsCreateNewPackage] = useState(false);\r\n  const [isPackageName, setIsPackageName] = useState(false);\r\n\r\n  const [pkgTitle, setPkgTitle] = useState(\"\");\r\n  const [pkgDescription, setPkgDescription] = useState(\"\");\r\n  const [displayFrontEnd, setDisplayFrontEnd] = useState(\"On\");\r\n  const [payableAmount, setPayableAmount] = useState(\"\");\r\n  const [pkgParamList, setPkgParamList] = useState([]);\r\n  const [selectedPackageId, setSelectedPackageId] = useState(\"\");\r\n\r\n  //select a package name and update package title and package description -start\r\n  const handlePackageName = (e) => {\r\n    if (!isPackageName) {\r\n      setIsPackageName(true); //dropdown\r\n    }\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    let pkgId = optionElement.getAttribute(\"data-id\");\r\n    setSelectedPackageId(pkgId);\r\n    // console.log(\"PKGID : \" + pkgId);\r\n    // console.log(\"TITLE: \" + allPkgData.find((x) => x.id === pkgId).title);\r\n    // console.log(\r\n    //   \"DESCRIPTION: \" + allPkgData.find((x) => x.id === pkgId).description\r\n    // );\r\n    setPkgTitle(allPkgData.find((x) => x.id === pkgId).title);\r\n    setPkgDescription(allPkgData.find((x) => x.id === pkgId).description);\r\n    setDisplayFrontEnd(allPkgData.find((x) => x.id === pkgId).display);\r\n    setPayableAmount(allPkgData.find((x) => x.id === pkgId).payable_amount);\r\n    // get package parameter (name, price, quantity) by pkgId\r\n    async function fetchData(pkgId) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/parameters\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          package_id: pkgId,\r\n        },\r\n      };\r\n      const pkgParamApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"pkgParamApiResp - \" + JSON.stringify(pkgParamApiResp.data.msg)\r\n      // );\r\n      if (pkgParamApiResp.data.status === \"ok\") {\r\n        setPkgParamList(pkgParamApiResp.data.msg);\r\n        // toast(\"Institute Created Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n      } else {\r\n        toast(pkgParamApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n    fetchData(pkgId);\r\n  };\r\n  //select a package name and update package title and package description -end\r\n\r\n  /*PACKAGE END****************************************************************************************************/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  // modifing code start here-----------------------------------\r\n\r\n  //GET PACKAGE PARAMETER -START\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let apiResponse = response.data.data;\r\n      const apiResponseFiltered = apiResponse.filter(\r\n        (res) => res.active === \"1\"\r\n      );\r\n      //console.log(apiResponseFiltered);\r\n      setData(apiResponseFiltered);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE PARAMETER -END\r\n\r\n  // calculate payable amount\r\n  function calculateTotalAmount() {\r\n    let total_parameter = data.length;\r\n\r\n    let total = 0.0;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (\r\n        document.getElementById(\"name-\" + i).value.toLowerCase() !== \"discount\"\r\n      ) {\r\n        if (document.getElementById(\"price-\" + i).value) {\r\n          //console.log(\"Price: \" + document.getElementById(\"price-\" + i).value);\r\n          total =\r\n            parseFloat(total) +\r\n            parseFloat(document.getElementById(\"price-\" + i).value);\r\n          //console.log(\"Total: \" + total);\r\n        }\r\n      }\r\n    }\r\n\r\n    return parseFloat(total);\r\n  }\r\n  const [discountError, setDiscountError] = useState(false);\r\n  // calculate discount\r\n  function calculateDiscount(totalAmount) {\r\n    // -------------------------\r\n    let total_parameter = data.length;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (\r\n        document.getElementById(\"name-\" + i).value.toLowerCase() === \"discount\"\r\n      ) {\r\n        if (document.getElementById(\"price-\" + i).value) {\r\n          let discountValue = parseFloat(\r\n            document.getElementById(\"price-\" + i).value\r\n          );\r\n          if (discountValue <= totalAmount) {\r\n            setDiscountError(false);\r\n            console.log(\"discountValue: \" + discountValue + \"i: \" + i);\r\n            totalAmount = totalAmount - discountValue;\r\n          } else {\r\n            setDiscountError(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // ------------------------------\r\n\r\n    return parseFloat(totalAmount);\r\n  }\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index, package_amount, package_number) => {\r\n    const { name, value } = e.target;\r\n    // console.log(\r\n    //   \"Name: \" +\r\n    //     name +\r\n    //     \"\\nValue: \" +\r\n    //     value +\r\n    //     \"\\nIndex: \" +\r\n    //     index +\r\n    //     \"\\npackage_amount: \" +\r\n    //     package_amount +\r\n    //     \"\\npackage_number: \" +\r\n    //     package_number\r\n    // );\r\n    let quantity = parseInt(value);\r\n    let price = parseFloat(package_amount);\r\n    let number = parseInt(package_number);\r\n\r\n    let unitPrice = parseFloat((price / number) * quantity);\r\n    unitPrice = parseFloat(unitPrice.toFixed(2));\r\n    document.getElementById(\"price-\" + index).value = unitPrice;\r\n\r\n    let totalAmount = calculateTotalAmount();\r\n    //console.log(\"totalAmount: \" + totalAmount);\r\n    totalAmount = calculateDiscount(totalAmount);\r\n    //console.log(\"After Discount: \" + totalAmount);\r\n\r\n    document.getElementById(\"payableAmount\").value = totalAmount;\r\n  };\r\n  //date start-----------------\r\n  const [subscription_s_date, setSubscription_s_date] = useState(\"\");\r\n  const [errors_subscription_s_date, setErrors_subscription_s_date] = useState(\r\n    false\r\n  );\r\n  const [subscription_e_date, setSubscription_e_date] = useState(\"\");\r\n  const [errors_subscription_e_date, setErrors_subscription_e_date] = useState(\r\n    false\r\n  );\r\n  const [last_payment_date, setLast_payment_date] = useState(\"\");\r\n  const [errors_last_payment_date, setErrors_last_payment_date] = useState(\r\n    false\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create an Institute</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            {/* institute id */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-12\">\r\n                                <label>\r\n                                  <b>Institute ID:</b>\r\n                                </label>\r\n                                <br />\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Type of\r\n                                  Institute\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"typeOfInst\"\r\n                                  defaultValue={typeOfInst}\r\n                                  onChange={(e) =>\r\n                                    setTypeOfInst(e.target.value)\r\n                                  }\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                >\r\n                                  <option defaultValue hidden>\r\n                                    --Select--\r\n                                  </option>\r\n                                  {instituteTypes\r\n                                    .sort((a, b) =>\r\n                                      a.short_form.localeCompare(b.short_form)\r\n                                    )\r\n                                    .map((e, key) => {\r\n                                      return e.active === \"1\" ? (\r\n                                        <option\r\n                                          key={key}\r\n                                          data-id={e.id}\r\n                                          value={e.short_form}\r\n                                        >\r\n                                          {e.short_form}\r\n                                        </option>\r\n                                      ) : null;\r\n                                    })}\r\n                                </select>\r\n                                {errors.typeOfInst && (\r\n                                  <ErrorMsg>\r\n                                    {errors.typeOfInst.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instNameShortForm\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.instNameShortForm && (\r\n                                  <ErrorMsg>\r\n                                    {errors.instNameShortForm.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Serial\r\n                                  Number\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"serialNum\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.serialNum && (\r\n                                  <ErrorMsg>\r\n                                    {errors.serialNum.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* password */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instituteName\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instituteName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Institute Address */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Email Address  and Phone / Mobile No.*/}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Email\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Phone /\r\n                                  Mobile No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* SELECT DROPDOWN Package Name */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  {isCreateNewPackage ? null : (\r\n                                    <span className=\"red-star\">*</span>\r\n                                  )}\r\n                                  Package Name\r\n                                </label>\r\n                                {/* Create New Package BUTTON */}\r\n                                <button\r\n                                  disabled={isPackageName ? true : false}\r\n                                  onClick={() => setIsCreateNewPackage(true)}\r\n                                  className=\"shadow float-right badge badge-pill badge-bg mb-3\"\r\n                                  style={{ padding: \"10px 24px\" }}\r\n                                >\r\n                                  Create New Package\r\n                                </button>\r\n                                <br />\r\n                                {/* IF BUTTON PRESS THEN DROPDOWN WILL DISABLE */}\r\n                                {isCreateNewPackage ? (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    disabled\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                  </select>\r\n                                ) : (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    defaultValue=\"--Select Package--\"\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                    {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) \r\n                                    ONLY SHOW DEFAULT PACKAGE*/}\r\n                                    {allPkgData\r\n                                      .sort((a, b) =>\r\n                                        a.title.localeCompare(b.title)\r\n                                      )\r\n                                      .map((e, key) => {\r\n                                        return e.type === \"default\" ? (\r\n                                          <option\r\n                                            key={key}\r\n                                            data-id={e.id}\r\n                                            value={e.title}\r\n                                          >\r\n                                            {e.title}\r\n                                          </option>\r\n                                        ) : null;\r\n                                      })}\r\n                                  </select>\r\n                                )}\r\n                                {errors.package && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF BUTTON PRESS THEN DYNAMICALLY INPUT FIELD CREATED */}\r\n                            {isCreateNewPackage ? (\r\n                              <div>\r\n                                {/* Package Name*/}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Name\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* Package Description */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM BUTTON SO CUSTOM PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"custom\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div>\r\n                                {/* Package Title */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Title\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      readOnly\r\n                                      value={pkgTitle}\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* Description */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      readOnly\r\n                                      value={pkgDescription}\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM DROPDOWN SO DEFAULT PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"default\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            {/* Package Display Front-end ? */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Is Package Display Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    {displayFrontEnd === \"On\" ? (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        defaultValue=\"On\"\r\n                                        defaultChecked\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    ) : (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        defaultValue=\"On\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    )}\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    {displayFrontEnd === \"Off\" ? (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        defaultValue=\"Off\"\r\n                                        defaultChecked\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    ) : (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        defaultValue=\"Off\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    )}\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                </label>\r\n                                <br />\r\n                                {pkgParamList.map((data, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <label>Title</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          id={`name-${i}`}\r\n                                          name={`name-${i}`}\r\n                                          defaultValue={data.name}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Quantity</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`quantity-${i}`}\r\n                                          defaultValue={data.quantity}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Amount</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          id={`price-${i}`}\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`price-${i}`}\r\n                                          defaultValue={data.price}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                </label>\r\n                                <br />\r\n                                {data.map((data, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <label>Title</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          id={`name-${i}`}\r\n                                          name={`name-${i}`}\r\n                                          defaultValue={data.package_item_name}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Quantity</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`quantity-${i}`}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              i,\r\n                                              data.package_amount,\r\n                                              data.package_number\r\n                                            )\r\n                                          }\r\n                                          min=\"0\"\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Amount</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          id={`price-${i}`}\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`price-${i}`}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                                {discountError ? (\r\n                                  <div className=\"col-12\">\r\n                                    <ErrorMsg>\r\n                                      * Discount Value Should be Less Than\r\n                                      Payable Amount\r\n                                    </ErrorMsg>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            {/* Subscription Duration and Last Payment Date*/}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <DatePicker\r\n                                      className=\"form-control\"\r\n                                      selected={subscription_s_date}\r\n                                      //defaultValue={new Date()}\r\n                                      onChange={(date) => {\r\n                                        setSubscription_s_date(date);\r\n                                        setErrors_subscription_s_date(false);\r\n                                      }}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      showYearDropdown\r\n                                      scrollableMonthYearDropdown\r\n                                      placeholderText=\"dd/mm/yyyy\"\r\n                                    />\r\n                                    {errors_subscription_s_date ? (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    ) : null}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <DatePicker\r\n                                      className=\"form-control\"\r\n                                      selected={subscription_e_date}\r\n                                      //defaultValue={new Date()}\r\n                                      onChange={(date) => {\r\n                                        setSubscription_e_date(date);\r\n                                        setErrors_subscription_e_date(false);\r\n                                      }}\r\n                                      minDate={subscription_s_date}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      showYearDropdown\r\n                                      scrollableMonthYearDropdown\r\n                                      placeholderText=\"dd/mm/yyyy\"\r\n                                    />\r\n                                    {errors_subscription_e_date ? (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Last\r\n                                  Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <DatePicker\r\n                                  className=\"form-control\"\r\n                                  selected={last_payment_date}\r\n                                  //defaultValue={new Date()}\r\n                                  onChange={(date) => {\r\n                                    setLast_payment_date(date);\r\n                                    setErrors_last_payment_date(false);\r\n                                  }}\r\n                                  dateFormat=\"dd/MM/yyyy\"\r\n                                  showYearDropdown\r\n                                  scrollableMonthYearDropdown\r\n                                  placeholderText=\"dd/mm/yyyy\"\r\n                                />\r\n                                {errors_last_payment_date ? (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                ) : null}\r\n                              </div>\r\n                            </div>\r\n                            {/* payable amount */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                <label>Payable Amount</label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  readOnly\r\n                                  id=\"payableAmount\"\r\n                                  name=\"payableAmount\"\r\n                                  defaultValue={\r\n                                    payableAmount ? payableAmount : \"\"\r\n                                  }\r\n                                  className=\"form-control\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Phone / Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Subscription End</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"phone\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {Moment.utc(row[\"subscription_e_date\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Active\" : \"Inactive\"}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() => history.push(`/institute-detail/${row[\"id\"]}`)}\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/institute-update/${row[\"id\"]}/${row[\"package_id\"]}`\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                {row[\"id\"] ? (\r\n                  <i\r\n                    onClick={() => toggleInstStatus(row[\"id\"])}\r\n                    className={`fas ${\r\n                      isActive ? \"fa-toggle-off\" : \"fa-toggle-on\"\r\n                    } action-icon`}\r\n                  ></i>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstList from \"./DatatableInstList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function InstituteListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.phone.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.subscription_e_date.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/institute-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Institute\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstDetail({ data }) {\r\n  //console.log(\"Institute Details: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8 table-font-100\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute ID</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.institute_id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.name}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Status</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              :{\" \"}\r\n              {data.active === \"1\" ? (\r\n                <span className=\"text-green\">Active</span>\r\n              ) : (\r\n                <span className=\"text-red\">Inactive</span>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Email Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Phone / Mobile No.</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.phone}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Package Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              <Link to={`/package-details/${data.package_id}`}>\r\n                : {data.package_title}\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription Start Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_s_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription End Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_e_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Payable Amount</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.payment_amount}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport DatatableInstDetail from \"./DatatableInstDetail\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function InstituteDetails() {\r\n  //GET INSTITUTE DETAIL -START\r\n  const [instDetail, setInstDetail] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instDetailApiResp - \" + instDetailApiResp.data.msg);\r\n      setInstDetail(instDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INSTITUTE DETAIL -END\r\n  //\r\n\r\n  let history = useHistory();\r\n  //institute delete\r\n  async function deleteInstitute(instituteId) {\r\n    // console.log(\"instituteId : \" + instituteId);\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"delete\",\r\n      url: `/institute-delete/${instituteId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const deleteInstApiResp = await trackPromise(axios(config));\r\n    //console.log(\"deleteInstApiResp - \" + deleteInstApiResp.data);\r\n    if (deleteInstApiResp.data.status === \"ok\") {\r\n      toast(\"Institute Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      history.push(\"/institute-list-view\");\r\n    } else {\r\n      toast(deleteInstApiResp.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Institute Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            {/* DISPLAY IN DETAILS FULL INFO OF INSTITUTE  */}\r\n                            <DatatableInstDetail data={instDetail} />\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteUpdate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const { id, package_id } = useParams();\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: package_id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [package_id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  //GET INSTITUTE DATA -START\r\n  const [instData, setInstData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"instApiResp - \" + JSON.stringify(instApiResp.data.msg.params));\r\n      setInstData(instApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, [id]);\r\n  //GET INSTITUTE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    // console.log(\"Form Data: \" + JSON.stringify(data));\r\n\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: package_id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    // console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        //console.log(\"Package Update Successfully\");\r\n        // toast(\"Package Update Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n        // history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n\r\n    //seperate institute vlaues from data object start\r\n    const instituteData = {\r\n      id: id,\r\n      package_id: package_id,\r\n      institute_id: data.institute_id,\r\n      password: data.password,\r\n      name: data.instName,\r\n      address: data.address,\r\n      email: data.email,\r\n      phone: data.phone,\r\n      subscription_s_date: data.subscription_s_date,\r\n      subscription_e_date: data.subscription_e_date,\r\n      last_payment: data.last_payment,\r\n      payment_amount: data.payment_amount,\r\n    };\r\n    // console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n    //seperate institute vlaues from data object end\r\n    postInstData(instituteData);\r\n    async function postInstData(instituteData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: instituteData,\r\n      };\r\n      const updateInstApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updateInstApiResp - \" + updateInstApiResp.data);\r\n      if (updateInstApiResp.data.status === \"ok\") {\r\n        toast(\"Institute Information Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        // history.push(\"/institute-list-view\");\r\n      } else {\r\n        toast(updateInstApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Information</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  ID\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_id\"\r\n                                  defaultValue={instData.institute_id}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_id && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  defaultValue={instData.password}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                    minLength: {\r\n                                      value: 6,\r\n                                      message: \"* Minimum 6 Character Required\",\r\n                                    },\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instName\"\r\n                                  defaultValue={instData.name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  defaultValue={instData.address}\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Mail Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  defaultValue={instData.email}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Phone No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  defaultValue={instData.phone}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_s_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_s_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_s_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_e_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_e_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_e_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Last Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"date\"\r\n                                  className=\"form-control\"\r\n                                  name=\"last_payment\"\r\n                                  defaultValue={instData.last_payment}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.last_payment && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Payable\r\n                                  Amount\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"payment_amount\"\r\n                                  defaultValue={instData.payment_amount}\r\n                                  min=\"0\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.payment_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n\r\n                            {/* PACKAGE PART START IT WILL COPY FROM EDIT PACKAGE ************************************************/}\r\n                            {/* <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null} */}\r\n\r\n                            {/* PACKAGE PART END-------------------------------------------- */}\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function ViewProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n    var response = {};\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          setIsProfileUpdate(false);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"col-6\" style={{ paddingTop: \"8px\" }}>\r\n                            <Link to=\"/edit-profile\">\r\n                              <span\r\n                                className=\"shadow float-right badge badge-pill badge-bg\"\r\n                                style={{ padding: \"10px 24px\" }}\r\n                              >\r\n                                <i className=\"far fa-edit pr-2\"></i>Edit Profile\r\n                              </span>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {Moment(\r\n                                        new Date(user.date_of_birth)\r\n                                      ).format(\"DD/MM/YYYY\")}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadAvatar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"./img/avatar-default.png\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        console.log(reader);\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/avatar-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadCover() {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      let id = localStorage.getItem(\"id\");\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/cover-img-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport Moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/info-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data,\r\n      };\r\n\r\n      async function fetchData() {\r\n        const userApiResp = await trackPromise(axios(config));\r\n        // console.log(JSON.stringify(userApiResp.data));\r\n        if (userApiResp.data.status === \"ok\") {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      }\r\n      fetchData();\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  ///api for get user info--------------\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        // console.log(response.data.msg);\r\n        setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n      if (isProfileUpdate) {\r\n        history.push(\"/view-profile\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [isProfileUpdate]);\r\n  //console.log(user.date_of_birth);\r\n  //\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateAddress() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  let user_id = localStorage.getItem(\"id\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data[\"user_id\"] = user_id;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/update-user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-address\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"TEST user - \" + userApiResp.data.msg);\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_division\"\r\n              id=\"per_division\"\r\n              value={user.per_division}\r\n              onChange={(e) => ChangePerDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDivisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_district\"\r\n              id=\"per_district\"\r\n              value={user.per_district}\r\n              onChange={(e) => ChangePerDistrict(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDistrictData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport UpdateAddress from \"./UpdateAddress\";\r\n\r\nexport default function EditInformation() {\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Edit Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? <UpdateProfile /> : null}\r\n        {showAddressInfo ? <UpdateAddress /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadAvatar from \"./UploadAvatar\";\r\nimport UploadCover from \"./UploadCover\";\r\nimport EditInformation from \"./EditInformation\";\r\n\r\nexport default function EditProfile() {\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Edit Profile</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link to=\"/view-profile\">\r\n                        <span\r\n                          className=\"shadow float-right badge badge-pill badge-bg\"\r\n                          style={{ padding: \"10px 24px\" }}\r\n                        >\r\n                          <i className=\"far fa-user pr-2\"></i>View My Profile\r\n                        </span>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Edit\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                // console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? <EditInformation /> : null}\r\n                            {showProfilePhoto ? <UploadAvatar /> : null}\r\n                            {showCoverPhoto ? <UploadCover /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function Logout() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  // alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  // const apiUrl = \"https://jsonplaceholder.typicode.com/posts?userId=1\";\r\n\r\n  // alert(accessToken);\r\n\r\n  var config = {\r\n    method: \"get\",\r\n    url: \"/logout\",\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    },\r\n  };\r\n\r\n  axios(config).then(function (response) {\r\n    // console.log(JSON.stringify(response.data));\r\n    if (response.data.status === \"ok\") {\r\n      // localStorage.clear();\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"emailAddress\");\r\n\r\n      // if logout success\r\n      //props.history.push(\"/\");\r\n      // auth.logout(() => {\r\n\r\n      // });\r\n    }\r\n  });\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport logo from \"./logo2.png\";\r\n\r\nexport default function Navbar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          //console.log(\"nav updated\");\r\n        }\r\n      })\r\n    );\r\n  }, [isProfileUpdate]);\r\n  //console.log(user);\r\n  //\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* TOP NAVBAR START */}\r\n      <nav className=\"sticky-top main-header navbar navbar-expand-lg navbar-white navbar-light\">\r\n        <div className=\"container-fluid layout-width\">\r\n          <Link to=\"/dashboard\" className=\"mr-4\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n              className=\"img-fluid\"\r\n            />\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            {/* left side menu item */}\r\n            {/* <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item vertical-bar\">\r\n                <Link to=\"/dashboard\" className=\"nav-link hov-effect\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            </ul> */}\r\n            {/* right side menu item */}\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {/* Email Dropdown Menu */}\r\n              <li className=\"nav-item dropdown mr-4\">\r\n                <Link\r\n                  to=\"/email\"\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <i className=\"far fa-envelope\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">3</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 mr-3 img-circle\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Brad Diesel\r\n                          <span className=\"float-right text-sm text-danger\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">Call me whenever you can...</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"img/ninad.png\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          John Pierce\r\n                          <span className=\"float-right text-sm text-muted\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">I got your message bro</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Nora Silvester\r\n                          <span className=\"float-right text-sm text-warning\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">The subject goes here</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"/email\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Messages\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n\r\n              {/* Ninad Hossain Profile Menu*/}\r\n              <li className=\"nav-item dropdown d-flex\">\r\n                <div className=\"profile-image\">\r\n                  {(() => {\r\n                    if (user.avatar_img) {\r\n                      return (\r\n                        <img\r\n                          src={`${user.avatar_img}`}\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <img\r\n                          src=\"dist/img/avatar_default.jpg\"\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                  <Link\r\n                    className=\"dropdown-toggle d-block nav-link pr-0\"\r\n                    data-toggle=\"dropdown\"\r\n                    to=\"#\"\r\n                    role=\"button\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    {user.fname} {user.lname}\r\n                  </Link>\r\n                  <div className=\"dropdown-menu sub-menu\">\r\n                    <Link className=\"dropdown-item\" to=\"/view-profile\">\r\n                      My Profile\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/account-info\">\r\n                      Account Info\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/\" onClick={Logout}>\r\n                      Logout\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* TOP NAVBAR END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nexport default function Sidebar() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n  //console.log(width);\r\n  if (width < 576) {\r\n    var sidebar_mini = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    sidebar_mini.classList.add(\"sidebar-collapse\");\r\n  }\r\n  function mySidebar() {\r\n    // alert(\"hi\");\r\n    var menu = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    menu.classList.toggle(\"sidebar-collapse\");\r\n  }\r\n\r\n  // extract pathname from location\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <React.Fragment>\r\n      {/* LEFT SIDEBAR MENU START */}\r\n      <aside className=\"main-sidebar sidebar-no-expand elevation-4\">\r\n        <div className=\"sidebar\">\r\n          <nav className=\"\" style={{ marginTop: \"82px\" }}>\r\n            <ul\r\n              className=\"nav nav-pills nav-sidebar flex-column\"\r\n              role=\"menu\"\r\n              data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link button-left\"\r\n                  role=\"button\"\r\n                  id=\"sidebar-toggle\"\r\n                  onClick={mySidebar}\r\n                >\r\n                  <i className=\"nav-icon fa fa-fw fa-bars\" />\r\n                  <p />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/dashboard\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  exact\r\n                >\r\n                  <i className=\"nav-icon fas fa-border-all\" />\r\n                  <p>Dashboard</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/user-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/user-list-view\",\r\n                      \"/create-user\",\r\n                      \"/user-detail-view\",\r\n                      \"/update-user\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-plus-square\"></i>\r\n                  <p>Create User</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/institute-list-view\"\r\n                  className=\"nav-link dropbtn\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/institute-list-view\", \"/institute-create\"].includes(\r\n                      pathname\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-edit\" />\r\n                  <p>Registration</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/package-list-view\",\r\n                      \"/package-create\",\r\n                      \"/package-details\",\r\n                      \"/package-edit\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-copy\" />\r\n                  <p>Package System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-history\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/package-history\", \"/package-history-detail\"].includes(\r\n                      pathname\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon fas fa-history\"></i>\r\n                  <p>Package History</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/billing-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/billing-list-view\",\r\n                      \"/create-bill\",\r\n                      \"/billing-invoice-view\",\r\n                      \"/update-bill\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-alt\" />\r\n                  <p>Billing System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/payment-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/payment-list-view\",\r\n                      \"/payment-approve\",\r\n                      \"/payment-history-view\",\r\n                      \"/inst-payment-history\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-powerpoint\" />\r\n                  <p>Payment System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/email\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() => [\"/email\"].includes(pathname)}\r\n                >\r\n                  <i className=\"nav-icon far fa-envelope\"></i>\r\n                  <p>Email</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/settings\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/settings\",\r\n                      \"/create-user-type\",\r\n                      \"/view-user-type\",\r\n                      \"/edit-user-type\",\r\n                      \"/add-new-pkg-item\",\r\n                      \"/edit-new-pkg-item\",\r\n                      \"/add-new-inst-type\",\r\n                      \"/edit-new-inst-type\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-sun\" />\r\n                  <p>Settings</p>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </aside>\r\n      {/* LEFT SIDEBAR MENU END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport Sidebar from \"../Layout/Sidebar\";\r\nimport { ProfileProvider } from \"../../ProfileContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          if (localStorage.getItem(\"token\")) {\r\n            return (\r\n              <ProfileProvider>\r\n                <div>\r\n                  <Navbar />\r\n                  <Sidebar />\r\n                  <Component {...props} />\r\n                </div>\r\n              </ProfileProvider>\r\n            );\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: {\r\n                    from: props.location,\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport { type } from \"jquery\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreatePackage() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let parameter = [];\r\n  let packages = {};\r\n  const history = useHistory();\r\n\r\n  function getPackageParameter(data) {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    var total_parameter = 0;\r\n    for (let key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        if (key.includes(\"name-\")) {\r\n          total_parameter = total_parameter + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      let object = {};\r\n      let name_key = `name-${i}`;\r\n      let quantity_key = `quantity-${i}`;\r\n      let price_key = `price-${i}`;\r\n\r\n      object[\"name\"] = data[name_key];\r\n      object[\"quantity\"] = data[quantity_key];\r\n      object[\"price\"] = data[price_key];\r\n\r\n      parameter.push(object);\r\n    }\r\n    return parameter;\r\n    //console.log(JSON.stringify(parameter));\r\n  }\r\n  const onSubmit = (data) => {\r\n    console.log(\"DATA: \" + JSON.stringify(data));\r\n\r\n    packages = {\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n      type: \"default\",\r\n      payable_amount: data.payableAmount,\r\n    };\r\n\r\n    const parameters = getPackageParameter(data);\r\n    //console.log(\"parameters: \" + JSON.stringify(parameters));\r\n\r\n    const packageData = {\r\n      package: packages,\r\n      parameters: parameters,\r\n    };\r\n\r\n    postData(packageData);\r\n    async function postData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-save\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      // console.log(\"PACKAGE DATA---\" + JSON.stringify(packageData));\r\n      const savePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n      if (savePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Created Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(savePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //GET PACKAGE PARAMETER -START\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let apiResponse = response.data.data;\r\n      const apiResponseFiltered = apiResponse.filter(\r\n        (res) => res.active === \"1\"\r\n      );\r\n      //console.log(apiResponseFiltered);\r\n      setData(apiResponseFiltered);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE PARAMETER -END\r\n\r\n  // calculate payable amount\r\n  function calculateTotalAmount() {\r\n    let total_parameter = data.length;\r\n\r\n    let total = 0.0;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (document.getElementById(\"price-\" + i).value) {\r\n        //console.log(\"Price: \" + document.getElementById(\"price-\" + i).value);\r\n        total =\r\n          parseFloat(total) +\r\n          parseFloat(document.getElementById(\"price-\" + i).value);\r\n        //console.log(\"Total: \" + total);\r\n      }\r\n    }\r\n    return parseFloat(total);\r\n  }\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index, package_amount, package_number) => {\r\n    const { name, value } = e.target;\r\n    // console.log(\r\n    //   \"Name: \" +\r\n    //     name +\r\n    //     \"\\nValue: \" +\r\n    //     value +\r\n    //     \"\\nIndex: \" +\r\n    //     index +\r\n    //     \"\\npackage_amount: \" +\r\n    //     package_amount +\r\n    //     \"\\npackage_number: \" +\r\n    //     package_number\r\n    // );\r\n    let quantity = parseInt(value);\r\n    let price = parseFloat(package_amount);\r\n    let number = parseInt(package_number);\r\n\r\n    let unitPrice = parseFloat((price / number) * quantity);\r\n    unitPrice = parseFloat(unitPrice.toFixed(2));\r\n    document.getElementById(\"price-\" + index).value = unitPrice;\r\n\r\n    let totalAmount = calculateTotalAmount();\r\n    //console.log(\"totalAmount: \" + totalAmount);\r\n\r\n    if (\r\n      document.getElementById(\"name-\" + index).value.toLowerCase() ===\r\n      \"discount\"\r\n    ) {\r\n      let discountValue = parseFloat(\r\n        document.getElementById(\"price-\" + index).value\r\n      );\r\n      console.log(\"discountValue: \" + discountValue);\r\n      totalAmount = totalAmount - discountValue * 2;\r\n    }\r\n\r\n    document.getElementById(\"payableAmount\").value = totalAmount;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create a Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            {/* package name */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"packageTitle\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.packageTitle && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* package description */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Description\r\n                                </label>\r\n                                <br />\r\n                                <textarea\r\n                                  className=\"form-control\"\r\n                                  name=\"packageDescription\"\r\n                                  ref={register({ required: true })}\r\n                                  rows=\"1\"\r\n                                  cols=\"30\"\r\n                                ></textarea>\r\n                                {errors.packageDescription && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Is Package Display on Front-end ? */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Is Package Display on Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      type=\"radio\"\r\n                                      className=\"mr-2\"\r\n                                      value=\"On\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      className=\"mr-2\"\r\n                                      type=\"radio\"\r\n                                      value=\"Off\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* package parameter */}\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                              {data.map((data, i) => {\r\n                                return (\r\n                                  <div className=\"row\" key={i}>\r\n                                    <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                      <label>Title</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        readOnly\r\n                                        className=\"form-control mb-3\"\r\n                                        id={`name-${i}`}\r\n                                        name={`name-${i}`}\r\n                                        defaultValue={data.package_item_name}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <label>Quantity</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        name={`quantity-${i}`}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            i,\r\n                                            data.package_amount,\r\n                                            data.package_number\r\n                                          )\r\n                                        }\r\n                                        min=\"0\"\r\n                                        required\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      {errors.quantity && (\r\n                                        <ErrorMsg>\r\n                                          * This Field is Required\r\n                                        </ErrorMsg>\r\n                                      )}\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <label>Amount</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        id={`price-${i}`}\r\n                                        readOnly\r\n                                        className=\"form-control mb-3\"\r\n                                        name={`price-${i}`}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                            {/* payable amount */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                <label>Payable Amount</label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  readOnly\r\n                                  id=\"payableAmount\"\r\n                                  name=\"payableAmount\"\r\n                                  className=\"form-control\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create package form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Datatable({ data }) {\r\n  const history = useHistory();\r\n\r\n  async function deletePackage(packageId, packageType) {\r\n    if (packageType === \"custom\") {\r\n      toast(\"Custom Package Can Not Deleted\", {\r\n        className: \"toast-error\",\r\n      });\r\n    } else {\r\n      // console.log(\"package id: \" + packageId);\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: `/package-delete`,\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          package_id: packageId,\r\n        },\r\n      };\r\n      const deletePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"deletePkgApiResp - \" + deletePkgApiResp.data);\r\n      if (deletePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Deleted Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.go(0);\r\n      } else {\r\n        toast(deletePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Package Type</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"type\"].charAt(0).toUpperCase() + row[\"type\"].slice(1)}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"display\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-details\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-edit\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Delete\"\r\n                onClick={() => history.push(`/package-edit/${row[\"id\"]}`)}\r\n                onClick={() => {\r\n                  deletePackage(row[\"id\"], row[\"type\"]);\r\n                }}\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport DatatablePkgList from \"./DatatablePkgList\";\r\nexport default function PackageListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let allPkgApiResp = await trackPromise(axios(config));\r\n      allPkgApiResp = allPkgApiResp.data.msg.reverse();\r\n      // console.log(\"allPkgApiResp - \" + JSON.stringify(allPkgApiResp));\r\n      // formatObject(allPkgApiResp);\r\n      setData(allPkgApiResp);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.type.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/package-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Package\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Datatable({ data, packageDetail }) {\r\n  // console.log(\"Params: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Title</th>\r\n            <th className=\"inst-list-th text-center\">Quantity</th>\r\n            <th className=\"inst-list-th text-center\">Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"quantity\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"price\"]}</td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td className=\"inst-list-td text-center\"></td>\r\n            <td className=\"inst-list-td text-center\">\r\n              <b>Total</b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all quantity */}\r\n              <b>\r\n                {data.reduce(\r\n                  (a, b) => parseInt(a) + parseInt(b[\"quantity\"] || 0),\r\n                  0\r\n                )}\r\n              </b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all price */}\r\n              <b>{packageDetail.payable_amount}</b>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\nimport DatatableParams from \"./DatatableParams\";\r\nexport default function PackageDetails() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: location.state.id },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg);\r\n      setPackageDetail(pkgDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            <table className=\"table table-borderless table-responsive table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">Title</td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.title}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Description\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.description}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Display\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.display}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Package Type\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.type}\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            {packageDetail.params ? (\r\n                              <DatatableParams\r\n                                data={packageDetail.params}\r\n                                packageDetail={packageDetail}\r\n                              />\r\n                            ) : null}\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function PackageEdit() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: location.state.id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [location.state.id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: location.state.id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    //console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* IF PACKAGE NAME IS SELECTED FROM DROPDOWN THEN SHOW READONLY FILED */}\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            title=\"Delete This Package\"\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null}\r\n\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePkgHistoryList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Description</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\">Created Date</th>\r\n            <th className=\"inst-list-th text-center\">Updated Date</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"description\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"display\"]}</td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"created_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"updated_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-history-detail\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePkgHistoryList from \"./DatatablePkgHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function PackageHistory() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchInstData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setData(allPkgApiResp.data.msg);\r\n    }\r\n    fetchInstData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.description.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.created_at.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.updated_at.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Package History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nexport default function PackageHistoryDetail() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState([]);\r\n  const [packageTitle, setPackageTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          package_id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg.params);\r\n      setPackageTitle(pkgDetailApiResp.data.msg.title);\r\n      setPackageDetail(pkgDetailApiResp.data.msg.params);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* PAGE CONTENT START */}\r\n      <div className=\"content-wrapper pt-3 pb-5\">\r\n        <div className=\"content\">\r\n          <div className=\"container-fluid layout-width\">\r\n            {/*  */}\r\n            {/* Content Start */}\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <h4 className=\"heading\">Package Parameter History</h4>\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <Link\r\n                      to=\"/package-history\"\r\n                      className=\"border ml-1 add-button shadow float-right\"\r\n                      title=\"Back\"\r\n                    >\r\n                      <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body p-0\">\r\n                    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                        <div className=\"col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                          <b>{packageTitle}</b>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                            <thead>\r\n                              <tr className=\"inst-list-heading\">\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  SL No.\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Name\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Quantity\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Price\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Created At\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Updated At\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {packageDetail.map((row, index) => (\r\n                                <tr key={index}>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {index + 1}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"name\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"quantity\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"price\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                        <LoadingIndicator />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function DatatableUserTypeList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"typename\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserTypeList from \"./DatatableUserTypeList\";\r\nexport default function UserPermission() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE LIST -END\r\n\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/create-user-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Create User Type\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableUserTypeList data={data} />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatablePackageSetup() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsPackageActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Items For Package</th>\r\n            <th className=\"inst-list-th text-center\">Number / Size</th>\r\n            <th className=\"inst-list-th text-center\">Amount / Value</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_item_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_number\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_amount\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-pkg-item\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePackageSetup from \"./DatatablePackageSetup\";\r\nexport default function PackageSetup() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-pkg-item\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatablePackageSetup />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatableInstType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsInstituteActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Type Name</th>\r\n            <th className=\"inst-list-th text-center\">Short Form</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"short_form\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-inst-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstType from \"./DatatableInstType\";\r\nexport default function InstituteType() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-inst-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableInstType />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UserPermission from \"./UserPermission\";\r\nimport PackageSetup from \"./PackageSetup\";\r\nimport InstituteType from \"./InstituteType\";\r\n\r\nexport default function Settings() {\r\n  const [showUserPermission, setShowUserPermission] = useState(true);\r\n  const [showPackageSetup, setShowPackageSetup] = useState(false);\r\n  const [showInstituteType, setShowInstituteType] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Settings</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showUserPermission ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(true);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-user pr-2 pl-3\"></i>User\r\n                              Permission\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showPackageSetup ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(true);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-list-alt pr-2 pl-3\"></i>\r\n                              Package Setup\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInstituteType ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-university pr-2 pl-3\"></i>\r\n                              Institute Type\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showUserPermission ? <UserPermission /> : null}\r\n                            {showPackageSetup ? <PackageSetup /> : null}\r\n                            {showInstituteType ? <InstituteType /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/CreateNewInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Bill Created Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [instituteName, setInstituteName] = useState(\"\");\r\n  const [billingAmount, setBillingAmount] = useState(\"\");\r\n  /*INSTITUTE ID DROPDOWN START */\r\n  const [instituteIdData, setInstituteIdData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteIDs\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instIdApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instIdApiResp - \" + JSON.stringify(instIdApiResp.data.msg.data)\r\n      // );\r\n      setInstituteIdData(instIdApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange institute id dropdown menu, institute name value will update -start\r\n  const ChangeInstName = (e) => {\r\n    //setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"id: \" + id);\r\n\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instDetailApiResp - \" + JSON.stringify(instDetailApiResp.data.msg)\r\n      // );\r\n      setInstituteName(instDetailApiResp.data.msg.name);\r\n      setBillingAmount(instDetailApiResp.data.msg.payment_amount);\r\n    }\r\n    fetchData();\r\n  };\r\n  //onchange institute id dropdown menu, institute name value will update -end\r\n  /*INSTITUTE ID DROPDOWN END */\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* institute id */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute ID\r\n            </label>\r\n            <br />\r\n            {instituteIdData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"institute_id\"\r\n                name=\"institute_id\"\r\n                defaultValue=\"--Select Institute ID--\"\r\n                onChange={(e) => ChangeInstName(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select Institute ID--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {instituteIdData\r\n                  .sort((a, b) => a.institute_id.localeCompare(b.institute_id))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.institute_id}>\r\n                        {e.institute_id}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.institute_id && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* institute name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              defaultValue={instituteName}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.institute_name && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* billing month */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* billing year */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n              <option value=\"2031\">2031</option>\r\n              <option value=\"2032\">2032</option>\r\n              <option value=\"2033\">2033</option>\r\n              <option value=\"2034\">2034</option>\r\n              <option value=\"2035\">2035</option>\r\n              <option value=\"2036\">2036</option>\r\n              <option value=\"2037\">2037</option>\r\n              <option value=\"2038\">2038</option>\r\n              <option value=\"2039\">2039</option>\r\n              <option value=\"2040\">2040</option>\r\n              <option value=\"2041\">2041</option>\r\n              <option value=\"2042\">2042</option>\r\n              <option value=\"2043\">2043</option>\r\n              <option value=\"2044\">2044</option>\r\n              <option value=\"2045\">2045</option>\r\n              <option value=\"2046\">2046</option>\r\n              <option value=\"2047\">2047</option>\r\n              <option value=\"2048\">2048</option>\r\n              <option value=\"2049\">2049</option>\r\n              <option value=\"2050\">2050</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Billing Amount */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              readOnly\r\n              defaultValue={billingAmount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[+]?\\d+([.]\\d+)?$/,\r\n                  message: \"* Please Enter Positive Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Bill Generate\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateBillForm from \"./CreateBillForm\";\r\nexport default function CreateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Generate Bill</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n      setMonth(invoiceApiResp.data.msg.month);\r\n      setYear(invoiceApiResp.data.msg.year);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute ID</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_id\"\r\n              readOnly\r\n              defaultValue={data.institute_id}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              readOnly\r\n              defaultValue={data.institute_name}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              value={month}\r\n              onChange={(e) => setMonth(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              defaultValue={data.amount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[1-9]\\d*$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Update\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UpdateBillForm from \"./UpdateBillForm\";\r\nexport default function UpdateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Billing Info</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <UpdateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableBillingList({ data }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Bill Generate Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"created_at\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-bill\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Send Bill\">\r\n                <Link to=\"#\">\r\n                  <i className=\"far fa-share-square  action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function DatatableBillingHistoryList() {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Approved\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentData.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        total={totalItems}\r\n        itemsPerPage={ITEMS_PER_PAGE}\r\n        currentPage={currentPage}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableBillingList from \"./DatatableBillingList\";\r\nimport DatatableBillingHistoryList from \"./DatatableBillingHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function BillingListView() {\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Pending\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Billing Information</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/* start here */}\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice List\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice History\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          {/* 1st content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-left mb-3\">\r\n                                <Link\r\n                                  to=\"/create-bill\"\r\n                                  className=\"border ml-1 add-button shadow\"\r\n                                  title=\"Create Bill\"\r\n                                >\r\n                                  <i className=\"fas fa-plus add-button-icon\"></i>\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  value={search}\r\n                                  onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                    setCurrentPage(1);\r\n                                  }}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingList data={currentData} />\r\n                              <PaginationComponent\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={(page) => setCurrentPage(page)}\r\n                              />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* 2nd content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  //value={q}\r\n                                  //onChange={(e) => setQ(e.target.value)}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingHistoryList />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nexport default function BillingInvoiceView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Invoice Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Invoice ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_name}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.month}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.year}\r\n                                </td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Amount\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.amount}\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentList({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Payment Document</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Payment Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* CODE WILL COPY FROM DATATABLE INST LIST */}\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">1</td>\r\n            <td className=\"inst-list-td  text-center\">01FA5WE99874D</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-BRAC-102</td>\r\n            <td className=\"inst-list-td  text-center\">Brac University</td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">September-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Pending</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">2</td>\r\n            <td className=\"inst-list-td  text-center\">45DFS8554G85SD</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-NSU-420</td>\r\n            <td className=\"inst-list-td  text-center\">\r\n              North South University\r\n            </td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">October-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Approved</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentList from \"./DatatablePaymentList\";\r\nexport default function PaymentListView() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Payment Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/payment-history-view\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Payment History\"\r\n                            >\r\n                              <i className=\"add-button-icon fas fa-history\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={q}\r\n                              onChange={(e) => setQ(e.target.value)}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentList data={search(data)} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentHistoryList({ data }) {\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Contact</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n              >\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/inst-payment-history\",\r\n                    state: { institute_id_string: row[\"institute_id\"] },\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-eye action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentHistoryList from \"./DatatablePaymentHistoryList\";\r\nexport default function PaymentHistoryView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteListWithInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instListApiResp - \" + JSON.stringify(instListApiResp.data.msg.data)\r\n      // );\r\n      setData(instListApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Payment History</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstPaymentHistory({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Initial Doc Attachment</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Year</th>\r\n            <th className=\"inst-list-th text-center\">Submitted Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">-</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"month\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"year\"]}</td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\">{row[\"status\"]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function InstPaymentHistory() {\r\n  const [data, setData] = useState([]);\r\n  const [instData, setInstData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetAllInvoicesSingleInstitute\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          institute_id_string: location.state.institute_id_string,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg.details)\r\n      // );\r\n\r\n      setInstData(invoiceApiResp.data.msg.details);\r\n      setData(invoiceApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute Payment History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0\">\r\n                                  {instData.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute Name</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.name}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Contact</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.phone}</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0\">Email</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.email}</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstPaymentHistory data={currentData} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function PaymentApprove() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Approve Payment</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  UNIV-BRAC-102\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  Brac University\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">January</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">2020</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">Initial Doc</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">Pay.pdf</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Approve\r\n                            </button>\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function CreateUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (data) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"active\"] = \"1\";\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/CreateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ViewUserType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      // console.log(\"response - \" + response.data.msg);\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">View User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          <form className=\"mt-4\">\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>{data.typename}</label>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </form>\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (/*data*/) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Updated Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.msg));\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* update role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  readOnly\r\n                                  defaultValue={data.typename}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* update role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsPackageCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsPackage\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsPackageWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update New Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  defaultValue={data.package_item_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  defaultValue={data.package_number}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  defaultValue={data.package_amount}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsInstituteCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add New Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n    data[\"short_form\"] = data[\"short_form\"].toUpperCase();\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsInstitute\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsInstituteWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  defaultValue={data.institute_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  defaultValue={data.short_form}\r\n                                  ref={register({ required: true })}\r\n                                  style={{ textTransform: \"uppercase\" }}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function Compose() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  let history = useHistory();\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n  // POST PACKAGE DATA -START\r\n  const onSubmit = async (data) => {\r\n    let formData = new FormData();\r\n    formData.append(\"to_address\", data.to_address);\r\n    formData.append(\"from_address\", emailAddress);\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"body\", data.body);\r\n    formData.append(\"status\", \"sent\");\r\n    formData.append(\r\n      \"file_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    formData.append(\r\n      \"image_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SendNewEmail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    //console.log(\"DATA---\" + formData);\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Send Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      history.push(\"/email\");\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  };\r\n  // POST PACKAGE DATA -END\r\n  return (\r\n    <div>\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* To */}\r\n        <div className=\"form-group row pb-0 mb-0\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6 pb-0 mb-0\">\r\n            <div className=\"d-flex\">\r\n              <label style={{ paddingTop: \"8px\", minWidth: \"80px\" }}>To</label>\r\n              <span style={{ paddingTop: \"8px\" }}>:</span>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 email-to\"\r\n                name=\"to_address\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </div>\r\n            <br />\r\n            {errors.to_address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Subject */}\r\n        <div className=\"form-group row pt-0 mt-0\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6 pb-0 mb-0\">\r\n            <div className=\"d-flex\">\r\n              <label style={{ paddingTop: \"8px\", minWidth: \"80px\" }}>\r\n                Subject\r\n              </label>\r\n              <span style={{ paddingTop: \"8px\" }}>:</span>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 email-to\"\r\n                name=\"title\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </div>\r\n            <br />\r\n            {errors.title && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* body */}\r\n        <div className=\"form-group row mt-5 mr-2\">\r\n          <div className=\"col\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"body\"\r\n              ref={register({ required: true })}\r\n              rows=\"10\"\r\n              cols=\"100\"\r\n            ></textarea>\r\n            <br />\r\n            {errors.body && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex\">\r\n          <button type=\"submit\" className=\"btn btn-update\">\r\n            Send\r\n          </button>\r\n          <i\r\n            className=\"fas fa-paperclip pr-2 pl-3\"\r\n            title=\"Attach File\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-file-image pr-2 pl-3\"\r\n            title=\"Attach Image\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-file-pdf pr-2 pl-3\"\r\n            title=\"Save as Draft\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-trash-alt pr-2 pl-3\"\r\n            title=\"Delete\"\r\n            onClick={() => {\r\n              history.go(0);\r\n            }}\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n        </div>\r\n      </form>\r\n\r\n      {/* create form general info end */}\r\n\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ViewEmail({ email_id }) {\r\n  const [data, setData] = useState({});\r\n  const [fileAttachement, setFileAttachement] = useState(\"\");\r\n  const [imageAttachement, setImageAttachement] = useState(\"\");\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailFullDetails\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email_id: email_id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let file_attachement = response.data.data[0].file_attachement.replace(\r\n        \"http://localhost:3000/lms/\",\r\n        \"\"\r\n      );\r\n      let image_attachement = response.data.data[0].image_attachement.replace(\r\n        \"http://localhost:3000/lms/\",\r\n        \"\"\r\n      );\r\n      //console.log(\"image_attachement \" + image_attachement);\r\n      setFileAttachement(file_attachement);\r\n      setImageAttachement(image_attachement);\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function sendDraftEmail() {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    const emailAddress = localStorage.getItem(\"emailAddress\");\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"to_address\", data.to_address);\r\n    formData.append(\"from_address\", emailAddress);\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"body\", data.body);\r\n    formData.append(\"status\", \"sent\");\r\n    formData.append(\r\n      \"file_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    formData.append(\r\n      \"image_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SendEmailFromDraftBox\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    console.log(formData);\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Sent Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table institute-table table-font-100\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>To</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">: {data.to_address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>From</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">\r\n              : {data.from_address}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>Subject</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">: {data.title}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">\r\n              : {data.sending_date}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td\r\n              className=\"border-0 text-left\"\r\n              style={{ padding: \"24px 0px 150px 0px\", margin: \"0px\" }}\r\n              colSpan=\"2\"\r\n            >\r\n              {data.body}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"inst-text text-left\"\r\n              style={{ padding: \"5px\", margin: \"0px\" }}\r\n              colSpan=\"3\"\r\n            >\r\n              {data.status === \"draft\" ? (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-update mr-3 p-0\"\r\n                  onClick={() => {\r\n                    sendDraftEmail();\r\n                  }}\r\n                >\r\n                  Send\r\n                </button>\r\n              ) : (\r\n                <span>Attachment: </span>\r\n              )}\r\n\r\n              {fileAttachement ? (\r\n                <a href={fileAttachement} target=\"_blank\" download>\r\n                  <i\r\n                    className=\"far fa-file-pdf pr-2 pl-3\"\r\n                    title=\"File\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                  ></i>\r\n                </a>\r\n              ) : null}\r\n              {imageAttachement ? (\r\n                <a\r\n                  href={imageAttachement}\r\n                  target=\"_blank\"\r\n                  download\r\n                  className=\"pt-2\"\r\n                >\r\n                  <i\r\n                    className=\"far fa-file-image pr-2 pl-3\"\r\n                    title=\"Image\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                  ></i>\r\n                </a>\r\n              ) : null}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"inst-text text-left\"\r\n              style={{ padding: \"5px\", margin: \"0px\" }}\r\n            ></td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot className=\"row\"></tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Inbox() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForInbox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          // email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  async function deleteEmail(email_id, sender) {\r\n    let formData = new FormData();\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"to_address\", emailAddress);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    //console.log(\"email_id: \" + email_id + \" -- sender: \" + sender);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/TrashEmailByReceiver\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      setUpdateApi(true);\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Inbox\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowInbox(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showInbox ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"sender\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowInbox(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      deleteEmail(row[\"email_id\"], row[\"sender\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Sent() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showSent, setShowSent] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForSentBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  async function deleteEmail(email_id) {\r\n    let formData = new FormData();\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"from_address\", emailAddress);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    //console.log(\"email_id: \" + email_id + \" -- sender: \" + sender);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/TrashEmailBySender\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      setUpdateApi(true);\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Sent\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowSent(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showSent ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowSent(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      deleteEmail(row[\"email_id\"], row[\"receiver\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Draft() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showDraft, setShowDraft] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForDraftBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Draft\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowDraft(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showDraft ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowDraft(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  {/* <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Trash() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showTrash, setShowTrash] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForTrashBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Inbox\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowTrash(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showTrash ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowTrash(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  {/* <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Edit\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/edit-user-type\",\r\n                        state: { id: row[\"id\"] },\r\n                      })\r\n                    }\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Compose from \"./Compose\";\r\nimport Inbox from \"./Inbox\";\r\nimport Sent from \"./Sent\";\r\nimport Draft from \"./Draft\";\r\nimport Trash from \"./Trash\";\r\n\r\nexport default function Email() {\r\n  const [showCompose, setShowCompose] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [showSent, setShowSent] = useState(false);\r\n  const [showDraft, setShowDraft] = useState(false);\r\n  const [showTrash, setShowTrash] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Email</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-lg-2 col-md-3 col-sm-6\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#fff\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <span\r\n                              className=\"shadow badge badge-pill compose__btn\"\r\n                              onClick={() => {\r\n                                setShowCompose(true);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-plus compose__icon\"></i>\r\n                              Compose\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                borderBottom: \"1px solid #B9B9B9\",\r\n                                margin: \"24px 10px 8px 10px\",\r\n                              }}\r\n                            ></span>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInbox ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(true);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-inbox pr-2 pl-3\"></i>\r\n                              Inbox\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showSent ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(true);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-share pr-2 pl-3\"></i>Sent\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showDraft ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(true);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-file pr-2 pl-3\"></i>Draft\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showTrash ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-trash-alt pr-2 pl-3\"></i>\r\n                              Trash\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-lg-10 col-md-9 col-sm-6\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showCompose ? <Compose /> : null}\r\n                            {showInbox ? <Inbox /> : null}\r\n                            {showSent ? <Sent /> : null}\r\n                            {showDraft ? <Draft /> : null}\r\n                            {showTrash ? <Trash /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport CreateUser from \"./Components/User/CreateUser\";\nimport UserListView from \"./Components/User/UserListView\";\nimport UserDetailView from \"./Components/User/UserDetailView\";\nimport UpdateUser from \"./Components/User/UpdateUser\";\nimport Login from \"./Components/Login/Login\";\nimport ForgetPassword from \"./Components/Password/ForgetPassword\";\nimport ResetPassword from \"./Components/Password/ResetPassword\";\nimport AccountInfo from \"./Components/AccountInfo/AccountInfo\";\nimport InstituteCreate from \"./Components/InstituteRegistration/InstituteCreate\";\nimport InstituteListView from \"./Components/InstituteRegistration/InstituteListView\";\nimport InstituteDetails from \"./Components/InstituteRegistration/InstituteDetails\";\nimport InstituteUpdate from \"./Components/InstituteRegistration/InstituteUpdate\";\nimport ViewProfile from \"./Components/Profile/ViewProfile\";\nimport EditProfile from \"./Components/Profile/EditProfile\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\nimport ErrorHandle from \"./Components/ErrorHandling/errorHandle\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreatePackage from \"./Components/PackageSystem/CreatePackage\";\nimport PackageListView from \"./Components/PackageSystem/PackageListView\";\nimport PackageDetails from \"./Components/PackageSystem/PackageDetails\";\nimport PackageEdit from \"./Components/PackageSystem/PackageEdit\";\nimport PackageHistory from \"./Components/PackageSystem/PackageHistory\";\nimport PackageHistoryDetail from \"./Components/PackageSystem/PackageHistoryDetail\";\nimport Settings from \"./Components/Settings/Settings\";\nimport CreateBill from \"./Components/BillingSystem/CreateBill\";\nimport UpdateBill from \"./Components/BillingSystem/UpdateBill\";\nimport BillingListView from \"./Components/BillingSystem/BillingListView\";\nimport BillingInvoiceView from \"./Components/BillingSystem/BillingInvoiceView\";\nimport PaymentListView from \"./Components/PaymentSystem/PaymentListView\";\nimport PaymentHistoryView from \"./Components/PaymentSystem/PaymentHistoryView\";\nimport InstPaymentHistory from \"./Components/PaymentSystem/InstPaymentHistory\";\nimport PaymentApprove from \"./Components/PaymentSystem/PaymentApprove\";\nimport CreateUserType from \"./Components/Settings/CreateUserType\";\nimport ViewUserType from \"./Components/Settings/ViewUserType\";\nimport EditUserType from \"./Components/Settings/EditUserType\";\nimport AddNewPkgItem from \"./Components/Settings/AddNewPkgItem\";\nimport EditNewPkgItem from \"./Components/Settings/EditNewPkgItem\";\nimport AddNewInstType from \"./Components/Settings/AddNewInstType\";\nimport EditNewInstType from \"./Components/Settings/EditNewInstType\";\nimport Email from \"./Components/Email/Email\";\n\nexport default function App() {\n  ErrorHandle();\n  return (\n    <div>\n      <BrowserRouter basename=\"/lms/\">\n        <div className=\"wrapper\">\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/forget-password\" component={ForgetPassword} />\n            <Route\n              path=\"/password-reset-request/:token\"\n              component={ResetPassword}\n            />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute path=\"/create-user\" component={CreateUser} />\n            <PrivateRoute path=\"/user-list-view\" component={UserListView} />\n            <PrivateRoute path=\"/user-detail-view\" component={UserDetailView} />\n            <PrivateRoute path=\"/update-user\" component={UpdateUser} />\n            <PrivateRoute path=\"/account-info\" component={AccountInfo} />\n            <PrivateRoute\n              path=\"/institute-create\"\n              component={InstituteCreate}\n            />\n            <PrivateRoute\n              path=\"/institute-list-view\"\n              component={InstituteListView}\n            />\n            <PrivateRoute\n              path=\"/institute-detail/:id\"\n              component={InstituteDetails}\n            />\n            <PrivateRoute\n              path=\"/institute-update/:id/:package_id\"\n              component={InstituteUpdate}\n            />\n            <PrivateRoute path=\"/package-create\" component={CreatePackage} />\n            <PrivateRoute\n              path=\"/package-list-view\"\n              component={PackageListView}\n            />\n            <PrivateRoute path=\"/package-details\" component={PackageDetails} />\n            <PrivateRoute path=\"/package-edit\" component={PackageEdit} />\n            <PrivateRoute path=\"/package-history\" component={PackageHistory} />\n            <PrivateRoute\n              path=\"/package-history-detail\"\n              component={PackageHistoryDetail}\n            />\n            <PrivateRoute path=\"/create-bill\" component={CreateBill} />\n            <PrivateRoute path=\"/update-bill\" component={UpdateBill} />\n            <PrivateRoute\n              path=\"/billing-list-view\"\n              component={BillingListView}\n            />\n            <PrivateRoute\n              path=\"/billing-invoice-view\"\n              component={BillingInvoiceView}\n            />\n            <PrivateRoute\n              path=\"/payment-list-view\"\n              component={PaymentListView}\n            />\n            <PrivateRoute\n              path=\"/payment-history-view\"\n              component={PaymentHistoryView}\n            />\n            <PrivateRoute\n              path=\"/inst-payment-history\"\n              component={InstPaymentHistory}\n            />\n            <PrivateRoute path=\"/payment-approve\" component={PaymentApprove} />\n\n            <PrivateRoute path=\"/view-profile\" component={ViewProfile} />\n            <PrivateRoute path=\"/edit-profile\" component={EditProfile} />\n            <PrivateRoute path=\"/settings\" component={Settings} />\n            <PrivateRoute path=\"/create-user-type\" component={CreateUserType} />\n            <PrivateRoute path=\"/view-user-type\" component={ViewUserType} />\n            <PrivateRoute path=\"/edit-user-type\" component={EditUserType} />\n            <PrivateRoute path=\"/add-new-pkg-item\" component={AddNewPkgItem} />\n            <PrivateRoute\n              path=\"/edit-new-pkg-item\"\n              component={EditNewPkgItem}\n            />\n\n            <PrivateRoute\n              path=\"/add-new-inst-type\"\n              component={AddNewInstType}\n            />\n            <PrivateRoute\n              path=\"/edit-new-inst-type\"\n              component={EditNewInstType}\n            />\n            <PrivateRoute path=\"/email\" component={Email} />\n            <Route path=\"*\" component={() => \"404 PAGE NOT FOUND\"} />\n          </Switch>\n          <ToastContainer\n            position=\"top-center\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            transition={Zoom}\n          />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\n\r\nexport default function ErrorHandle() {\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      //console.log(config);\r\n      console.log(\r\n        `${config.method.toUpperCase()} request sent to ${\r\n          config.url\r\n        } at ${new Date().toLocaleString()}`\r\n      );\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  axios.interceptors.response.use(\r\n    (config) => {\r\n      // console.log(config);\r\n      console.log(\r\n        `Status: ${config.status} ${config.statusText}\\nResp Status: ${config.data.status}\\nResp Msg: ${config.data.msg}`\r\n      );\r\n      if (config.status === 401) {\r\n        alert(\"You are not authorized\");\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\n\n//change base url for backend api connection\naxios.defaults.baseURL = \"http://18.188.174.161:5000\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}