{"version":3,"sources":["Components/Password/Logo2.png","Components/Login/Logo2.png","Components/Login/bg.jpg","Components/Password/bg.jpg","Components/Password/bg2.jpg","Components/Layout/logo2.png","Components/Dashboard/Dashboard.jsx","Components/Loading/LoadingIndicator.jsx","Components/User/CreateUserForm.jsx","Components/User/CreateUser.jsx","Components/Pagination/PaginationComponent.jsx","Components/User/DatatableUserList.jsx","Components/User/UserListView.jsx","Components/User/ViewAddressInfo.jsx","Components/User/UserDetailView.jsx","ProfileContext.js","Components/User/UpdateUserAvatar.jsx","Components/User/UpdateUserCover.jsx","Components/User/UpdateUserProfile.jsx","Components/User/UpdateUserAddress.jsx","Components/User/UpdateInformation.jsx","Components/User/UpdateUser.jsx","Components/Layout/Footer.jsx","Components/Login/Login.jsx","Components/Password/ForgetPassword.jsx","Components/Password/ResetPassword.jsx","Components/AccountInfo/AccountInfo.jsx","Components/InstituteRegistration/InstituteCreate.jsx","Components/InstituteRegistration/DatatableInstList.jsx","Components/InstituteRegistration/InstituteListView.jsx","Components/InstituteRegistration/DatatableInstDetail.jsx","Components/InstituteRegistration/InstituteDetails.jsx","Components/InstituteRegistration/InstituteUpdate.jsx","Components/Profile/ViewAddressInfo.jsx","Components/Profile/ViewProfile.jsx","Components/Profile/UploadAvatar.jsx","Components/Profile/UploadCover.jsx","Components/Profile/UpdateProfile.jsx","Components/Profile/UpdateAddress.jsx","Components/Profile/EditInformation.jsx","Components/Profile/EditProfile.jsx","Components/Logout/Logout.jsx","Components/Layout/Navbar.jsx","Components/Layout/Sidebar.jsx","Components/PrivateRoute/PrivateRoute.jsx","Components/PackageSystem/CreatePackage.jsx","Components/PackageSystem/DatatablePkgList.jsx","Components/PackageSystem/PackageListView.jsx","Components/PackageSystem/DatatableParams.jsx","Components/PackageSystem/PackageDetails.jsx","Components/PackageSystem/PackageEdit.jsx","Components/PackageSystem/DatatablePkgHistoryList.jsx","Components/PackageSystem/PackageHistory.jsx","Components/PackageSystem/PackageHistoryDetail.jsx","Components/Settings/DatatableUserTypeList.jsx","Components/Settings/UserPermission.jsx","Components/Settings/DatatablePackageSetup.jsx","Components/Settings/PackageSetup.jsx","Components/Settings/DatatableInstType.jsx","Components/Settings/InstituteType.jsx","Components/Settings/Settings.jsx","Components/BillingSystem/CreateBillForm.jsx","Components/BillingSystem/CreateBill.jsx","Components/BillingSystem/UpdateBillForm.jsx","Components/BillingSystem/UpdateBill.jsx","Components/BillingSystem/DatatableBillingList.jsx","Components/BillingSystem/DatatableBillingHistoryList.jsx","Components/BillingSystem/BillingListView.jsx","Components/BillingSystem/BillingInvoiceView.jsx","Components/PaymentSystem/DatatablePaymentList.jsx","Components/PaymentSystem/PaymentListView.jsx","Components/PaymentSystem/DatatablePaymentHistoryList.jsx","Components/PaymentSystem/PaymentHistoryView.jsx","Components/PaymentSystem/DatatableInstPaymentHistory.jsx","Components/PaymentSystem/InstPaymentHistory.jsx","Components/PaymentSystem/PaymentApprove.jsx","Components/Settings/CreateUserType.jsx","Components/Settings/ViewUserType.jsx","Components/Settings/EditUserType.jsx","Components/Settings/AddNewPkgItem.jsx","Components/Settings/EditNewPkgItem.jsx","Components/Settings/AddNewInstType.jsx","Components/Settings/EditNewInstType.jsx","Components/Email/Compose.jsx","Components/Email/ViewEmail.jsx","Components/Email/Inbox.jsx","Components/Email/Sent.jsx","Components/Email/Draft.jsx","Components/Email/Trash.jsx","Components/Email/Email.jsx","App.js","Components/ErrorHandling/errorHandle.js","serviceWorker.js","index.js"],"names":["module","exports","Dashboard","data","name","uv","pv","amt","Fragment","className","src","canvas","ctx","getContext","tot_institute_gradient","createLinearGradient","addColorStop","university_gradient","college_gradient","school_gradient","labels","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","invoice_send_gradient","payment_received_gradient","due_gradient","style","textAlign","paddingLeft","width","height","legend","display","maintainAspectRatio","responsive","cutoutPercentage","position","top","left","fontSize","color","right","padding","margin","bottom","strokeDasharray","dataKey","type","stroke","fill","LoadingIndicator","props","usePromiseTracker","promiseInProgress","justifyContent","alignItems","zIndex","ErrorMsg","styled","p","CreateUserForm","useForm","register","handleSubmit","errors","accessToken","localStorage","getItem","substring","length","history","useHistory","useState","setData","role","setRole","useEffect","a","config","method","url","headers","Authorization","trackPromise","axios","userTypeApiResp","typename","fetchData","passwordShown","setPasswordShown","selectedDate","setSelectedDate","errors_date_of_birth","setErrors_date_of_birth","onSubmit","date_of_birth","then","response","status","toast","push","msg","ref","required","pattern","value","message","fname","lname","email","mobile","hidden","defaultValue","gender","selected","onChange","date","dateFormat","maxDate","Date","showYearDropdown","scrollableMonthYearDropdown","username","id","onClick","toggle","password","e","target","sort","b","localeCompare","map","key","data-id","CreateUser","to","title","minHeight","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","Pagination","Item","active","size","Prev","disabled","Next","DatatableUserList","colSpan","row","index","pathname","state","UserListView","userListApiResp","search","setSearch","totalItems","setTotalItems","setCurrentPage","currentData","computedData","filter","d","toLowerCase","includes","slice","page","ViewAddressInfo","user","setUser","address","post_code","post_office","thana","district","division","per_address","per_post_code","per_post_office","per_thana","per_district","per_division","UserDetailView","location","useLocation","cover_img","background","avatar_img","alt","created_at","initial","split","undefined","join","myDate","month","getMonth","getDate","getFullYear","formatDate","paddingTop","marginLeft","Moment","format","nationality","designation","place_of_birth","marital_status","religion","nid","ProfileContext","createContext","ProfileProvider","isProfileUpdate","setIsProfileUpdate","Provider","children","UpdateUserAvatar","useContext","profileImg","setProfileImg","userApiResp","formData","FormData","append","marginTop","accept","reader","FileReader","onload","readyState","result","readAsDataURL","files","validate","htmlFor","UpdateUserCover","coverImg","setCoverImg","UpdateUserProfile","setSelectedGender","setSelectedMaritalStatus","setSelectedReligion","selectedGender","selectedMaritalStatus","selectedReligion","min","UpdateUserAddress","divisionData","setDivisionData","districtData","setDistrictData","thanaUpazilaData","setThanaUpazila","perDivisionData","setPerDivisionData","perDistrictData","setPerDistrictData","perThanaUpazilaData","setPerThanaUpazila","isSameAsPresent","setIsSameAsPresent","get","divisionApiResp","divisions","divisionArray","parseInt","divisionId","indexOf","division_id","districtApiResp","districtArray","districtId","district_id","thanaUpazilaApiResp","ChangeDivision","selectedIndex","optionElement","childNodes","getAttribute","ChangeDistrict","ChangePerDivision","perDivisionId","ChangePerDistrict","perDistrictId","ChangeDivisionIsSame","console","log","JSON","stringify","ChangeThanaUpazila","checked","document","querySelector","index2","ChangeIsSameAsPresent","ChangePerThanaUpazila","UpdateInformation","showGeneralInfo","setShowGeneralInfo","showAddressInfo","setShowAddressInfo","marginRight","UpdateUser","showEdit","setShowEdit","showProfilePhoto","setShowProfilePhoto","showCoverPhoto","setShowCoverPhoto","marginBottom","aria-orientation","Footer","href","Login","isRememberMe","setIsRememberMe","logo","post","setItem","token","role_details","removeItem","placeholder","backgroundImage","backgroundRepeat","backgroundSize","ForgetPassword","closeOnClick","autoClose","ResetPassword","match","watch","useRef","current","newPasswordShown","setNewPasswordShown","confirmPasswordShown","setConfirmPasswordShown","reset_token","params","minLength","password_confirmation","AccountInfo","oldPasswordShown","setOldPasswordShown","data-toggle","aria-controls","aria-selected","aria-labelledby","old_password","InstituteCreate","allPkgData","setAllPkgData","instituteTypes","setInstituteTypes","typeOfInst","setTypeOfInst","allPkgApiResp","parameter","packages","isCreateNewPackage","setIsCreateNewPackage","isPackageName","setIsPackageName","pkgTitle","setPkgTitle","pkgDescription","setPkgDescription","displayFrontEnd","setDisplayFrontEnd","payableAmount","setPayableAmount","pkgParamList","setPkgParamList","selectedPackageId","setSelectedPackageId","handlePackageName","pkgId","package_id","pkgParamApiResp","find","x","description","payable_amount","apiResponse","apiResponseFiltered","res","discountError","setDiscountError","handleInputChange","package_amount","package_number","quantity","price","parseFloat","number","unitPrice","toFixed","getElementById","totalAmount","total_parameter","calculateTotalAmount","discountValue","calculateDiscount","subscription_s_date","setSubscription_s_date","errors_subscription_s_date","setErrors_subscription_s_date","subscription_e_date","setSubscription_e_date","errors_subscription_e_date","setErrors_subscription_e_date","last_payment_date","setLast_payment_date","errors_last_payment_date","setErrors_last_payment_date","institute_id","instNameShortForm","serialNum","instituteData","instituteName","phone","last_payment","payment_amount","postData","createInstApiResp","integer_id","firstName","instituteId","packageTitle","packageDescription","parameters","hasOwnProperty","object","name_key","quantity_key","price_key","getPackageParameter","packageData","savePkgApiResp","packageId","package","short_form","rows","cols","readOnly","defaultChecked","package_item_name","placeholderText","minDate","DatatableInstList","isActive","setisActive","utc","instStatusApiResp","toggleInstStatus","InstituteListView","DatatableInstDetail","package_title","InstituteDetails","instDetail","setInstDetail","useParams","instDetailApiResp","InstituteUpdate","setPkgData","pkgApiResp","setSelectedOption","instData","setInstData","instApiResp","updatePkgApiResp","updateInstApiResp","updatePkgData","postInstData","instName","ViewProfile","UploadAvatar","UploadCover","UpdateProfile","UpdateAddress","user_id","EditInformation","EditProfile","Logout","Navbar","data-target","aria-expanded","aria-label","aria-haspopup","Sidebar","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","classList","add","data-accordion","activeclassname","exact","PrivateRoute","Component","component","rest","render","from","CreatePackage","Datatable","packageType","deletePkgApiResp","go","charAt","toUpperCase","deletePackage","PackageListView","reverse","packageDetail","reduce","PackageDetails","setPackageDetail","pkgDetailApiResp","PackageEdit","pkgData","selectedOption","handleRadioChange","list","displayFrontend","splice","handleRemoveClick","DatatablePkgHistoryList","PackageHistory","fetchInstData","updated_at","PackageHistoryDetail","setPackageTitle","DatatableUserTypeList","UserPermission","DatatablePackageSetup","updateApi","setUpdateApi","togglePackageStatus","PackageSetup","DatatableInstType","InstituteType","Settings","showUserPermission","setShowUserPermission","showPackageSetup","setShowPackageSetup","showInstituteType","setShowInstituteType","CreateBillForm","setInstituteName","billingAmount","setBillingAmount","instituteIdData","setInstituteIdData","instIdApiResp","userEmail","ChangeInstName","institute_name","year","amount","CreateBill","UpdateBillForm","setMonth","setYear","invoiceApiResp","UpdateBill","DatatableBillingList","DatatableBillingHistoryList","billingListApiResp","jsObjects","obj","BillingListView","BillingInvoiceView","DatatablePaymentList","showPerPage","start","end","PaymentListView","q","setQ","columns","Object","keys","some","column","toString","DatatablePaymentHistoryList","institute_id_string","PaymentHistoryView","instListApiResp","DatatableInstPaymentHistory","InstPaymentHistory","details","PaymentApprove","CreateUserType","permissionError","setPermissionError","setCharAt","str","chr","institute","setInstitute","pkg","setPkg","bill","setBill","payment","setPayment","ViewUserType","EditUserType","AddNewPkgItem","EditNewPkgItem","AddNewInstType","EditNewInstType","textTransform","Compose","emailAddress","to_address","body","minWidth","cursor","ViewEmail","email_id","fileAttachement","setFileAttachement","imageAttachement","setImageAttachement","file_attachement","replace","image_attachement","from_address","sending_date","sendDraftEmail","download","Inbox","showViewEmail","setShowViewEmail","showInbox","setShowInbox","emailId","setEmailId","sender","deleteEmail","Sent","showSent","setShowSent","Draft","showDraft","setShowDraft","Trash","showTrash","setShowTrash","Email","showCompose","setShowCompose","borderBottom","App","interceptors","request","use","toLocaleString","error","Promise","reject","statusText","alert","basename","path","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Zoom","Boolean","hostname","defaults","baseURL","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a488da67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo2.9af1038c.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo2.9af1038c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.4d66afad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.f4477b86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.33b242a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.b064fe4f.png\";","import React from \"react\";\r\nimport { HorizontalBar, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nexport default function Dashboard() {\r\n  /**************Institute chart start***************** */\r\n  const instituteData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n    const tot_institute_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    tot_institute_gradient.addColorStop(0, \"#ff2260\");\r\n    tot_institute_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const university_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    university_gradient.addColorStop(0, \"#553eff\");\r\n    university_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const college_gradient = ctx.createLinearGradient(0, 0, 270, 0);\r\n    college_gradient.addColorStop(0, \"#0087ff\");\r\n    college_gradient.addColorStop(1, \"#00e09f\");\r\n\r\n    const school_gradient = ctx.createLinearGradient(0, 0, 370, 0);\r\n    school_gradient.addColorStop(0, \"#423eff\");\r\n    school_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Total Institute\", \"University\", \"College\", \"School\"],\r\n      datasets: [\r\n        {\r\n          label: \"# of Institute\",\r\n          data: [100, 60, 20, 20, 0, 100],\r\n          backgroundColor: [\r\n            tot_institute_gradient,\r\n            university_gradient,\r\n            college_gradient,\r\n            school_gradient,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  var instituteOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  /**************Institute chart end***************** */\r\n\r\n  /**************Payment chart start***************** */\r\n  const paymentData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 750, 0);\r\n    invoice_send_gradient.addColorStop(0, \"#553eff\");\r\n    invoice_send_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 550, 0);\r\n    payment_received_gradient.addColorStop(0, \"#ff2260\");\r\n    payment_received_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    due_gradient.addColorStop(0, \"#423eff\");\r\n    due_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Invoice Send\", \"Payment Received\", \"Due\"],\r\n      datasets: [\r\n        {\r\n          label: \"Total\",\r\n          data: [100, 60, 40, 0, 100],\r\n          backgroundColor: [\r\n            invoice_send_gradient,\r\n            payment_received_gradient,\r\n            due_gradient,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  var paymentOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  /**************Payment chart end***************** */\r\n\r\n  /* /****************bandwidth chart stard**********************/\r\n\r\n  const BandWidthData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    invoice_send_gradient.addColorStop(0, \"#3da9f0\");\r\n    invoice_send_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 550, 0);\r\n    payment_received_gradient.addColorStop(0, \"#3da9f0\");\r\n    payment_received_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 770, 0);\r\n    due_gradient.addColorStop(0, \"#3da9f0\");\r\n    due_gradient.addColorStop(1, \"#3da9f0\");\r\n\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n      datasets: [\r\n        {\r\n          data: [12, 19, 3, 5, 2, 3],\r\n          backgroundColor: invoice_send_gradient,\r\n        },\r\n        {\r\n          data: [2, 3, 20, 5, 1, 4],\r\n          backgroundColor: payment_received_gradient,\r\n        },\r\n        {\r\n          data: [3, 10, 13, 15, 22, 30],\r\n          backgroundColor: due_gradient,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const BandWidthOptions = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  /****************bandwidth chart end**********************/\r\n\r\n  /****************storage chart start**********************/\r\n\r\n  const StorageData = (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    /*** Gradient ***/\r\n\r\n    const invoice_send_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    invoice_send_gradient.addColorStop(0, \"#fe3eff\");\r\n    invoice_send_gradient.addColorStop(1, \"#00f0ff\");\r\n\r\n    const payment_received_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    payment_received_gradient.addColorStop(0, \"#ff2260\");\r\n    payment_received_gradient.addColorStop(1, \"#ff736b\");\r\n\r\n    const due_gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    due_gradient.addColorStop(0, \"#423eff\");\r\n    due_gradient.addColorStop(1, \"#fe3eff\");\r\n    /***************/\r\n\r\n    return {\r\n      labels: [\"Video\", \"Audio\", \"Documents\", \"Free\"],\r\n      datasets: [\r\n        {\r\n          data: [15, 12, 16, 5],\r\n          backgroundColor: [\r\n            invoice_send_gradient,\r\n            payment_received_gradient,\r\n            due_gradient,\r\n            \"#BCBEC0\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const StorageOptions = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    cutoutPercentage: 50,\r\n  };\r\n  /****************storage chart end**********************/\r\n\r\n  // new chart start\r\n  const data = [\r\n    { name: \"\", uv: 2000, pv: 2400, amt: 2400 },\r\n    { name: \"\", uv: 6000, pv: 1398, amt: 2210 },\r\n    { name: \"\", uv: 2000, pv: 9800, amt: 2290 },\r\n    { name: \"\", uv: 4000, pv: 9800, amt: 2290 },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row mt-2\">\r\n                {/* New chart  */}\r\n                <div className=\"col-12\">\r\n                  {/* first row start */}\r\n                  <div className=\"row mt-2 mb-4\">\r\n                    {/*institute div start */}\r\n                    <div className=\"col-9\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <img\r\n                                src=\"img/attendance.png\"\r\n                                className=\"attendance-img mr-5\"\r\n                              />\r\n                              <span className=\"info-box-text attendance-text\">\r\n                                Institute\r\n                              </span>\r\n                              {/* Institute chart start */}\r\n                              <div className=\"mt-3\">\r\n                                <HorizontalBar\r\n                                  data={instituteData}\r\n                                  options={instituteOptions}\r\n                                />\r\n                              </div>\r\n                              {/* Institute chart end */}\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <img\r\n                                src=\"img/attendance.png\"\r\n                                className=\"attendance-img mr-5\"\r\n                              />\r\n                              <span className=\"info-box-text attendance-text\">\r\n                                Payment\r\n                              </span>\r\n                              {/* Payment chart start */}\r\n                              <div className=\"mt-3\">\r\n                                <HorizontalBar\r\n                                  data={paymentData}\r\n                                  options={paymentOptions}\r\n                                />\r\n                              </div>\r\n\r\n                              {/* Payment chart end */}\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* institute full div end */}\r\n                    <div className=\"col-3\">\r\n                      <div className=\"row\">\r\n                        {/* System Info */}\r\n                        <div className=\"col-12\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <img\r\n                                src=\"img/attendance.png\"\r\n                                className=\"attendance-img mr-5\"\r\n                              />\r\n                              <span className=\"info-box-text attendance-text mb-4\">\r\n                                System Info\r\n                              </span>\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                        {/* Storage chart start */}\r\n                        <div className=\"col-12\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <span\r\n                                className=\"info-box-text attendance-text\"\r\n                                style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                              >\r\n                                Storage\r\n                              </span>\r\n                              <div className=\"mb-4 mt-1\">\r\n                                <Doughnut\r\n                                  data={StorageData}\r\n                                  width={100}\r\n                                  height={80}\r\n                                  options={StorageOptions}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* second row start*/}\r\n                  <div className=\"row mb-2\">\r\n                    <div className=\"col-9\">\r\n                      <div className=\"row\">\r\n                        {/* Live class chart start */}\r\n                        <div className=\"col-8\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <img\r\n                                src=\"img/liveClass.png\"\r\n                                className=\"attendance-img mr-5\"\r\n                              />\r\n                              <span className=\"info-box-text attendance-text\">\r\n                                Live Class\r\n                              </span>\r\n                              {/* Live class chart start */}\r\n                              <div className=\"d-flex row mt-3\">\r\n                                <img\r\n                                  src=\"img/LiveClass_1.png\"\r\n                                  className=\"img-fluid ml-2 mr-4\"\r\n                                  width=\"100\"\r\n                                />\r\n                                <span\r\n                                  className=\"current-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"130px\",\r\n                                    left: \"55px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#3abfb0\",\r\n                                  }}\r\n                                >\r\n                                  7\r\n                                </span>\r\n                                <img\r\n                                  src=\"img/LiveClass_2.png\"\r\n                                  className=\"img-fluid mr-4\"\r\n                                  width=\"100\"\r\n                                />\r\n                                <span\r\n                                  className=\"current-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"130px\",\r\n                                    left: \"178px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#bf4d6c\",\r\n                                  }}\r\n                                >\r\n                                  56\r\n                                </span>\r\n                                <img\r\n                                  src=\"img/LiveClass_3.png\"\r\n                                  className=\"img-fluid mr-4\"\r\n                                  width=\"100\"\r\n                                />\r\n                                <span\r\n                                  className=\"current-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"130px\",\r\n                                    right: \"209px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#00a8e2\",\r\n                                  }}\r\n                                >\r\n                                  100\r\n                                </span>\r\n                                <img\r\n                                  src=\"img/LiveClass_4.png\"\r\n                                  className=\"img-fluid mr-2\"\r\n                                  width=\"100\"\r\n                                />\r\n                                <span\r\n                                  className=\"current-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"130px\",\r\n                                    right: \"81px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#7F3F98\",\r\n                                  }}\r\n                                >\r\n                                  220\r\n                                </span>\r\n                              </div>\r\n\r\n                              {/* Live class chart end */}\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                        {/* New User chart start */}\r\n                        <div className=\"col-4\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <img\r\n                                src=\"img/calender.png\"\r\n                                className=\"attendance-img mr-5\"\r\n                              />\r\n                              <span className=\"info-box-text attendance-text\">\r\n                                New User\r\n                              </span>\r\n                              {/* New User chart start */}\r\n                              <div className=\"d-flex row mt-3 mb-2\">\r\n                                <img\r\n                                  src=\"img/Asset11.png\"\r\n                                  className=\"img-fluid ml-2 mr-4\"\r\n                                  width=\"100\"\r\n                                  style={{\r\n                                    backgroundColor: \"#EBEEF3\",\r\n                                    padding: \"16px 16px 48px 16px\",\r\n                                  }}\r\n                                />\r\n                                <span\r\n                                  className=\"current\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"118px\",\r\n                                    left: \"44px\",\r\n                                    fontSize: \"11px\",\r\n                                    color: \"#808285\",\r\n                                  }}\r\n                                >\r\n                                  Current\r\n                                </span>\r\n                                <span\r\n                                  className=\"current-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"148px\",\r\n                                    left: \"42px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#808285\",\r\n                                  }}\r\n                                >\r\n                                  450\r\n                                </span>\r\n                                <img\r\n                                  src=\"img/Asset12.png\"\r\n                                  className=\"img-fluid mr-2\"\r\n                                  width=\"100\"\r\n                                  style={{\r\n                                    backgroundColor: \"#EBEEF3\",\r\n                                    padding: \"16px 16px 48px 16px\",\r\n                                  }}\r\n                                />\r\n                                <span\r\n                                  className=\"this-week\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"118px\",\r\n                                    left: \"166px\",\r\n                                    fontSize: \"10px\",\r\n                                    color: \"#808285\",\r\n                                  }}\r\n                                >\r\n                                  This Week\r\n                                </span>\r\n                                <span\r\n                                  className=\"this-week-number\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"148px\",\r\n                                    left: \"166px\",\r\n                                    fontSize: \"24px\",\r\n                                    color: \"#808285\",\r\n                                  }}\r\n                                >\r\n                                  2100\r\n                                </span>\r\n                              </div>\r\n                              {/* New User chart end */}\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-3\">\r\n                      <div className=\"row\">\r\n                        {/* bandwidth chart start */}\r\n                        <div className=\"col-12\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <span\r\n                                className=\"info-box-text attendance-text\"\r\n                                style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                              >\r\n                                Bandwidth usages\r\n                              </span>\r\n                              <div className=\"mb-3 mt-5\">\r\n                                <Bar\r\n                                  data={BandWidthData}\r\n                                  options={BandWidthOptions}\r\n                                  height={50}\r\n                                  width={100}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                        {/* ram graph */}\r\n                        <div className=\"col-12\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <span\r\n                                className=\"info-box-text attendance-text\"\r\n                                style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                              >\r\n                                Ram usages\r\n                              </span>\r\n                              <div className=\"mb-3 mt-5\">\r\n                                <AreaChart\r\n                                  width={250}\r\n                                  height={100}\r\n                                  data={data}\r\n                                  margin={{\r\n                                    top: 10,\r\n                                    right: 30,\r\n                                    left: 0,\r\n                                    bottom: 0,\r\n                                  }}\r\n                                >\r\n                                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                  <XAxis dataKey=\"name\" />\r\n                                  <YAxis />\r\n                                  <Tooltip />\r\n                                  <Area\r\n                                    type=\"monotone\"\r\n                                    dataKey=\"uv\"\r\n                                    stroke=\"#465FFF\"\r\n                                    fill=\"#2F8FFF\"\r\n                                  />\r\n                                </AreaChart>\r\n                              </div>\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                        {/* processor graph */}\r\n                        <div className=\"col-12\">\r\n                          <div className=\"info-box\">\r\n                            <div className=\"info-box-content attendance-thumbnail\">\r\n                              <span\r\n                                className=\"info-box-text attendance-text\"\r\n                                style={{ textAlign: \"left\", paddingLeft: \"0\" }}\r\n                              >\r\n                                Processor usages\r\n                              </span>\r\n                              <div className=\"mb-3 mt-5\">\r\n                                <AreaChart\r\n                                  width={250}\r\n                                  height={100}\r\n                                  data={data}\r\n                                  margin={{\r\n                                    top: 10,\r\n                                    right: 30,\r\n                                    left: 0,\r\n                                    bottom: 0,\r\n                                  }}\r\n                                >\r\n                                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                  <XAxis dataKey=\"name\" />\r\n                                  <YAxis />\r\n                                  <Tooltip />\r\n                                  <Area\r\n                                    type=\"monotone\"\r\n                                    dataKey=\"uv\"\r\n                                    stroke=\"#465FFF\"\r\n                                    fill=\"#FF2260\"\r\n                                  />\r\n                                </AreaChart>\r\n                              </div>\r\n                            </div>\r\n                            {/* /.info-box-content */}\r\n                          </div>\r\n                          {/* /.info-box */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingIndicator = (props) => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#F8F8F8AD\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#ff3462\"\r\n          height=\"50\"\r\n          width=\"50\"\r\n          style={{\r\n            zIndex: \"10000\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateUserForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/RegisterNewUserNormal\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"User Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/user-list-view\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  //GET USERTYPE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setRole(userTypeApiResp.data.data.typename);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE -END\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* firstname and lastname */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* email and mobile no */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Email\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n            {errors.email && <ErrorMsg>{errors.email.message}</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^\\+[1-9]{1}[0-9]{3,14}$/,\r\n                  message: \"* Please Enter Valid Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* gender and date of birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* username and password */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.username && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Password\r\n            </label>\r\n            <br />\r\n            <input\r\n              id=\"password-field1\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n\r\n            <span\r\n              onClick={togglePasswordVisiblity}\r\n              toggle=\"#password-field1\"\r\n              className={`fa fa-fw ${\r\n                passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n              } field-icon toggle-password`}\r\n            />\r\n            {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* User Type  */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Type\r\n            </label>\r\n            <br />\r\n            {data.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"role\"\r\n                name=\"role\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select User Type--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {data\r\n                  .sort((a, b) => a.typename.localeCompare(b.typename))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.typename}>\r\n                        {e.typename}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.typename && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Create\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateUserForm from \"./CreateUserForm\";\r\n\r\nexport default function CreateUser() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/user-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateUserForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\n\r\nexport default function PaginationComponent({\r\n  total = 0,\r\n  itemsPerPage = 10,\r\n  currentPage = 1,\r\n  onPageChange,\r\n}) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  //total = total items in response object\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0) {\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  }, [totalPages, currentPage]);\r\n\r\n  if (totalPages === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"float-right\" size=\"sm\">\r\n        <Pagination.Prev\r\n          onClick={() => onPageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n          style={{ fontSize: \"16px\" }}\r\n        >\r\n          Previous\r\n        </Pagination.Prev>\r\n        {paginationItems}\r\n        <Pagination.Next\r\n          onClick={() => onPageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </Pagination.Next>\r\n      </Pagination>\r\n    </>\r\n  );\r\n}\r\n","import Pagination from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function DatatableUserList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Name</th>\r\n            <th className=\"inst-list-th text-center\">User Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"fname\"]} {row[\"lname\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"username\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"mobile\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"role\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/user-detail-view\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-user\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i className=\"fas fa-toggle-on action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserList from \"./DatatableUserList\";\r\nexport default function UserListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllUserNormalList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userListApiResp - \" + JSON.stringify(userListApiResp.data.msg)\r\n      // );\r\n      setData(userListApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.fname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.lname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.email.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.role.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">User Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/create-user\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create User\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableUserList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo(props) {\r\n  const [user, setUser] = useState({});\r\n\r\n  //const location = useLocation();\r\n  //console.log(\"Email: \" + props.email);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserAddress\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: props.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(\"Address Info: \" + response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function UserDetailView() {\r\n  const [user, setUser] = useState({});\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserProfileInfo\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: location.state.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        // console.log(\"User Profile Info: \" + JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          {/*   */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {user.date_of_birth\r\n                                        ? Moment(\r\n                                            new Date(user.date_of_birth)\r\n                                          ).format(\"DD/MM/YYYY\")\r\n                                        : null}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo email={location.state.email} />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = (props) => {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useState(false);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={[isProfileUpdate, setIsProfileUpdate]}>\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAvatar(props) {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAvatarImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                {profileImg ? (\r\n                  <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/avatar-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgAvatar\"\r\n                  />\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserCover(props) {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserCoverImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateUserProfile(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n\r\n  //console.log(location);\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(\"selectedDate ... \" + selectedDate);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n        email: props.email,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/NormalUserProfileInfoUpdate\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n      //console.log(\"data ... \" + JSON.stringify(data));\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push({\r\n              pathname: \"/user-detail-view\",\r\n              state: { email: props.email },\r\n            });\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  //**************************************************************************** */\r\n  const [user, setUser] = useState({});\r\n  //GetNormalUserProfileInfo\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        //console.log(\"Date: \" + response.data.msg.date_of_birth);\r\n        if (response.data.msg.date_of_birth) {\r\n          setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        }\r\n\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              //defaultValue={new Date()}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAddress(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n    data[\"email\"] = props.email;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAddressUpdate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n    console.log(\"Data...\" + JSON.stringify(data));\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          //history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserAddress\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Address - \" + JSON.stringify(userApiResp.data.msg));\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        {/* address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            {perDivisionData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_division\"\r\n                id=\"per_division\"\r\n                value={user.per_division}\r\n                onChange={(e) => ChangePerDivision(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDivisionData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            {perDistrictData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_district\"\r\n                id=\"per_district\"\r\n                value={user.per_district}\r\n                onChange={(e) => ChangePerDistrict(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDistrictData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateUserProfile from \"./UpdateUserProfile\";\r\nimport UpdateUserAddress from \"./UpdateUserAddress\";\r\n\r\nexport default function UpdateInformation({ location }) {\r\n  //console.log(location);\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Update Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? (\r\n          <UpdateUserProfile email={location.state.email} />\r\n        ) : null}\r\n        {showAddressInfo ? (\r\n          <UpdateUserAddress email={location.state.email} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport UpdateUserAvatar from \"./UpdateUserAvatar\";\r\nimport UpdateUserCover from \"./UpdateUserCover\";\r\nimport UpdateInformation from \"./UpdateInformation\";\r\nexport default function UpdateUser() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Update start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 style={{ marginBottom: \"32px\", color: \"black\" }}>\r\n                        Update Profile\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Update\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                //console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? (\r\n                              <UpdateInformation location={location} />\r\n                            ) : null}\r\n                            {showProfilePhoto ? (\r\n                              <UpdateUserAvatar email={location.state.email} />\r\n                            ) : null}\r\n                            {showCoverPhoto ? (\r\n                              <UpdateUserCover email={location.state.email} />\r\n                            ) : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Update end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      {/* Copyright */}\r\n      <div className=\"footer-copyright py-3 small text-center\">\r\n        <span className=\"font-italic\"> Copyright © 2020-2050 | </span>\r\n        <a href=\"https://brlbd.com/\" className=\"text-muted font-italic\">\r\n          Babylon Resources Ltd.\r\n        </a>\r\n      </div>\r\n      {/* Copyright */}\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Footer from \"../Layout/Footer\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function Login(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  /*REMEMBER ME START*/\r\n  const [isRememberMe, setIsRememberMe] = useState(false);\r\n  /*REMEMBER ME END*/\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"Username & Password \" + JSON.stringify(data));\r\n\r\n    const email = data.email;\r\n\r\n    trackPromise(\r\n      axios.post(\"/authenticate\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\" || response.data.status === 200) {\r\n          localStorage.setItem(\r\n            \"token\",\r\n            JSON.stringify(response.data.msg.token)\r\n          );\r\n          localStorage.setItem(\"role\", JSON.stringify(response.data.msg.role));\r\n          if (response.data.msg.role_details) {\r\n            localStorage.setItem(\r\n              \"role_details\",\r\n              JSON.stringify(response.data.msg.role_details)\r\n            );\r\n          }\r\n          localStorage.setItem(\"emailAddress\", email);\r\n          // console.log(\"email: \" + email);\r\n          // localStorage.setItem(\"email\", \"email\");\r\n          //console.log(this.props.history.push(\"/Dashboard\"));\r\n          if (isRememberMe) {\r\n            localStorage.setItem(\"email\", data.email);\r\n            localStorage.setItem(\"password\", data.password);\r\n          } else {\r\n            localStorage.removeItem(\"email\");\r\n            localStorage.removeItem(\"password\");\r\n          }\r\n          props.history.push(\"/dashboard\");\r\n        } else {\r\n          toast(\"Wrong Email Or Password\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-3 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n              {/* user name */}\r\n              <div className=\"mb-3\">\r\n                <label>User Name</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  defaultValue={\r\n                    localStorage.getItem(\"email\")\r\n                      ? localStorage.getItem(\"email\")\r\n                      : \"\"\r\n                  }\r\n                  placeholder=\"Enter Your Email Address\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n              {/* password */}\r\n              <div className=\"mb-3\">\r\n                <label>Password</label>\r\n                <input\r\n                  id=\"password-field1\"\r\n                  type={passwordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  defaultValue={\r\n                    localStorage.getItem(\"password\")\r\n                      ? localStorage.getItem(\"password\")\r\n                      : \"\"\r\n                  }\r\n                  placeholder=\"Enter Your Password\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <span\r\n                  onClick={togglePasswordVisiblity}\r\n                  toggle=\"#password-field1\"\r\n                  className={`fa fa-fw ${\r\n                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                ></span>\r\n                {errors.password && (\r\n                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                )}\r\n              </div>\r\n              {/* remember me and forgot password */}\r\n              <div className=\"form-check\">\r\n                <div className=\"float-left\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input check-input\"\r\n                    id=\"exampleCheck1\"\r\n                    checked={isRememberMe}\r\n                    onChange={() => setIsRememberMe(!isRememberMe)}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n                    Remember Me\r\n                  </label>\r\n                </div>\r\n                <p className=\"mb-1\">\r\n                  <Link\r\n                    to=\"/forget-password\"\r\n                    className=\"float-right small mt-1\"\r\n                  >\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"exampleCheck1\"\r\n                      style={{ fontSize: \"16px\" }}\r\n                    >\r\n                      Forgot Password?\r\n                    </label>\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"input-group mb-5\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-4 pr-5 pl-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"login-footer\">\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-9\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              minHeight: \"100vh\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1>Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function ForgetPassword(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    trackPromise(\r\n      axios.post(\"/password-reset-request\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\r\n            \"Password reset link has been sent to your mail.  \\nPlease check your mail.\",\r\n            { closeOnClick: true, autoClose: false, className: \"toast-error\" }\r\n          );\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-3 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-2 mr-4 ml-4\">\r\n            <h4 className=\"font-weight-normal float-left\">\r\n              Forgot your password?\r\n            </h4>\r\n            <p className=\"font-weight-normal text-size float-left\">\r\n              Enter your email below to receive your password reset instruction\r\n            </p>\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"mt-2\" onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"mb-2\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter your email ID\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n\r\n              <div className=\"input-group\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-3 pr-5 pl-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n              <p className=\"mb-5 mt-1 \">\r\n                <Link to=\"/\" className=\"small\">\r\n                  <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back to\r\n                  Login Page\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-9\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              minHeight: \"100vh\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1>Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport logo from \"./Logo2.png\";\r\nimport backgroundImage from \"./bg2.jpg\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ResetPassword({ match, props }) {\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    // data[\"property\"] = value;\r\n    const reset_token = match.params.token;\r\n    data[\"token\"] = reset_token;\r\n    trackPromise(\r\n      axios.post(\"/password-reset\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Password Reset Success\", {\r\n            className: \"toast-error\",\r\n          });\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{ minHeight: \"100vh\", height: \"100vh\" }}>\r\n        <div className=\"col-3 mt-5\">\r\n          {/* logo */}\r\n          <div className=\"text-center mt-5\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              className=\"logo-babylon-login img-fluid\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-2 mr-4 ml-4\">\r\n            <h4 className=\"font-weight-normal\">Reset Password</h4>\r\n          </div>\r\n          <div className=\"mr-4 ml-4\">\r\n            <form className=\"mt-3\" onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"mb-3\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Your Email Address\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                {errors.email && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label>New Password</label>\r\n                <input\r\n                  id=\"password-field2\"\r\n                  type={newPasswordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your New Password\"\r\n                  name=\"password\"\r\n                  ref={register({\r\n                    required: \"* This Field is Required\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"* Minimum 8 Character Required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <span\r\n                  onClick={toggleNewPasswordVisiblity}\r\n                  toggle=\"#password-field2\"\r\n                  className={`fa fa-fw ${\r\n                    newPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                />\r\n                {errors.password && (\r\n                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label>Confirm Password</label>\r\n                <input\r\n                  id=\"password-field3\"\r\n                  type={confirmPasswordShown ? \"text\" : \"password\"}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Your Confirm Password\"\r\n                  name=\"password_confirmation\"\r\n                  ref={register({\r\n                    required: \"* This Field is Required\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"* Minimum 8 Character Required\",\r\n                    },\r\n                    validate: (value) =>\r\n                      value === password.current ||\r\n                      \"Both Password Should Match\",\r\n                  })}\r\n                />\r\n                <span\r\n                  onClick={toggleConfirmPasswordVisiblity}\r\n                  toggle=\"#password-field3\"\r\n                  className={`fa fa-fw ${\r\n                    confirmPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                  } field-icon toggle-password`}\r\n                />\r\n                {errors.password_confirmation && (\r\n                  <ErrorMsg>{errors.password_confirmation.message}</ErrorMsg>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-group\">\r\n                <button\r\n                  className=\"btn bg-color shadow text-white float-left mt-4 pr-4 pl-4\"\r\n                  type=\"submit\"\r\n                >\r\n                  Reset Password\r\n                </button>\r\n              </div>\r\n              <p className=\"mb-5 mt-1\">\r\n                <Link to=\"/\" className=\"small\">\r\n                  <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back to\r\n                  Login Page\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* right side background image */}\r\n        <div className=\"col-9\">\r\n          <div\r\n            className=\"login-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + backgroundImage + \")\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"100%\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              minHeight: \"100vh\",\r\n              height: \"100vh\",\r\n            }}\r\n          >\r\n            <div className=\"site_title\">\r\n              <h1>Welcome to Learnerscafe LMS Software</h1>\r\n              <p>\r\n                Student:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Teacher:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n              <p>\r\n                Admin:\r\n                <br />\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book.\r\n              </p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AccountInfo() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/password-update\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(\"The old password you have entered is incorrect\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  // -api for get user info\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [oldPasswordShown, setOldPasswordShown] = useState(false);\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleOldPasswordVisiblity = () => {\r\n    setOldPasswordShown(oldPasswordShown ? false : true);\r\n  };\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <h4 className=\"heading\">Account Info</h4>\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Account Details\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Change Password\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table  table-sm table-borderless w-50 table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.fname} {user.lname}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.username}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Type</td>\r\n                                  <td className=\"text-left\">: {user.role}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Password</td>\r\n                                  <td className=\"text-left\">: ********</td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* input field */}\r\n                          {/* form start */}\r\n                          <form\r\n                            className=\"form-horizontal\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"card-body padding-left\">\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type Your Old Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field1\"\r\n                                    type={\r\n                                      oldPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"old_password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleOldPasswordVisiblity}\r\n                                    toggle=\"#password-field1\"\r\n                                    className={`fa fa-fw ${\r\n                                      oldPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.old_password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.old_password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type New Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field2\"\r\n                                    type={\r\n                                      newPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleNewPasswordVisiblity}\r\n                                    toggle=\"#password-field2\"\r\n                                    className={`fa fa-fw ${\r\n                                      newPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Confirm Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field3\"\r\n                                    type={\r\n                                      confirmPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password_confirmation\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                      validate: (value) =>\r\n                                        value === password.current ||\r\n                                        \"Both Password Should Match\",\r\n                                    })}\r\n                                  />\r\n                                  <span\r\n                                    onClick={toggleConfirmPasswordVisiblity}\r\n                                    toggle=\"#password-field3\"\r\n                                    className={`fa fa-fw ${\r\n                                      confirmPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password_confirmation && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password_confirmation.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <button type=\"submit\" className=\"btn btn-update\">\r\n                                Update\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteCreate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  const [allPkgData, setAllPkgData] = useState([]);\r\n  const [instituteTypes, setInstituteTypes] = useState([]);\r\n  const [typeOfInst, setTypeOfInst] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setAllPkgData(allPkgApiResp.data.msg);\r\n      //get institute type data\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setInstituteTypes(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  let parameter = [];\r\n  let packages = {};\r\n  function getPackageParameter(data) {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    var total_parameter = 0;\r\n    for (let key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        if (key.includes(\"name-\")) {\r\n          total_parameter = total_parameter + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      let object = {};\r\n      let name_key = `name-${i}`;\r\n      let quantity_key = `quantity-${i}`;\r\n      let price_key = `price-${i}`;\r\n\r\n      object[\"name\"] = data[name_key];\r\n      object[\"quantity\"] = data[quantity_key];\r\n      object[\"price\"] = data[price_key];\r\n\r\n      parameter.push(object);\r\n    }\r\n    //console.log(JSON.stringify(parameter));\r\n\r\n    return parameter;\r\n  }\r\n  let history = useHistory();\r\n  // POST INSTITUTE & PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    if (subscription_s_date) {\r\n      if (subscription_e_date) {\r\n        if (last_payment_date) {\r\n          // IF PACKAGE IS SELECTED FROM DROPDOWN THEN isPackageName = TRUE\r\n          if (isPackageName) {\r\n            // console.log(\r\n            //   \"Drop Down Package data: \" +\r\n            //     JSON.stringify(data) +\r\n            //     \" selected: \" +\r\n            //     selectedPackageId\r\n            // );\r\n            let institute_id =\r\n              data.typeOfInst +\r\n              \"-\" +\r\n              data.instNameShortForm +\r\n              \"-\" +\r\n              data.serialNum;\r\n            const instituteData = {\r\n              package_id: selectedPackageId,\r\n              institute_id: institute_id,\r\n              password: data.password,\r\n              name: data.instituteName,\r\n              address: data.address,\r\n              email: data.email,\r\n              phone: data.phone,\r\n              subscription_s_date: subscription_s_date,\r\n              subscription_e_date: subscription_e_date,\r\n              last_payment: last_payment_date,\r\n              payment_amount: data.payableAmount,\r\n            };\r\n            console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n            postData(instituteData);\r\n            async function postData(instituteData) {\r\n              let accessToken = localStorage.getItem(\"token\");\r\n              //alert(accessToken);\r\n              accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n              var config = {\r\n                method: \"post\",\r\n                url: \"/institute-create\",\r\n                headers: {\r\n                  Authorization: `Bearer ${accessToken}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                data: instituteData,\r\n              };\r\n              const createInstApiResp = await trackPromise(axios(config));\r\n              //console.log(\"createInstApiResp - \" + createInstApiResp.data);\r\n              if (createInstApiResp.data.status === \"ok\") {\r\n                // toast(\"Institute Created Successfully\", {\r\n                //   className: \"toast-error\",\r\n                // });\r\n                // send nisa apu data\r\n                let integer_id = createInstApiResp.data.integer_id;\r\n                console.log(\"integer_id: \" + integer_id);\r\n                const instituteData = {\r\n                  subscription_s_date: subscription_s_date,\r\n                  subscription_e_date: subscription_e_date,\r\n                  last_payment: last_payment_date,\r\n                  payment_amount: data.payableAmount,\r\n                  firstName: data.instituteName,\r\n                  email: data.email,\r\n                  mobile: data.phone,\r\n                  username: institute_id,\r\n                  password: data.password,\r\n                  instituteId: integer_id,\r\n                };\r\n                console.log(\"instituteData: \" + JSON.stringify(instituteData));\r\n\r\n                const sendApiResponse = await trackPromise(\r\n                  axios.post(\r\n                    \"http://34.66.76.39:9091/api/other/user\",\r\n                    instituteData\r\n                  )\r\n                );\r\n                if (sendApiResponse.data.status === \"ok\") {\r\n                  toast(\"Institute Created Successfully\", {\r\n                    className: \"toast-error\",\r\n                  });\r\n                  history.push(\"/institute-list-view\");\r\n                } else {\r\n                  toast(createInstApiResp.data.msg, {\r\n                    className: \"toast-error\",\r\n                  });\r\n                }\r\n                // send nisa apu data\r\n\r\n                // history.push(\"/institute-list-view\");\r\n              } else {\r\n                toast(createInstApiResp.data.msg, {\r\n                  className: \"toast-error\",\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            //console.log(\"DATA: \" + JSON.stringify(data));\r\n\r\n            packages = {\r\n              title: data.packageTitle,\r\n              description: data.packageDescription,\r\n              display: data.display,\r\n              type: \"custom\",\r\n              payable_amount: data.payableAmount,\r\n            };\r\n\r\n            const parameters = getPackageParameter(data);\r\n            //console.log(\"parameters: \" + JSON.stringify(parameters));\r\n\r\n            const packageData = {\r\n              package: packages,\r\n              parameters: parameters,\r\n            };\r\n\r\n            postData(packageData);\r\n            async function postData(packageData) {\r\n              let accessToken = localStorage.getItem(\"token\");\r\n              //alert(accessToken);\r\n              accessToken = accessToken.substring(1, accessToken.length - 1);\r\n              var config = {\r\n                method: \"post\",\r\n                url: \"/package-save\",\r\n                headers: {\r\n                  Authorization: `Bearer ${accessToken}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                data: packageData,\r\n              };\r\n              // console.log(\"PACKAGE DATA---\" + JSON.stringify(packageData));\r\n              const savePkgApiResp = await trackPromise(axios(config));\r\n              //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n              if (savePkgApiResp.data.status === \"ok\") {\r\n                let packageId = savePkgApiResp.data.msg.package_id;\r\n                //console.log(\"packageId: \" + packageId);\r\n                let institute_id =\r\n                  data.typeOfInst +\r\n                  \"-\" +\r\n                  data.instNameShortForm +\r\n                  \"-\" +\r\n                  data.serialNum;\r\n                const instituteData = {\r\n                  package_id: packageId,\r\n                  institute_id: institute_id,\r\n                  password: data.password,\r\n                  name: data.instituteName,\r\n                  address: data.address,\r\n                  email: data.email,\r\n                  phone: data.phone,\r\n                  subscription_s_date: subscription_s_date,\r\n                  subscription_e_date: subscription_e_date,\r\n                  last_payment: last_payment_date,\r\n                  payment_amount: data.payableAmount,\r\n                };\r\n                //console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n                postData(instituteData);\r\n                async function postData(instituteData) {\r\n                  let accessToken = localStorage.getItem(\"token\");\r\n                  //alert(accessToken);\r\n                  accessToken = accessToken.substring(\r\n                    1,\r\n                    accessToken.length - 1\r\n                  );\r\n\r\n                  var config = {\r\n                    method: \"post\",\r\n                    url: \"/institute-create\",\r\n                    headers: {\r\n                      Authorization: `Bearer ${accessToken}`,\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                    data: instituteData,\r\n                  };\r\n                  const createInstApiResp = await trackPromise(axios(config));\r\n                  //console.log(\"createInstApiResp - \" + createInstApiResp.data);\r\n                  if (createInstApiResp.data.status === \"ok\") {\r\n                    // send nisa apu data\r\n                    let integer_id = createInstApiResp.data.integer_id;\r\n                    console.log(\"integer_id: \" + integer_id);\r\n                    const instituteData = {\r\n                      subscription_s_date: subscription_s_date,\r\n                      subscription_e_date: subscription_e_date,\r\n                      last_payment: last_payment_date,\r\n                      payment_amount: data.payableAmount,\r\n                      firstName: data.instituteName,\r\n                      email: data.email,\r\n                      mobile: data.phone,\r\n                      username: institute_id,\r\n                      password: data.password,\r\n                      instituteId: integer_id,\r\n                    };\r\n                    console.log(\r\n                      \"instituteData: \" + JSON.stringify(instituteData)\r\n                    );\r\n\r\n                    const sendApiResponse = await trackPromise(\r\n                      axios.post(\r\n                        \"http://34.66.76.39:9091/api/other/user\",\r\n                        instituteData\r\n                      )\r\n                    );\r\n                    if (sendApiResponse.data.status === \"ok\") {\r\n                      toast(\"Institute Created Successfully\", {\r\n                        className: \"toast-error\",\r\n                      });\r\n                      history.push(\"/institute-list-view\");\r\n                    } else {\r\n                      toast(createInstApiResp.data.msg, {\r\n                        className: \"toast-error\",\r\n                      });\r\n                    }\r\n                    // send nisa apu data\r\n                    // toast(\"Institute Created Successfully\", {\r\n                    //   className: \"toast-error\",\r\n                    // });\r\n                    // history.push(\"/institute-list-view\");\r\n                  } else {\r\n                    toast(createInstApiResp.data.msg, {\r\n                      className: \"toast-error\",\r\n                    });\r\n                  }\r\n                }\r\n              } else {\r\n                toast(savePkgApiResp.data.msg, {\r\n                  className: \"toast-error\",\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          setErrors_last_payment_date(true);\r\n        }\r\n      } else {\r\n        setErrors_subscription_e_date(true);\r\n      }\r\n    } else {\r\n      setErrors_subscription_s_date(true);\r\n    }\r\n  };\r\n  // POST INSTITUTE & PACKAGE DATA -END\r\n  // ---------------------------------------------------------------------------------------------\r\n  /*PACKAGE START***************************************************************************************************/\r\n  const [isCreateNewPackage, setIsCreateNewPackage] = useState(false);\r\n  const [isPackageName, setIsPackageName] = useState(false);\r\n\r\n  const [pkgTitle, setPkgTitle] = useState(\"\");\r\n  const [pkgDescription, setPkgDescription] = useState(\"\");\r\n  const [displayFrontEnd, setDisplayFrontEnd] = useState(\"On\");\r\n  const [payableAmount, setPayableAmount] = useState(\"\");\r\n  const [pkgParamList, setPkgParamList] = useState([]);\r\n  const [selectedPackageId, setSelectedPackageId] = useState(\"\");\r\n\r\n  //select a package name and update package title and package description -start\r\n  const handlePackageName = (e) => {\r\n    if (!isPackageName) {\r\n      setIsPackageName(true); //dropdown\r\n    }\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    let pkgId = optionElement.getAttribute(\"data-id\");\r\n    setSelectedPackageId(pkgId);\r\n    // console.log(\"PKGID : \" + pkgId);\r\n    // console.log(\"TITLE: \" + allPkgData.find((x) => x.id === pkgId).title);\r\n    // console.log(\r\n    //   \"DESCRIPTION: \" + allPkgData.find((x) => x.id === pkgId).description\r\n    // );\r\n    setPkgTitle(allPkgData.find((x) => x.id === pkgId).title);\r\n    setPkgDescription(allPkgData.find((x) => x.id === pkgId).description);\r\n    setDisplayFrontEnd(allPkgData.find((x) => x.id === pkgId).display);\r\n    setPayableAmount(allPkgData.find((x) => x.id === pkgId).payable_amount);\r\n    // get package parameter (name, price, quantity) by pkgId\r\n    async function fetchData(pkgId) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/parameters\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          package_id: pkgId,\r\n        },\r\n      };\r\n      const pkgParamApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"pkgParamApiResp - \" + JSON.stringify(pkgParamApiResp.data.msg)\r\n      // );\r\n      if (pkgParamApiResp.data.status === \"ok\") {\r\n        setPkgParamList(pkgParamApiResp.data.msg);\r\n        // toast(\"Institute Created Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n      } else {\r\n        toast(pkgParamApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n    fetchData(pkgId);\r\n  };\r\n  //select a package name and update package title and package description -end\r\n\r\n  /*PACKAGE END****************************************************************************************************/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  // modifing code start here-----------------------------------\r\n\r\n  //GET PACKAGE PARAMETER -START\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let apiResponse = response.data.data;\r\n      const apiResponseFiltered = apiResponse.filter(\r\n        (res) => res.active === \"1\"\r\n      );\r\n      //console.log(apiResponseFiltered);\r\n      setData(apiResponseFiltered);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE PARAMETER -END\r\n\r\n  // calculate payable amount\r\n  function calculateTotalAmount() {\r\n    let total_parameter = data.length;\r\n\r\n    let total = 0.0;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (\r\n        document.getElementById(\"name-\" + i).value.toLowerCase() !== \"discount\"\r\n      ) {\r\n        if (document.getElementById(\"price-\" + i).value) {\r\n          //console.log(\"Price: \" + document.getElementById(\"price-\" + i).value);\r\n          total =\r\n            parseFloat(total) +\r\n            parseFloat(document.getElementById(\"price-\" + i).value);\r\n          //console.log(\"Total: \" + total);\r\n        }\r\n      }\r\n    }\r\n\r\n    return parseFloat(total);\r\n  }\r\n  const [discountError, setDiscountError] = useState(false);\r\n  // calculate discount\r\n  function calculateDiscount(totalAmount) {\r\n    // -------------------------\r\n    let total_parameter = data.length;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (\r\n        document.getElementById(\"name-\" + i).value.toLowerCase() === \"discount\"\r\n      ) {\r\n        if (document.getElementById(\"price-\" + i).value) {\r\n          let discountValue = parseFloat(\r\n            document.getElementById(\"price-\" + i).value\r\n          );\r\n          if (discountValue <= totalAmount) {\r\n            setDiscountError(false);\r\n            console.log(\"discountValue: \" + discountValue + \"i: \" + i);\r\n            totalAmount = totalAmount - discountValue;\r\n          } else {\r\n            setDiscountError(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // ------------------------------\r\n\r\n    return parseFloat(totalAmount);\r\n  }\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index, package_amount, package_number) => {\r\n    const { name, value } = e.target;\r\n    // console.log(\r\n    //   \"Name: \" +\r\n    //     name +\r\n    //     \"\\nValue: \" +\r\n    //     value +\r\n    //     \"\\nIndex: \" +\r\n    //     index +\r\n    //     \"\\npackage_amount: \" +\r\n    //     package_amount +\r\n    //     \"\\npackage_number: \" +\r\n    //     package_number\r\n    // );\r\n    let quantity = parseInt(value);\r\n    let price = parseFloat(package_amount);\r\n    let number = parseInt(package_number);\r\n\r\n    let unitPrice = parseFloat((price / number) * quantity);\r\n    unitPrice = parseFloat(unitPrice.toFixed(2));\r\n    document.getElementById(\"price-\" + index).value = unitPrice;\r\n\r\n    let totalAmount = calculateTotalAmount();\r\n    //console.log(\"totalAmount: \" + totalAmount);\r\n    totalAmount = calculateDiscount(totalAmount);\r\n    //console.log(\"After Discount: \" + totalAmount);\r\n\r\n    document.getElementById(\"payableAmount\").value = totalAmount;\r\n  };\r\n  //date start-----------------\r\n  const [subscription_s_date, setSubscription_s_date] = useState(\"\");\r\n  const [errors_subscription_s_date, setErrors_subscription_s_date] = useState(\r\n    false\r\n  );\r\n  const [subscription_e_date, setSubscription_e_date] = useState(\"\");\r\n  const [errors_subscription_e_date, setErrors_subscription_e_date] = useState(\r\n    false\r\n  );\r\n  const [last_payment_date, setLast_payment_date] = useState(\"\");\r\n  const [errors_last_payment_date, setErrors_last_payment_date] = useState(\r\n    false\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create an Institute</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            {/* institute id */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-12\">\r\n                                <label>\r\n                                  <b>Institute ID:</b>\r\n                                </label>\r\n                                <br />\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Type of\r\n                                  Institute\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"typeOfInst\"\r\n                                  defaultValue={typeOfInst}\r\n                                  onChange={(e) =>\r\n                                    setTypeOfInst(e.target.value)\r\n                                  }\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                >\r\n                                  <option defaultValue hidden>\r\n                                    --Select--\r\n                                  </option>\r\n                                  {instituteTypes\r\n                                    .sort((a, b) =>\r\n                                      a.short_form.localeCompare(b.short_form)\r\n                                    )\r\n                                    .map((e, key) => {\r\n                                      return e.active === \"1\" ? (\r\n                                        <option\r\n                                          key={key}\r\n                                          data-id={e.id}\r\n                                          value={e.short_form}\r\n                                        >\r\n                                          {e.short_form}\r\n                                        </option>\r\n                                      ) : null;\r\n                                    })}\r\n                                </select>\r\n                                {errors.typeOfInst && (\r\n                                  <ErrorMsg>\r\n                                    {errors.typeOfInst.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instNameShortForm\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.instNameShortForm && (\r\n                                  <ErrorMsg>\r\n                                    {errors.instNameShortForm.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Serial\r\n                                  Number\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"serialNum\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.serialNum && (\r\n                                  <ErrorMsg>\r\n                                    {errors.serialNum.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* password */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instituteName\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instituteName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Institute Address */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Email Address  and Phone / Mobile No.*/}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Email\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Phone /\r\n                                  Mobile No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* SELECT DROPDOWN Package Name */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  {isCreateNewPackage ? null : (\r\n                                    <span className=\"red-star\">*</span>\r\n                                  )}\r\n                                  Package Name\r\n                                </label>\r\n                                {/* Create New Package BUTTON */}\r\n                                <button\r\n                                  disabled={isPackageName ? true : false}\r\n                                  onClick={() => setIsCreateNewPackage(true)}\r\n                                  className=\"shadow float-right badge badge-pill badge-bg mb-3\"\r\n                                  style={{ padding: \"10px 24px\" }}\r\n                                >\r\n                                  Create New Package\r\n                                </button>\r\n                                <br />\r\n                                {/* IF BUTTON PRESS THEN DROPDOWN WILL DISABLE */}\r\n                                {isCreateNewPackage ? (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    disabled\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                  </select>\r\n                                ) : (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    defaultValue=\"--Select Package--\"\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                    {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) \r\n                                    ONLY SHOW DEFAULT PACKAGE*/}\r\n                                    {allPkgData\r\n                                      .sort((a, b) =>\r\n                                        a.title.localeCompare(b.title)\r\n                                      )\r\n                                      .map((e, key) => {\r\n                                        return e.type === \"default\" ? (\r\n                                          <option\r\n                                            key={key}\r\n                                            data-id={e.id}\r\n                                            value={e.title}\r\n                                          >\r\n                                            {e.title}\r\n                                          </option>\r\n                                        ) : null;\r\n                                      })}\r\n                                  </select>\r\n                                )}\r\n                                {errors.package && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF BUTTON PRESS THEN DYNAMICALLY INPUT FIELD CREATED */}\r\n                            {isCreateNewPackage ? (\r\n                              <div>\r\n                                {/* Package Name*/}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Name\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* Package Description */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM BUTTON SO CUSTOM PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"custom\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div>\r\n                                {/* Package Title */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Title\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      readOnly\r\n                                      value={pkgTitle}\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* Description */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      readOnly\r\n                                      value={pkgDescription}\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM DROPDOWN SO DEFAULT PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"default\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            {/* Package Display Front-end ? */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Is Package Display Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    {displayFrontEnd === \"On\" ? (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        defaultValue=\"On\"\r\n                                        defaultChecked\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    ) : (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        defaultValue=\"On\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    )}\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    {displayFrontEnd === \"Off\" ? (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        defaultValue=\"Off\"\r\n                                        defaultChecked\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    ) : (\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        defaultValue=\"Off\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    )}\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                </label>\r\n                                <br />\r\n                                {pkgParamList.map((data, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <label>Title</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          id={`name-${i}`}\r\n                                          name={`name-${i}`}\r\n                                          defaultValue={data.name}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Quantity</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`quantity-${i}`}\r\n                                          defaultValue={data.quantity}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Amount</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          id={`price-${i}`}\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`price-${i}`}\r\n                                          defaultValue={data.price}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                </label>\r\n                                <br />\r\n                                {data.map((data, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <label>Title</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          id={`name-${i}`}\r\n                                          name={`name-${i}`}\r\n                                          defaultValue={data.package_item_name}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Quantity</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`quantity-${i}`}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(\r\n                                              e,\r\n                                              i,\r\n                                              data.package_amount,\r\n                                              data.package_number\r\n                                            )\r\n                                          }\r\n                                          min=\"0\"\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <label>Amount</label>\r\n                                        <br />\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          id={`price-${i}`}\r\n                                          readOnly\r\n                                          className=\"form-control mb-3\"\r\n                                          name={`price-${i}`}\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                                {discountError ? (\r\n                                  <div className=\"col-12\">\r\n                                    <ErrorMsg>\r\n                                      * Discount Value Should be Less Than\r\n                                      Payable Amount\r\n                                    </ErrorMsg>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            {/* Subscription Duration and Last Payment Date*/}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <DatePicker\r\n                                      className=\"form-control\"\r\n                                      selected={subscription_s_date}\r\n                                      //defaultValue={new Date()}\r\n                                      onChange={(date) => {\r\n                                        setSubscription_s_date(date);\r\n                                        setErrors_subscription_s_date(false);\r\n                                      }}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      showYearDropdown\r\n                                      scrollableMonthYearDropdown\r\n                                      placeholderText=\"dd/mm/yyyy\"\r\n                                    />\r\n                                    {errors_subscription_s_date ? (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    ) : null}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <DatePicker\r\n                                      className=\"form-control\"\r\n                                      selected={subscription_e_date}\r\n                                      //defaultValue={new Date()}\r\n                                      onChange={(date) => {\r\n                                        setSubscription_e_date(date);\r\n                                        setErrors_subscription_e_date(false);\r\n                                      }}\r\n                                      minDate={subscription_s_date}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      showYearDropdown\r\n                                      scrollableMonthYearDropdown\r\n                                      placeholderText=\"dd/mm/yyyy\"\r\n                                    />\r\n                                    {errors_subscription_e_date ? (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    ) : null}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Last\r\n                                  Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <DatePicker\r\n                                  className=\"form-control\"\r\n                                  selected={last_payment_date}\r\n                                  //defaultValue={new Date()}\r\n                                  onChange={(date) => {\r\n                                    setLast_payment_date(date);\r\n                                    setErrors_last_payment_date(false);\r\n                                  }}\r\n                                  dateFormat=\"dd/MM/yyyy\"\r\n                                  showYearDropdown\r\n                                  scrollableMonthYearDropdown\r\n                                  placeholderText=\"dd/mm/yyyy\"\r\n                                />\r\n                                {errors_last_payment_date ? (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                ) : null}\r\n                              </div>\r\n                            </div>\r\n                            {/* payable amount */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                <label>Payable Amount</label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  readOnly\r\n                                  id=\"payableAmount\"\r\n                                  name=\"payableAmount\"\r\n                                  defaultValue={\r\n                                    payableAmount ? payableAmount : \"\"\r\n                                  }\r\n                                  className=\"form-control\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Phone / Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Subscription End</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"phone\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {Moment.utc(row[\"subscription_e_date\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Active\" : \"Inactive\"}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() => history.push(`/institute-detail/${row[\"id\"]}`)}\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/institute-update/${row[\"id\"]}/${row[\"package_id\"]}`\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                {row[\"id\"] ? (\r\n                  <i\r\n                    onClick={() => toggleInstStatus(row[\"id\"])}\r\n                    className={`fas ${\r\n                      isActive ? \"fa-toggle-off\" : \"fa-toggle-on\"\r\n                    } action-icon`}\r\n                  ></i>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstList from \"./DatatableInstList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function InstituteListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.phone.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.subscription_e_date.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/institute-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Institute\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstDetail({ data }) {\r\n  //console.log(\"Institute Details: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8 table-font-100\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute ID</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.institute_id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.name}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Status</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              :{\" \"}\r\n              {data.active === \"1\" ? (\r\n                <span className=\"text-green\">Active</span>\r\n              ) : (\r\n                <span className=\"text-red\">Inactive</span>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Email Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Phone / Mobile No.</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.phone}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Package Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              <Link to={`/package-details/${data.package_id}`}>\r\n                : {data.package_title}\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription Start Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_s_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription End Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_e_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Payable Amount</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.payment_amount}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport DatatableInstDetail from \"./DatatableInstDetail\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function InstituteDetails() {\r\n  //GET INSTITUTE DETAIL -START\r\n  const [instDetail, setInstDetail] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instDetailApiResp - \" + instDetailApiResp.data.msg);\r\n      setInstDetail(instDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INSTITUTE DETAIL -END\r\n  //\r\n\r\n  let history = useHistory();\r\n  //institute delete\r\n  async function deleteInstitute(instituteId) {\r\n    // console.log(\"instituteId : \" + instituteId);\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"delete\",\r\n      url: `/institute-delete/${instituteId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const deleteInstApiResp = await trackPromise(axios(config));\r\n    //console.log(\"deleteInstApiResp - \" + deleteInstApiResp.data);\r\n    if (deleteInstApiResp.data.status === \"ok\") {\r\n      toast(\"Institute Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      history.push(\"/institute-list-view\");\r\n    } else {\r\n      toast(deleteInstApiResp.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Institute Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            {/* DISPLAY IN DETAILS FULL INFO OF INSTITUTE  */}\r\n                            <DatatableInstDetail data={instDetail} />\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteUpdate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const { id, package_id } = useParams();\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: package_id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [package_id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  //GET INSTITUTE DATA -START\r\n  const [instData, setInstData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"instApiResp - \" + JSON.stringify(instApiResp.data.msg.params));\r\n      setInstData(instApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, [id]);\r\n  //GET INSTITUTE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    // console.log(\"Form Data: \" + JSON.stringify(data));\r\n\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: package_id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    // console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        //console.log(\"Package Update Successfully\");\r\n        // toast(\"Package Update Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n        // history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n\r\n    //seperate institute vlaues from data object start\r\n    const instituteData = {\r\n      id: id,\r\n      package_id: package_id,\r\n      institute_id: data.institute_id,\r\n      password: data.password,\r\n      name: data.instName,\r\n      address: data.address,\r\n      email: data.email,\r\n      phone: data.phone,\r\n      subscription_s_date: data.subscription_s_date,\r\n      subscription_e_date: data.subscription_e_date,\r\n      last_payment: data.last_payment,\r\n      payment_amount: data.payment_amount,\r\n    };\r\n    // console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n    //seperate institute vlaues from data object end\r\n    postInstData(instituteData);\r\n    async function postInstData(instituteData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: instituteData,\r\n      };\r\n      const updateInstApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updateInstApiResp - \" + updateInstApiResp.data);\r\n      if (updateInstApiResp.data.status === \"ok\") {\r\n        toast(\"Institute Information Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        // history.push(\"/institute-list-view\");\r\n      } else {\r\n        toast(updateInstApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Information</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  ID\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_id\"\r\n                                  defaultValue={instData.institute_id}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_id && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  defaultValue={instData.password}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                    minLength: {\r\n                                      value: 6,\r\n                                      message: \"* Minimum 6 Character Required\",\r\n                                    },\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instName\"\r\n                                  defaultValue={instData.name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  defaultValue={instData.address}\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Mail Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  defaultValue={instData.email}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Phone No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  defaultValue={instData.phone}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_s_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_s_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_s_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_e_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_e_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_e_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Last Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"date\"\r\n                                  className=\"form-control\"\r\n                                  name=\"last_payment\"\r\n                                  defaultValue={instData.last_payment}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.last_payment && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Payable\r\n                                  Amount\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"payment_amount\"\r\n                                  defaultValue={instData.payment_amount}\r\n                                  min=\"0\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.payment_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n\r\n                            {/* PACKAGE PART START IT WILL COPY FROM EDIT PACKAGE ************************************************/}\r\n                            {/* <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null} */}\r\n\r\n                            {/* PACKAGE PART END-------------------------------------------- */}\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function ViewProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n    var response = {};\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          setIsProfileUpdate(false);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"col-6\" style={{ paddingTop: \"8px\" }}>\r\n                            <Link to=\"/edit-profile\">\r\n                              <span\r\n                                className=\"shadow float-right badge badge-pill badge-bg\"\r\n                                style={{ padding: \"10px 24px\" }}\r\n                              >\r\n                                <i className=\"far fa-edit pr-2\"></i>Edit Profile\r\n                              </span>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {Moment(\r\n                                        new Date(user.date_of_birth)\r\n                                      ).format(\"DD/MM/YYYY\")}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadAvatar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"./img/avatar-default.png\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        console.log(reader);\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/avatar-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadCover() {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      let id = localStorage.getItem(\"id\");\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/cover-img-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport Moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/info-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data,\r\n      };\r\n\r\n      async function fetchData() {\r\n        const userApiResp = await trackPromise(axios(config));\r\n        // console.log(JSON.stringify(userApiResp.data));\r\n        if (userApiResp.data.status === \"ok\") {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      }\r\n      fetchData();\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  ///api for get user info--------------\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        // console.log(response.data.msg);\r\n        setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n      if (isProfileUpdate) {\r\n        history.push(\"/view-profile\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [isProfileUpdate]);\r\n  //console.log(user.date_of_birth);\r\n  //\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateAddress() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  let user_id = localStorage.getItem(\"id\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data[\"user_id\"] = user_id;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/update-user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-address\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"TEST user - \" + userApiResp.data.msg);\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_division\"\r\n              id=\"per_division\"\r\n              value={user.per_division}\r\n              onChange={(e) => ChangePerDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDivisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_district\"\r\n              id=\"per_district\"\r\n              value={user.per_district}\r\n              onChange={(e) => ChangePerDistrict(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDistrictData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport UpdateAddress from \"./UpdateAddress\";\r\n\r\nexport default function EditInformation() {\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Edit Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? <UpdateProfile /> : null}\r\n        {showAddressInfo ? <UpdateAddress /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadAvatar from \"./UploadAvatar\";\r\nimport UploadCover from \"./UploadCover\";\r\nimport EditInformation from \"./EditInformation\";\r\n\r\nexport default function EditProfile() {\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Edit Profile</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link to=\"/view-profile\">\r\n                        <span\r\n                          className=\"shadow float-right badge badge-pill badge-bg\"\r\n                          style={{ padding: \"10px 24px\" }}\r\n                        >\r\n                          <i className=\"far fa-user pr-2\"></i>View My Profile\r\n                        </span>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Edit\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                // console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? <EditInformation /> : null}\r\n                            {showProfilePhoto ? <UploadAvatar /> : null}\r\n                            {showCoverPhoto ? <UploadCover /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function Logout() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  // alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  // const apiUrl = \"https://jsonplaceholder.typicode.com/posts?userId=1\";\r\n\r\n  // alert(accessToken);\r\n\r\n  var config = {\r\n    method: \"get\",\r\n    url: \"/logout\",\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    },\r\n  };\r\n\r\n  axios(config).then(function (response) {\r\n    // console.log(JSON.stringify(response.data));\r\n    if (response.data.status === \"ok\") {\r\n      // localStorage.clear();\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"emailAddress\");\r\n\r\n      // if logout success\r\n      //props.history.push(\"/\");\r\n      // auth.logout(() => {\r\n\r\n      // });\r\n    }\r\n  });\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport logo from \"./logo2.png\";\r\n\r\nexport default function Navbar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          //console.log(\"nav updated\");\r\n        }\r\n      })\r\n    );\r\n  }, [isProfileUpdate]);\r\n  //console.log(user);\r\n  //\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* TOP NAVBAR START */}\r\n      <nav className=\"sticky-top main-header navbar navbar-expand-lg navbar-white navbar-light\">\r\n        <div className=\"container-fluid layout-width\">\r\n          <Link to=\"/dashboard\" className=\"mr-4\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n              className=\"img-fluid\"\r\n            />\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            {/* left side menu item */}\r\n            {/* <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item vertical-bar\">\r\n                <Link to=\"/dashboard\" className=\"nav-link hov-effect\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            </ul> */}\r\n            {/* right side menu item */}\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {/* Email Dropdown Menu */}\r\n              <li className=\"nav-item dropdown\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <i className=\"far fa-envelope\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">3</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 mr-3 img-circle\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Brad Diesel\r\n                          <span className=\"float-right text-sm text-danger\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">Call me whenever you can...</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"img/ninad.png\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          John Pierce\r\n                          <span className=\"float-right text-sm text-muted\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">I got your message bro</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Nora Silvester\r\n                          <span className=\"float-right text-sm text-warning\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">The subject goes here</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Messages\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Alarm Dropdown Menu */}\r\n              <li className=\"nav-item dropdown\">\r\n                <Link\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                  to=\"#\"\r\n                >\r\n                  <i className=\"far fa-bell\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">15</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <span className=\"dropdown-item dropdown-header\">\r\n                    15 Notifications\r\n                  </span>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-envelope mr-2\" /> 4 new messages\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      3 mins\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-users mr-2\" /> 8 friend requests\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      12 hours\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-file mr-2\" /> 3 new reports\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      2 days\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Notifications\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Flag Dropdown Menu */}\r\n              <li className=\"nav-item dropdown mr-3\">\r\n                <Link\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                  to=\"#\"\r\n                >\r\n                  <i className=\"far fa-flag\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">3</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 mr-3 img-circle\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Brad Diesel\r\n                          <span className=\"float-right text-sm text-danger\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">Call me whenever you can...</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user8-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          John Pierce\r\n                          <span className=\"float-right text-sm text-muted\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">I got your message bro</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Nora Silvester\r\n                          <span className=\"float-right text-sm text-warning\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">The subject goes here</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Messages\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Ninad Hossain Profile Menu*/}\r\n              <li className=\"nav-item dropdown d-flex\">\r\n                <div className=\"profile-image\">\r\n                  {(() => {\r\n                    if (user.avatar_img) {\r\n                      return (\r\n                        <img\r\n                          src={`${user.avatar_img}`}\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <img\r\n                          src=\"dist/img/avatar_default.jpg\"\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                  <Link\r\n                    className=\"dropdown-toggle d-block nav-link pr-0\"\r\n                    data-toggle=\"dropdown\"\r\n                    to=\"#\"\r\n                    role=\"button\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    {user.fname} {user.lname}\r\n                  </Link>\r\n                  <div className=\"dropdown-menu sub-menu\">\r\n                    <Link className=\"dropdown-item\" to=\"/view-profile\">\r\n                      My Profile\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/account-info\">\r\n                      Account Info\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/\" onClick={Logout}>\r\n                      Logout\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* TOP NAVBAR END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nexport default function Sidebar() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n  //console.log(width);\r\n  if (width < 576) {\r\n    var sidebar_mini = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    sidebar_mini.classList.add(\"sidebar-collapse\");\r\n  }\r\n  function mySidebar() {\r\n    // alert(\"hi\");\r\n    var menu = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    menu.classList.toggle(\"sidebar-collapse\");\r\n  }\r\n\r\n  // extract pathname from location\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <React.Fragment>\r\n      {/* LEFT SIDEBAR MENU START */}\r\n      <aside className=\"main-sidebar sidebar-no-expand elevation-4\">\r\n        <div className=\"sidebar\">\r\n          <nav className=\"\" style={{ marginTop: \"82px\" }}>\r\n            <ul\r\n              className=\"nav nav-pills nav-sidebar flex-column\"\r\n              role=\"menu\"\r\n              data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link button-left\"\r\n                  role=\"button\"\r\n                  id=\"sidebar-toggle\"\r\n                  onClick={mySidebar}\r\n                >\r\n                  <i className=\"nav-icon fa fa-fw fa-bars\" />\r\n                  <p />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/dashboard\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  exact\r\n                >\r\n                  <i className=\"nav-icon fas fa-border-all\" />\r\n                  <p>Dashboard</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/user-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/user-list-view\",\r\n                      \"/create-user\",\r\n                      \"/user-detail-view\",\r\n                      \"/update-user\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-plus-square\"></i>\r\n                  <p>Create User</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/institute-list-view\"\r\n                  className=\"nav-link dropbtn\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/institute-list-view\", \"/institute-create\"].includes(\r\n                      pathname\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-edit\" />\r\n                  <p>Registration</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/package-list-view\",\r\n                      \"/package-create\",\r\n                      \"/package-details\",\r\n                      \"/package-edit\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-copy\" />\r\n                  <p>Package System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-history\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/package-history\", \"/package-history-detail\"].includes(\r\n                      pathname\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon fas fa-history\"></i>\r\n                  <p>Package History</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/billing-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/billing-list-view\",\r\n                      \"/create-bill\",\r\n                      \"/billing-invoice-view\",\r\n                      \"/update-bill\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-alt\" />\r\n                  <p>Billing System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/payment-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/payment-list-view\",\r\n                      \"/payment-approve\",\r\n                      \"/payment-history-view\",\r\n                      \"/inst-payment-history\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-powerpoint\" />\r\n                  <p>Payment System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/email\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() => [\"/email\"].includes(pathname)}\r\n                >\r\n                  <i className=\"nav-icon far fa-envelope\"></i>\r\n                  <p>Email</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/settings\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/settings\",\r\n                      \"/create-user-type\",\r\n                      \"/view-user-type\",\r\n                      \"/edit-user-type\",\r\n                      \"/add-new-pkg-item\",\r\n                      \"/edit-new-pkg-item\",\r\n                      \"/add-new-inst-type\",\r\n                      \"/edit-new-inst-type\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-sun\" />\r\n                  <p>Settings</p>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </aside>\r\n      {/* LEFT SIDEBAR MENU END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport Sidebar from \"../Layout/Sidebar\";\r\nimport { ProfileProvider } from \"../../ProfileContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          if (localStorage.getItem(\"token\")) {\r\n            return (\r\n              <ProfileProvider>\r\n                <div>\r\n                  <Navbar />\r\n                  <Sidebar />\r\n                  <Component {...props} />\r\n                </div>\r\n              </ProfileProvider>\r\n            );\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: {\r\n                    from: props.location,\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport { type } from \"jquery\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreatePackage() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let parameter = [];\r\n  let packages = {};\r\n  const history = useHistory();\r\n\r\n  function getPackageParameter(data) {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    var total_parameter = 0;\r\n    for (let key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        if (key.includes(\"name-\")) {\r\n          total_parameter = total_parameter + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      let object = {};\r\n      let name_key = `name-${i}`;\r\n      let quantity_key = `quantity-${i}`;\r\n      let price_key = `price-${i}`;\r\n\r\n      object[\"name\"] = data[name_key];\r\n      object[\"quantity\"] = data[quantity_key];\r\n      object[\"price\"] = data[price_key];\r\n\r\n      parameter.push(object);\r\n    }\r\n    return parameter;\r\n    //console.log(JSON.stringify(parameter));\r\n  }\r\n  const onSubmit = (data) => {\r\n    console.log(\"DATA: \" + JSON.stringify(data));\r\n\r\n    packages = {\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n      type: \"default\",\r\n      payable_amount: data.payableAmount,\r\n    };\r\n\r\n    const parameters = getPackageParameter(data);\r\n    //console.log(\"parameters: \" + JSON.stringify(parameters));\r\n\r\n    const packageData = {\r\n      package: packages,\r\n      parameters: parameters,\r\n    };\r\n\r\n    postData(packageData);\r\n    async function postData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-save\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      // console.log(\"PACKAGE DATA---\" + JSON.stringify(packageData));\r\n      const savePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n      if (savePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Created Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(savePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //GET PACKAGE PARAMETER -START\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let apiResponse = response.data.data;\r\n      const apiResponseFiltered = apiResponse.filter(\r\n        (res) => res.active === \"1\"\r\n      );\r\n      //console.log(apiResponseFiltered);\r\n      setData(apiResponseFiltered);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE PARAMETER -END\r\n\r\n  // calculate payable amount\r\n  function calculateTotalAmount() {\r\n    let total_parameter = data.length;\r\n\r\n    let total = 0.0;\r\n    for (let i = 0; i < total_parameter; i++) {\r\n      if (document.getElementById(\"price-\" + i).value) {\r\n        //console.log(\"Price: \" + document.getElementById(\"price-\" + i).value);\r\n        total =\r\n          parseFloat(total) +\r\n          parseFloat(document.getElementById(\"price-\" + i).value);\r\n        //console.log(\"Total: \" + total);\r\n      }\r\n    }\r\n    return parseFloat(total);\r\n  }\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index, package_amount, package_number) => {\r\n    const { name, value } = e.target;\r\n    // console.log(\r\n    //   \"Name: \" +\r\n    //     name +\r\n    //     \"\\nValue: \" +\r\n    //     value +\r\n    //     \"\\nIndex: \" +\r\n    //     index +\r\n    //     \"\\npackage_amount: \" +\r\n    //     package_amount +\r\n    //     \"\\npackage_number: \" +\r\n    //     package_number\r\n    // );\r\n    let quantity = parseInt(value);\r\n    let price = parseFloat(package_amount);\r\n    let number = parseInt(package_number);\r\n\r\n    let unitPrice = parseFloat((price / number) * quantity);\r\n    unitPrice = parseFloat(unitPrice.toFixed(2));\r\n    document.getElementById(\"price-\" + index).value = unitPrice;\r\n\r\n    let totalAmount = calculateTotalAmount();\r\n    //console.log(\"totalAmount: \" + totalAmount);\r\n\r\n    if (\r\n      document.getElementById(\"name-\" + index).value.toLowerCase() ===\r\n      \"discount\"\r\n    ) {\r\n      let discountValue = parseFloat(\r\n        document.getElementById(\"price-\" + index).value\r\n      );\r\n      console.log(\"discountValue: \" + discountValue);\r\n      totalAmount = totalAmount - discountValue * 2;\r\n    }\r\n\r\n    document.getElementById(\"payableAmount\").value = totalAmount;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create a Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            {/* package name */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"packageTitle\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.packageTitle && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* package description */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Description\r\n                                </label>\r\n                                <br />\r\n                                <textarea\r\n                                  className=\"form-control\"\r\n                                  name=\"packageDescription\"\r\n                                  ref={register({ required: true })}\r\n                                  rows=\"1\"\r\n                                  cols=\"30\"\r\n                                ></textarea>\r\n                                {errors.packageDescription && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* Is Package Display on Front-end ? */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Is Package Display on Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      type=\"radio\"\r\n                                      className=\"mr-2\"\r\n                                      value=\"On\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      className=\"mr-2\"\r\n                                      type=\"radio\"\r\n                                      value=\"Off\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* package parameter */}\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                              {data.map((data, i) => {\r\n                                return (\r\n                                  <div className=\"row\" key={i}>\r\n                                    <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                      <label>Title</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        readOnly\r\n                                        className=\"form-control mb-3\"\r\n                                        id={`name-${i}`}\r\n                                        name={`name-${i}`}\r\n                                        defaultValue={data.package_item_name}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <label>Quantity</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        name={`quantity-${i}`}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            i,\r\n                                            data.package_amount,\r\n                                            data.package_number\r\n                                          )\r\n                                        }\r\n                                        min=\"0\"\r\n                                        required\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      {errors.quantity && (\r\n                                        <ErrorMsg>\r\n                                          * This Field is Required\r\n                                        </ErrorMsg>\r\n                                      )}\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <label>Amount</label>\r\n                                      <br />\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        id={`price-${i}`}\r\n                                        readOnly\r\n                                        className=\"form-control mb-3\"\r\n                                        name={`price-${i}`}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                            {/* payable amount */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                <label>Payable Amount</label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  readOnly\r\n                                  id=\"payableAmount\"\r\n                                  name=\"payableAmount\"\r\n                                  className=\"form-control\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create package form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function Datatable({ data }) {\r\n  const history = useHistory();\r\n\r\n  async function deletePackage(packageId, packageType) {\r\n    if (packageType === \"custom\") {\r\n      toast(\"Custom Package Can Not Deleted\", {\r\n        className: \"toast-error\",\r\n      });\r\n    } else {\r\n      // console.log(\"package id: \" + packageId);\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: `/package-delete`,\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          package_id: packageId,\r\n        },\r\n      };\r\n      const deletePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"deletePkgApiResp - \" + deletePkgApiResp.data);\r\n      if (deletePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Deleted Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.go(0);\r\n      } else {\r\n        toast(deletePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Package Type</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"type\"].charAt(0).toUpperCase() + row[\"type\"].slice(1)}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"display\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-details\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-edit\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Delete\"\r\n                onClick={() => history.push(`/package-edit/${row[\"id\"]}`)}\r\n                onClick={() => {\r\n                  deletePackage(row[\"id\"], row[\"type\"]);\r\n                }}\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport DatatablePkgList from \"./DatatablePkgList\";\r\nexport default function PackageListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let allPkgApiResp = await trackPromise(axios(config));\r\n      allPkgApiResp = allPkgApiResp.data.msg.reverse();\r\n      // console.log(\"allPkgApiResp - \" + JSON.stringify(allPkgApiResp));\r\n      // formatObject(allPkgApiResp);\r\n      setData(allPkgApiResp);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.type.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/package-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Package\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Datatable({ data, packageDetail }) {\r\n  // console.log(\"Params: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Title</th>\r\n            <th className=\"inst-list-th text-center\">Quantity</th>\r\n            <th className=\"inst-list-th text-center\">Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"quantity\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"price\"]}</td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td className=\"inst-list-td text-center\"></td>\r\n            <td className=\"inst-list-td text-center\">\r\n              <b>Total</b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all quantity */}\r\n              <b>\r\n                {data.reduce(\r\n                  (a, b) => parseInt(a) + parseInt(b[\"quantity\"] || 0),\r\n                  0\r\n                )}\r\n              </b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all price */}\r\n              <b>{packageDetail.payable_amount}</b>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\nimport DatatableParams from \"./DatatableParams\";\r\nexport default function PackageDetails() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: location.state.id },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg);\r\n      setPackageDetail(pkgDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            <table className=\"table table-borderless table-responsive table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">Title</td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.title}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Description\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.description}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Display\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.display}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Package Type\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.type}\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            {packageDetail.params ? (\r\n                              <DatatableParams\r\n                                data={packageDetail.params}\r\n                                packageDetail={packageDetail}\r\n                              />\r\n                            ) : null}\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function PackageEdit() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: location.state.id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [location.state.id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: location.state.id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    //console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* IF PACKAGE NAME IS SELECTED FROM DROPDOWN THEN SHOW READONLY FILED */}\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            title=\"Delete This Package\"\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null}\r\n\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePkgHistoryList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Description</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\">Created Date</th>\r\n            <th className=\"inst-list-th text-center\">Updated Date</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"description\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"display\"]}</td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"created_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"updated_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/package-history-detail\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePkgHistoryList from \"./DatatablePkgHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function PackageHistory() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchInstData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setData(allPkgApiResp.data.msg);\r\n    }\r\n    fetchInstData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.description.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.created_at.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.updated_at.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Package History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nexport default function PackageHistoryDetail() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState([]);\r\n  const [packageTitle, setPackageTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          package_id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg.params);\r\n      setPackageTitle(pkgDetailApiResp.data.msg.title);\r\n      setPackageDetail(pkgDetailApiResp.data.msg.params);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* PAGE CONTENT START */}\r\n      <div className=\"content-wrapper pt-3 pb-5\">\r\n        <div className=\"content\">\r\n          <div className=\"container-fluid layout-width\">\r\n            {/*  */}\r\n            {/* Content Start */}\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <h4 className=\"heading\">Package Parameter History</h4>\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <Link\r\n                      to=\"/package-history\"\r\n                      className=\"border ml-1 add-button shadow float-right\"\r\n                      title=\"Back\"\r\n                    >\r\n                      <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body p-0\">\r\n                    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                        <div className=\"col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                          <b>{packageTitle}</b>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                            <thead>\r\n                              <tr className=\"inst-list-heading\">\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  SL No.\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Name\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Quantity\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Price\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Created At\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Updated At\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {packageDetail.map((row, index) => (\r\n                                <tr key={index}>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {index + 1}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"name\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"quantity\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"price\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                        <LoadingIndicator />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function DatatableUserTypeList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"typename\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserTypeList from \"./DatatableUserTypeList\";\r\nexport default function UserPermission() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE LIST -END\r\n\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/create-user-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Create User Type\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableUserTypeList data={data} />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatablePackageSetup() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsPackageActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Items For Package</th>\r\n            <th className=\"inst-list-th text-center\">Number / Size</th>\r\n            <th className=\"inst-list-th text-center\">Amount / Value</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_item_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_number\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_amount\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-pkg-item\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePackageSetup from \"./DatatablePackageSetup\";\r\nexport default function PackageSetup() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-pkg-item\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatablePackageSetup />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatableInstType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsInstituteActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Type Name</th>\r\n            <th className=\"inst-list-th text-center\">Short Form</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"short_form\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-inst-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstType from \"./DatatableInstType\";\r\nexport default function InstituteType() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-inst-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableInstType />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UserPermission from \"./UserPermission\";\r\nimport PackageSetup from \"./PackageSetup\";\r\nimport InstituteType from \"./InstituteType\";\r\n\r\nexport default function Settings() {\r\n  const [showUserPermission, setShowUserPermission] = useState(true);\r\n  const [showPackageSetup, setShowPackageSetup] = useState(false);\r\n  const [showInstituteType, setShowInstituteType] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Settings</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showUserPermission ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(true);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-user pr-2 pl-3\"></i>User\r\n                              Permission\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showPackageSetup ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(true);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-list-alt pr-2 pl-3\"></i>\r\n                              Package Setup\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInstituteType ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-university pr-2 pl-3\"></i>\r\n                              Institute Type\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showUserPermission ? <UserPermission /> : null}\r\n                            {showPackageSetup ? <PackageSetup /> : null}\r\n                            {showInstituteType ? <InstituteType /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/CreateNewInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Bill Created Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [instituteName, setInstituteName] = useState(\"\");\r\n  const [billingAmount, setBillingAmount] = useState(\"\");\r\n  /*INSTITUTE ID DROPDOWN START */\r\n  const [instituteIdData, setInstituteIdData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteIDs\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instIdApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instIdApiResp - \" + JSON.stringify(instIdApiResp.data.msg.data)\r\n      // );\r\n      setInstituteIdData(instIdApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange institute id dropdown menu, institute name value will update -start\r\n  const ChangeInstName = (e) => {\r\n    //setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"id: \" + id);\r\n\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instDetailApiResp - \" + JSON.stringify(instDetailApiResp.data.msg)\r\n      // );\r\n      setInstituteName(instDetailApiResp.data.msg.name);\r\n      setBillingAmount(instDetailApiResp.data.msg.payment_amount);\r\n    }\r\n    fetchData();\r\n  };\r\n  //onchange institute id dropdown menu, institute name value will update -end\r\n  /*INSTITUTE ID DROPDOWN END */\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* institute id */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute ID\r\n            </label>\r\n            <br />\r\n            {instituteIdData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"institute_id\"\r\n                name=\"institute_id\"\r\n                defaultValue=\"--Select Institute ID--\"\r\n                onChange={(e) => ChangeInstName(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select Institute ID--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {instituteIdData\r\n                  .sort((a, b) => a.institute_id.localeCompare(b.institute_id))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.institute_id}>\r\n                        {e.institute_id}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.institute_id && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* institute name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              defaultValue={instituteName}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.institute_name && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* billing month */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* billing year */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n              <option value=\"2031\">2031</option>\r\n              <option value=\"2032\">2032</option>\r\n              <option value=\"2033\">2033</option>\r\n              <option value=\"2034\">2034</option>\r\n              <option value=\"2035\">2035</option>\r\n              <option value=\"2036\">2036</option>\r\n              <option value=\"2037\">2037</option>\r\n              <option value=\"2038\">2038</option>\r\n              <option value=\"2039\">2039</option>\r\n              <option value=\"2040\">2040</option>\r\n              <option value=\"2041\">2041</option>\r\n              <option value=\"2042\">2042</option>\r\n              <option value=\"2043\">2043</option>\r\n              <option value=\"2044\">2044</option>\r\n              <option value=\"2045\">2045</option>\r\n              <option value=\"2046\">2046</option>\r\n              <option value=\"2047\">2047</option>\r\n              <option value=\"2048\">2048</option>\r\n              <option value=\"2049\">2049</option>\r\n              <option value=\"2050\">2050</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Billing Amount */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              readOnly\r\n              defaultValue={billingAmount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[+]?\\d+([.]\\d+)?$/,\r\n                  message: \"* Please Enter Positive Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Bill Generate\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateBillForm from \"./CreateBillForm\";\r\nexport default function CreateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Generate Bill</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n      setMonth(invoiceApiResp.data.msg.month);\r\n      setYear(invoiceApiResp.data.msg.year);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute ID</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_id\"\r\n              readOnly\r\n              defaultValue={data.institute_id}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              readOnly\r\n              defaultValue={data.institute_name}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              value={month}\r\n              onChange={(e) => setMonth(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              defaultValue={data.amount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[1-9]\\d*$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Update\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UpdateBillForm from \"./UpdateBillForm\";\r\nexport default function UpdateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Billing Info</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <UpdateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableBillingList({ data }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Bill Generate Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"created_at\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-bill\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Send Bill\">\r\n                <Link to=\"#\">\r\n                  <i className=\"far fa-share-square  action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function DatatableBillingHistoryList() {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Approved\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentData.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        total={totalItems}\r\n        itemsPerPage={ITEMS_PER_PAGE}\r\n        currentPage={currentPage}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableBillingList from \"./DatatableBillingList\";\r\nimport DatatableBillingHistoryList from \"./DatatableBillingHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function BillingListView() {\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Pending\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Billing Information</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/* start here */}\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice List\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice History\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          {/* 1st content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-left mb-3\">\r\n                                <Link\r\n                                  to=\"/create-bill\"\r\n                                  className=\"border ml-1 add-button shadow\"\r\n                                  title=\"Create Bill\"\r\n                                >\r\n                                  <i className=\"fas fa-plus add-button-icon\"></i>\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  value={search}\r\n                                  onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                    setCurrentPage(1);\r\n                                  }}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingList data={currentData} />\r\n                              <PaginationComponent\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={(page) => setCurrentPage(page)}\r\n                              />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* 2nd content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  //value={q}\r\n                                  //onChange={(e) => setQ(e.target.value)}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingHistoryList />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nexport default function BillingInvoiceView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Invoice Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Invoice ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_name}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.month}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.year}\r\n                                </td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Amount\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.amount}\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentList({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Payment Document</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Payment Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* CODE WILL COPY FROM DATATABLE INST LIST */}\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">1</td>\r\n            <td className=\"inst-list-td  text-center\">01FA5WE99874D</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-BRAC-102</td>\r\n            <td className=\"inst-list-td  text-center\">Brac University</td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">September-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Pending</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">2</td>\r\n            <td className=\"inst-list-td  text-center\">45DFS8554G85SD</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-NSU-420</td>\r\n            <td className=\"inst-list-td  text-center\">\r\n              North South University\r\n            </td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">October-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Approved</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentList from \"./DatatablePaymentList\";\r\nexport default function PaymentListView() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Payment Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/payment-history-view\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Payment History\"\r\n                            >\r\n                              <i className=\"add-button-icon fas fa-history\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={q}\r\n                              onChange={(e) => setQ(e.target.value)}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentList data={search(data)} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentHistoryList({ data }) {\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Contact</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n              >\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/inst-payment-history\",\r\n                    state: { institute_id_string: row[\"institute_id\"] },\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-eye action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentHistoryList from \"./DatatablePaymentHistoryList\";\r\nexport default function PaymentHistoryView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteListWithInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instListApiResp - \" + JSON.stringify(instListApiResp.data.msg.data)\r\n      // );\r\n      setData(instListApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Payment History</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstPaymentHistory({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Initial Doc Attachment</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Year</th>\r\n            <th className=\"inst-list-th text-center\">Submitted Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">-</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"month\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"year\"]}</td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\">{row[\"status\"]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function InstPaymentHistory() {\r\n  const [data, setData] = useState([]);\r\n  const [instData, setInstData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetAllInvoicesSingleInstitute\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          institute_id_string: location.state.institute_id_string,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg.details)\r\n      // );\r\n\r\n      setInstData(invoiceApiResp.data.msg.details);\r\n      setData(invoiceApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute Payment History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0\">\r\n                                  {instData.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute Name</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.name}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Contact</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.phone}</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0\">Email</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.email}</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstPaymentHistory data={currentData} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function PaymentApprove() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Approve Payment</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  UNIV-BRAC-102\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  Brac University\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">January</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">2020</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">Initial Doc</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">Pay.pdf</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Approve\r\n                            </button>\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function CreateUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (data) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"active\"] = \"1\";\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/CreateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ViewUserType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      // console.log(\"response - \" + response.data.msg);\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">View User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          <form className=\"mt-4\">\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>{data.typename}</label>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </form>\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (/*data*/) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Updated Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.msg));\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* update role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  readOnly\r\n                                  defaultValue={data.typename}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* update role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsPackageCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsPackage\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsPackageWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update New Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  defaultValue={data.package_item_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  defaultValue={data.package_number}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  defaultValue={data.package_amount}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsInstituteCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add New Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n    data[\"short_form\"] = data[\"short_form\"].toUpperCase();\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsInstitute\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsInstituteWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  defaultValue={data.institute_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  defaultValue={data.short_form}\r\n                                  ref={register({ required: true })}\r\n                                  style={{ textTransform: \"uppercase\" }}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function Compose() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  let history = useHistory();\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n  // POST PACKAGE DATA -START\r\n  const onSubmit = async (data) => {\r\n    let formData = new FormData();\r\n    formData.append(\"to_address\", data.to_address);\r\n    formData.append(\"from_address\", emailAddress);\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"body\", data.body);\r\n    formData.append(\"status\", \"sent\");\r\n    formData.append(\r\n      \"file_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    formData.append(\r\n      \"image_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SendNewEmail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    //console.log(\"DATA---\" + formData);\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Send Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      history.push(\"/email\");\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  };\r\n  // POST PACKAGE DATA -END\r\n  return (\r\n    <div>\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* To */}\r\n        <div className=\"form-group row pb-0 mb-0\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6 pb-0 mb-0\">\r\n            <div className=\"d-flex\">\r\n              <label style={{ paddingTop: \"8px\", minWidth: \"80px\" }}>To</label>\r\n              <span style={{ paddingTop: \"8px\" }}>:</span>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 email-to\"\r\n                name=\"to_address\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </div>\r\n            <br />\r\n            {errors.to_address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Subject */}\r\n        <div className=\"form-group row pt-0 mt-0\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6 pb-0 mb-0\">\r\n            <div className=\"d-flex\">\r\n              <label style={{ paddingTop: \"8px\", minWidth: \"80px\" }}>\r\n                Subject\r\n              </label>\r\n              <span style={{ paddingTop: \"8px\" }}>:</span>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 email-to\"\r\n                name=\"title\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </div>\r\n            <br />\r\n            {errors.title && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* body */}\r\n        <div className=\"form-group row mt-5 mr-2\">\r\n          <div className=\"col\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"body\"\r\n              ref={register({ required: true })}\r\n              rows=\"10\"\r\n              cols=\"100\"\r\n            ></textarea>\r\n            <br />\r\n            {errors.body && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex\">\r\n          <button type=\"submit\" className=\"btn btn-update\">\r\n            Send\r\n          </button>\r\n          <i\r\n            className=\"fas fa-paperclip pr-2 pl-3\"\r\n            title=\"Attach File\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-file-image pr-2 pl-3\"\r\n            title=\"Attach Image\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-file-pdf pr-2 pl-3\"\r\n            title=\"Save as Draft\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"far fa-trash-alt pr-2 pl-3\"\r\n            title=\"Delete\"\r\n            onClick={() => {\r\n              history.go(0);\r\n            }}\r\n            style={{\r\n              fontSize: \"20px\",\r\n              paddingTop: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></i>\r\n        </div>\r\n      </form>\r\n\r\n      {/* create form general info end */}\r\n\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ViewEmail({ email_id }) {\r\n  const [data, setData] = useState({});\r\n  const [fileAttachement, setFileAttachement] = useState(\"\");\r\n  const [imageAttachement, setImageAttachement] = useState(\"\");\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailFullDetails\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email_id: email_id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      let file_attachement = response.data.data[0].file_attachement.replace(\r\n        \"http://localhost:3000/lms/\",\r\n        \"\"\r\n      );\r\n      let image_attachement = response.data.data[0].image_attachement.replace(\r\n        \"http://localhost:3000/lms/\",\r\n        \"\"\r\n      );\r\n      //console.log(\"image_attachement \" + image_attachement);\r\n      setFileAttachement(file_attachement);\r\n      setImageAttachement(image_attachement);\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function sendDraftEmail() {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    const emailAddress = localStorage.getItem(\"emailAddress\");\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"to_address\", data.to_address);\r\n    formData.append(\"from_address\", emailAddress);\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"body\", data.body);\r\n    formData.append(\"status\", \"sent\");\r\n    formData.append(\r\n      \"file_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    formData.append(\r\n      \"image_attachment\",\r\n      \"http://18.188.174.161/turzo/files/1603526494564624476_file_example_JPG_100kB.jpg\"\r\n    );\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SendEmailFromDraftBox\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    console.log(formData);\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Sent Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table institute-table table-font-100\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>To</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">: {data.to_address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>From</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">\r\n              : {data.from_address}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>Subject</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">: {data.title}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left p-0 m-0\">\r\n              <b>Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left p-0 m-0\">\r\n              : {data.sending_date}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td\r\n              className=\"border-0 text-left\"\r\n              style={{ padding: \"24px 0px 150px 0px\", margin: \"0px\" }}\r\n              colSpan=\"2\"\r\n            >\r\n              {data.body}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"inst-text text-left\"\r\n              style={{ padding: \"5px\", margin: \"0px\" }}\r\n              colSpan=\"3\"\r\n            >\r\n              {data.status === \"draft\" ? (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-update mr-3 p-0\"\r\n                  onClick={() => {\r\n                    sendDraftEmail();\r\n                  }}\r\n                >\r\n                  Send\r\n                </button>\r\n              ) : (\r\n                <span>Attachment: </span>\r\n              )}\r\n\r\n              {fileAttachement ? (\r\n                <a href={fileAttachement} target=\"_blank\" download>\r\n                  <i\r\n                    className=\"far fa-file-pdf pr-2 pl-3\"\r\n                    title=\"File\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                  ></i>\r\n                </a>\r\n              ) : null}\r\n              {imageAttachement ? (\r\n                <a\r\n                  href={imageAttachement}\r\n                  target=\"_blank\"\r\n                  download\r\n                  className=\"pt-2\"\r\n                >\r\n                  <i\r\n                    className=\"far fa-file-image pr-2 pl-3\"\r\n                    title=\"Image\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                  ></i>\r\n                </a>\r\n              ) : null}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"inst-text text-left\"\r\n              style={{ padding: \"5px\", margin: \"0px\" }}\r\n            ></td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot className=\"row\"></tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Inbox() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForInbox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          // email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  async function deleteEmail(email_id, sender) {\r\n    let formData = new FormData();\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"to_address\", emailAddress);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    //console.log(\"email_id: \" + email_id + \" -- sender: \" + sender);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/TrashEmailByReceiver\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      setUpdateApi(true);\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Inbox\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowInbox(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showInbox ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"sender\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowInbox(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      deleteEmail(row[\"email_id\"], row[\"sender\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Sent() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showSent, setShowSent] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForSentBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  async function deleteEmail(email_id) {\r\n    let formData = new FormData();\r\n    formData.append(\"email_id\", email_id);\r\n    formData.append(\"from_address\", emailAddress);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    //console.log(\"email_id: \" + email_id + \" -- sender: \" + sender);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/TrashEmailBySender\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formData,\r\n    };\r\n    const response = await trackPromise(axios(config));\r\n    //console.log(\"response - \" + response.data);\r\n    if (response.data.status === \"ok\") {\r\n      toast(\"Email Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      setUpdateApi(true);\r\n    } else {\r\n      toast(response.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Sent\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowSent(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showSent ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowSent(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      deleteEmail(row[\"email_id\"], row[\"receiver\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Draft() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showDraft, setShowDraft] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForDraftBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Draft\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowDraft(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showDraft ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowDraft(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  {/* <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Trash() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showTrash, setShowTrash] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForTrashBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: emailAddress,\r\n          //email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Inbox\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowTrash(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showTrash ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {\" \"}\r\n                    {row[\"receiver\"]}\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowTrash(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  {/* <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Edit\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/edit-user-type\",\r\n                        state: { id: row[\"id\"] },\r\n                      })\r\n                    }\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Compose from \"./Compose\";\r\nimport Inbox from \"./Inbox\";\r\nimport Sent from \"./Sent\";\r\nimport Draft from \"./Draft\";\r\nimport Trash from \"./Trash\";\r\n\r\nexport default function Email() {\r\n  const [showCompose, setShowCompose] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [showSent, setShowSent] = useState(false);\r\n  const [showDraft, setShowDraft] = useState(false);\r\n  const [showTrash, setShowTrash] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Email</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-lg-2 col-md-3 col-sm-6\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#fff\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <span\r\n                              className=\"shadow badge badge-pill compose__btn\"\r\n                              onClick={() => {\r\n                                setShowCompose(true);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-plus compose__icon\"></i>\r\n                              Compose\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                borderBottom: \"1px solid #B9B9B9\",\r\n                                margin: \"24px 10px 8px 10px\",\r\n                              }}\r\n                            ></span>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInbox ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(true);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-inbox pr-2 pl-3\"></i>\r\n                              Inbox\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showSent ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(true);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-share pr-2 pl-3\"></i>Sent\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showDraft ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(true);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-file pr-2 pl-3\"></i>Draft\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showTrash ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-trash-alt pr-2 pl-3\"></i>\r\n                              Trash\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-lg-10 col-md-9 col-sm-6\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showCompose ? <Compose /> : null}\r\n                            {showInbox ? <Inbox /> : null}\r\n                            {showSent ? <Sent /> : null}\r\n                            {showDraft ? <Draft /> : null}\r\n                            {showTrash ? <Trash /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport CreateUser from \"./Components/User/CreateUser\";\nimport UserListView from \"./Components/User/UserListView\";\nimport UserDetailView from \"./Components/User/UserDetailView\";\nimport UpdateUser from \"./Components/User/UpdateUser\";\nimport Login from \"./Components/Login/Login\";\nimport ForgetPassword from \"./Components/Password/ForgetPassword\";\nimport ResetPassword from \"./Components/Password/ResetPassword\";\nimport AccountInfo from \"./Components/AccountInfo/AccountInfo\";\nimport InstituteCreate from \"./Components/InstituteRegistration/InstituteCreate\";\nimport InstituteListView from \"./Components/InstituteRegistration/InstituteListView\";\nimport InstituteDetails from \"./Components/InstituteRegistration/InstituteDetails\";\nimport InstituteUpdate from \"./Components/InstituteRegistration/InstituteUpdate\";\nimport ViewProfile from \"./Components/Profile/ViewProfile\";\nimport EditProfile from \"./Components/Profile/EditProfile\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\nimport ErrorHandle from \"./Components/ErrorHandling/errorHandle\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreatePackage from \"./Components/PackageSystem/CreatePackage\";\nimport PackageListView from \"./Components/PackageSystem/PackageListView\";\nimport PackageDetails from \"./Components/PackageSystem/PackageDetails\";\nimport PackageEdit from \"./Components/PackageSystem/PackageEdit\";\nimport PackageHistory from \"./Components/PackageSystem/PackageHistory\";\nimport PackageHistoryDetail from \"./Components/PackageSystem/PackageHistoryDetail\";\nimport Settings from \"./Components/Settings/Settings\";\nimport CreateBill from \"./Components/BillingSystem/CreateBill\";\nimport UpdateBill from \"./Components/BillingSystem/UpdateBill\";\nimport BillingListView from \"./Components/BillingSystem/BillingListView\";\nimport BillingInvoiceView from \"./Components/BillingSystem/BillingInvoiceView\";\nimport PaymentListView from \"./Components/PaymentSystem/PaymentListView\";\nimport PaymentHistoryView from \"./Components/PaymentSystem/PaymentHistoryView\";\nimport InstPaymentHistory from \"./Components/PaymentSystem/InstPaymentHistory\";\nimport PaymentApprove from \"./Components/PaymentSystem/PaymentApprove\";\nimport CreateUserType from \"./Components/Settings/CreateUserType\";\nimport ViewUserType from \"./Components/Settings/ViewUserType\";\nimport EditUserType from \"./Components/Settings/EditUserType\";\nimport AddNewPkgItem from \"./Components/Settings/AddNewPkgItem\";\nimport EditNewPkgItem from \"./Components/Settings/EditNewPkgItem\";\nimport AddNewInstType from \"./Components/Settings/AddNewInstType\";\nimport EditNewInstType from \"./Components/Settings/EditNewInstType\";\nimport Email from \"./Components/Email/Email\";\n\nexport default function App() {\n  ErrorHandle();\n  return (\n    <div>\n      <BrowserRouter basename=\"/lms/\">\n        <div className=\"wrapper\">\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/forget-password\" component={ForgetPassword} />\n            <Route\n              path=\"/password-reset-request/:token\"\n              component={ResetPassword}\n            />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute path=\"/create-user\" component={CreateUser} />\n            <PrivateRoute path=\"/user-list-view\" component={UserListView} />\n            <PrivateRoute path=\"/user-detail-view\" component={UserDetailView} />\n            <PrivateRoute path=\"/update-user\" component={UpdateUser} />\n            <PrivateRoute path=\"/account-info\" component={AccountInfo} />\n            <PrivateRoute\n              path=\"/institute-create\"\n              component={InstituteCreate}\n            />\n            <PrivateRoute\n              path=\"/institute-list-view\"\n              component={InstituteListView}\n            />\n            <PrivateRoute\n              path=\"/institute-detail/:id\"\n              component={InstituteDetails}\n            />\n            <PrivateRoute\n              path=\"/institute-update/:id/:package_id\"\n              component={InstituteUpdate}\n            />\n            <PrivateRoute path=\"/package-create\" component={CreatePackage} />\n            <PrivateRoute\n              path=\"/package-list-view\"\n              component={PackageListView}\n            />\n            <PrivateRoute path=\"/package-details\" component={PackageDetails} />\n            <PrivateRoute path=\"/package-edit\" component={PackageEdit} />\n            <PrivateRoute path=\"/package-history\" component={PackageHistory} />\n            <PrivateRoute\n              path=\"/package-history-detail\"\n              component={PackageHistoryDetail}\n            />\n            <PrivateRoute path=\"/create-bill\" component={CreateBill} />\n            <PrivateRoute path=\"/update-bill\" component={UpdateBill} />\n            <PrivateRoute\n              path=\"/billing-list-view\"\n              component={BillingListView}\n            />\n            <PrivateRoute\n              path=\"/billing-invoice-view\"\n              component={BillingInvoiceView}\n            />\n            <PrivateRoute\n              path=\"/payment-list-view\"\n              component={PaymentListView}\n            />\n            <PrivateRoute\n              path=\"/payment-history-view\"\n              component={PaymentHistoryView}\n            />\n            <PrivateRoute\n              path=\"/inst-payment-history\"\n              component={InstPaymentHistory}\n            />\n            <PrivateRoute path=\"/payment-approve\" component={PaymentApprove} />\n\n            <PrivateRoute path=\"/view-profile\" component={ViewProfile} />\n            <PrivateRoute path=\"/edit-profile\" component={EditProfile} />\n            <PrivateRoute path=\"/settings\" component={Settings} />\n            <PrivateRoute path=\"/create-user-type\" component={CreateUserType} />\n            <PrivateRoute path=\"/view-user-type\" component={ViewUserType} />\n            <PrivateRoute path=\"/edit-user-type\" component={EditUserType} />\n            <PrivateRoute path=\"/add-new-pkg-item\" component={AddNewPkgItem} />\n            <PrivateRoute\n              path=\"/edit-new-pkg-item\"\n              component={EditNewPkgItem}\n            />\n\n            <PrivateRoute\n              path=\"/add-new-inst-type\"\n              component={AddNewInstType}\n            />\n            <PrivateRoute\n              path=\"/edit-new-inst-type\"\n              component={EditNewInstType}\n            />\n            <PrivateRoute path=\"/email\" component={Email} />\n            <Route path=\"*\" component={() => \"404 PAGE NOT FOUND\"} />\n          </Switch>\n          <ToastContainer\n            position=\"top-center\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            transition={Zoom}\n          />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\n\r\nexport default function ErrorHandle() {\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      //console.log(config);\r\n      console.log(\r\n        `${config.method.toUpperCase()} request sent to ${\r\n          config.url\r\n        } at ${new Date().toLocaleString()}`\r\n      );\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  axios.interceptors.response.use(\r\n    (config) => {\r\n      // console.log(config);\r\n      console.log(\r\n        `Status: ${config.status} ${config.statusText}\\nResp Status: ${config.data.status}\\nResp Msg: ${config.data.msg}`\r\n      );\r\n      if (config.status === 401) {\r\n        alert(\"You are not authorized\");\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\n\n//change base url for backend api connection\naxios.defaults.baseURL = \"http://18.188.174.161:5000\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}