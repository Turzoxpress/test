{"version":3,"sources":["Components/Layout/Footer.jsx","Components/Dashboard/Dashboard.jsx","Components/Loading/LoadingIndicator.jsx","Components/User/CreateUserForm.jsx","Components/User/CreateUser.jsx","Components/Pagination/PaginationComponent.jsx","Components/User/DatatableUserList.jsx","Components/User/UserListView.jsx","Components/User/ViewAddressInfo.jsx","Components/User/UserDetailView.jsx","ProfileContext.js","Components/User/UpdateUserAvatar.jsx","Components/User/UpdateUserCover.jsx","Components/User/UpdateUserProfile.jsx","Components/User/UpdateUserAddress.jsx","Components/User/UpdateInformation.jsx","Components/User/UpdateUser.jsx","Components/Login/Login.jsx","Components/Password/ForgetPassword.jsx","Components/Password/ResetPassword.jsx","Components/AccountInfo/AccountInfo.jsx","Components/InstituteRegistration/InstituteCreate.jsx","Components/InstituteRegistration/DatatableInstList.jsx","Components/InstituteRegistration/InstituteListView.jsx","Components/InstituteRegistration/DatatableInstDetail.jsx","Components/InstituteRegistration/InstituteDetails.jsx","Components/InstituteRegistration/InstituteUpdate.jsx","Components/Profile/ViewAddressInfo.jsx","Components/Profile/ViewProfile.jsx","Components/Profile/UploadAvatar.jsx","Components/Profile/UploadCover.jsx","Components/Profile/UpdateProfile.jsx","Components/Profile/UpdateAddress.jsx","Components/Profile/EditInformation.jsx","Components/Profile/EditProfile.jsx","Components/Logout/Logout.jsx","Components/Layout/Navbar.jsx","Components/Layout/Sidebar.jsx","Components/PrivateRoute/PrivateRoute.jsx","Components/PackageSystem/CreatePackage.jsx","Components/PackageSystem/DatatablePkgList.jsx","Components/PackageSystem/PackageListView.jsx","Components/PackageSystem/DatatableParams.jsx","Components/PackageSystem/PackageDetails.jsx","Components/PackageSystem/PackageEdit.jsx","Components/PackageSystem/DatatablePkgHistoryList.jsx","Components/PackageSystem/PackageHistory.jsx","Components/PackageSystem/PackageHistoryDetail.jsx","Components/Settings/DatatableUserTypeList.jsx","Components/Settings/UserPermission.jsx","Components/Settings/DatatablePackageSetup.jsx","Components/Settings/PackageSetup.jsx","Components/Settings/DatatableInstType.jsx","Components/Settings/InstituteType.jsx","Components/Settings/Settings.jsx","Components/BillingSystem/CreateBillForm.jsx","Components/BillingSystem/CreateBill.jsx","Components/BillingSystem/UpdateBillForm.jsx","Components/BillingSystem/UpdateBill.jsx","Components/BillingSystem/DatatableBillingList.jsx","Components/BillingSystem/DatatableBillingHistoryList.jsx","Components/BillingSystem/BillingListView.jsx","Components/BillingSystem/BillingInvoiceView.jsx","Components/PaymentSystem/DatatablePaymentList.jsx","Components/PaymentSystem/PaymentListView.jsx","Components/PaymentSystem/DatatablePaymentHistoryList.jsx","Components/PaymentSystem/PaymentHistoryView.jsx","Components/PaymentSystem/DatatableInstPaymentHistory.jsx","Components/PaymentSystem/InstPaymentHistory.jsx","Components/PaymentSystem/PaymentApprove.jsx","Components/Settings/CreateUserType.jsx","Components/Settings/ViewUserType.jsx","Components/Settings/EditUserType.jsx","Components/Settings/AddNewPkgItem.jsx","Components/Settings/EditNewPkgItem.jsx","Components/Settings/AddNewInstType.jsx","Components/Settings/EditNewInstType.jsx","Components/Email/Compose.jsx","Components/Email/ViewEmail.jsx","Components/Email/Inbox.jsx","Components/Email/Sent.jsx","Components/Email/Draft.jsx","Components/Email/Trash.jsx","Components/Email/Email.jsx","App.js","Components/ErrorHandling/errorHandle.js","serviceWorker.js","index.js","Components/Layout/logo2.png"],"names":["Footer","className","href","Dashboard","Fragment","src","alt","value","type","style","width","id","minHeight","height","maxHeight","maxWidth","LoadingIndicator","props","usePromiseTracker","promiseInProgress","position","top","left","display","justifyContent","backgroundColor","alignItems","color","zIndex","ErrorMsg","styled","p","CreateUserForm","useForm","register","handleSubmit","errors","accessToken","localStorage","getItem","substring","length","history","useHistory","useState","data","setData","role","setRole","useEffect","a","config","method","url","headers","Authorization","trackPromise","axios","userTypeApiResp","typename","fetchData","passwordShown","setPasswordShown","selectedDate","setSelectedDate","errors_date_of_birth","setErrors_date_of_birth","onSubmit","date_of_birth","then","response","status","toast","push","msg","name","ref","required","pattern","message","fname","lname","email","mobile","hidden","defaultValue","gender","selected","onChange","date","dateFormat","maxDate","Date","showYearDropdown","scrollableMonthYearDropdown","username","onClick","toggle","password","e","target","sort","b","localeCompare","map","key","data-id","CreateUser","to","title","padding","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","Pagination","Item","active","size","Prev","disabled","fontSize","Next","DatatableUserList","colSpan","row","index","pathname","state","UserListView","userListApiResp","search","setSearch","totalItems","setTotalItems","setCurrentPage","currentData","computedData","filter","d","toLowerCase","includes","slice","page","ViewAddressInfo","user","setUser","address","post_code","post_office","thana","district","division","per_address","per_post_code","per_post_office","per_thana","per_district","per_division","UserDetailView","location","useLocation","cover_img","background","avatar_img","created_at","initial","split","undefined","join","myDate","month","getMonth","getDate","getFullYear","formatDate","paddingTop","paddingLeft","marginLeft","Moment","format","nationality","designation","place_of_birth","marital_status","religion","nid","ProfileContext","createContext","ProfileProvider","isProfileUpdate","setIsProfileUpdate","Provider","children","UpdateUserAvatar","useContext","profileImg","setProfileImg","userApiResp","formData","FormData","append","margin","marginTop","textAlign","accept","reader","FileReader","onload","readyState","result","readAsDataURL","files","validate","htmlFor","UpdateUserCover","coverImg","setCoverImg","UpdateUserProfile","setSelectedGender","setSelectedMaritalStatus","setSelectedReligion","selectedGender","selectedMaritalStatus","selectedReligion","min","UpdateUserAddress","divisionData","setDivisionData","districtData","setDistrictData","thanaUpazilaData","setThanaUpazila","perDivisionData","setPerDivisionData","perDistrictData","setPerDistrictData","perThanaUpazilaData","setPerThanaUpazila","isSameAsPresent","setIsSameAsPresent","get","divisionApiResp","divisions","divisionArray","parseInt","divisionId","indexOf","division_id","districtApiResp","districtArray","districtId","district_id","thanaUpazilaApiResp","ChangeDivision","selectedIndex","optionElement","childNodes","getAttribute","ChangeDistrict","ChangePerDivision","perDivisionId","ChangePerDistrict","perDistrictId","ChangeDivisionIsSame","console","log","JSON","stringify","ChangeThanaUpazila","checked","document","querySelector","index2","ChangeIsSameAsPresent","ChangePerThanaUpazila","UpdateInformation","showGeneralInfo","setShowGeneralInfo","showAddressInfo","setShowAddressInfo","marginRight","UpdateUser","showEdit","setShowEdit","showProfilePhoto","setShowProfilePhoto","showCoverPhoto","setShowCoverPhoto","marginBottom","aria-orientation","Login","isRememberMe","setIsRememberMe","logo","post","setItem","token","removeItem","placeholder","ForgetPassword","closeOnClick","autoClose","ResetPassword","match","watch","useRef","current","newPasswordShown","setNewPasswordShown","confirmPasswordShown","setConfirmPasswordShown","reset_token","params","minLength","password_confirmation","AccountInfo","oldPasswordShown","setOldPasswordShown","data-toggle","aria-controls","aria-selected","aria-labelledby","old_password","InstituteCreate","allPkgData","setAllPkgData","instituteTypes","setInstituteTypes","typeOfInst","setTypeOfInst","allPkgApiResp","isCreateNewPackage","setIsCreateNewPackage","isPackageName","setIsPackageName","pkgTitle","setPkgTitle","pkgDescription","setPkgDescription","handlePackageName","pkgId","pkgParamApiResp","setPkgParamList","find","x","description","price","quantity","pkgParamList","handleInputChange","list","handleAddClick","package_id","packageData","instituteData","savePkgApiResp","config2","createInstApiResp","some","obj","Object","keys","item","postData","package","packageTitle","packageDescription","packageType","parameters","institute_id","instNameShortForm","serialNum","instituteName","phone","subscription_s_date","subscription_e_date","last_payment","payment_amount","short_form","rows","cols","readOnly","splice","handleRemoveClick","DatatableInstList","isActive","setisActive","utc","instStatusApiResp","toggleInstStatus","InstituteListView","DatatableInstDetail","package_title","InstituteDetails","instDetail","setInstDetail","useParams","instDetailApiResp","InstituteUpdate","setPkgData","pkgApiResp","setSelectedOption","instData","setInstData","instApiResp","updatePkgApiResp","updateInstApiResp","updatePkgData","postInstData","instName","ViewProfile","UploadAvatar","UploadCover","UpdateProfile","UpdateAddress","user_id","EditInformation","EditProfile","Logout","Navbar","data-target","aria-expanded","aria-label","aria-haspopup","Sidebar","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","classList","add","data-accordion","activeclassname","exact","PrivateRoute","Component","component","rest","render","from","CreatePackage","Datatable","charAt","toUpperCase","PackageListView","reverse","reduce","parseFloat","toFixed","PackageDetails","packageDetail","setPackageDetail","pkgDetailApiResp","PackageEdit","pkgData","selectedOption","handleRadioChange","displayFrontend","DatatablePkgHistoryList","PackageHistory","fetchInstData","updated_at","PackageHistoryDetail","setPackageTitle","DatatableUserTypeList","UserPermission","DatatablePackageSetup","updateApi","setUpdateApi","togglePackageStatus","PackageSetup","DatatableInstType","InstituteType","Settings","showUserPermission","setShowUserPermission","showPackageSetup","setShowPackageSetup","showInstituteType","setShowInstituteType","CreateBillForm","setInstituteName","billingAmount","setBillingAmount","instituteIdData","setInstituteIdData","instIdApiResp","userEmail","ChangeInstName","institute_name","year","amount","CreateBill","UpdateBillForm","setMonth","setYear","invoiceApiResp","UpdateBill","DatatableBillingList","DatatableBillingHistoryList","billingListApiResp","jsObjects","BillingListView","BillingInvoiceView","DatatablePaymentList","showPerPage","start","end","PaymentListView","q","setQ","columns","column","toString","DatatablePaymentHistoryList","institute_id_string","PaymentHistoryView","instListApiResp","DatatableInstPaymentHistory","InstPaymentHistory","details","PaymentApprove","CreateUserType","permissionError","setPermissionError","setCharAt","str","chr","institute","setInstitute","pkg","setPkg","bill","setBill","payment","setPayment","ViewUserType","EditUserType","AddNewPkgItem","package_item_name","package_number","package_amount","EditNewPkgItem","AddNewInstType","EditNewInstType","textTransform","Compose","ViewEmail","email_id","Inbox","showViewEmail","setShowViewEmail","showInbox","setShowInbox","emailId","setEmailId","emailAddress","cursor","Sent","Draft","Trash","Email","showCompose","setShowCompose","showSent","setShowSent","showDraft","setShowDraft","showTrash","setShowTrash","borderBottom","App","interceptors","request","use","toLocaleString","error","Promise","reject","statusText","alert","basename","path","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Zoom","Boolean","hostname","defaults","baseURL","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.749d5482.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      {/* Copyright */}\r\n      <div className=\"footer-copyright py-3 small text-center\">\r\n        <span> Copyright © 2020 | All Rights Reserved | Powered by </span>\r\n        <a href=\"https://brlbd.com/\" className=\"text-muted\">\r\n          Babylon Resources Ltd.\r\n        </a>\r\n      </div>\r\n      {/* Copyright */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Footer from \"../Layout/Footer\";\r\nexport default function Dashboard() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row mt-5\">\r\n                {/* left side content */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-8\">\r\n                  {/* infobox start */}\r\n                  <div className=\"row\">\r\n                    {/* total teacher */}\r\n                    <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                      <div className=\"thumbnail\">\r\n                        <img\r\n                          src=\"img/total_teacher.png\"\r\n                          className=\"img-fluid\"\r\n                          alt=\"total teacher\"\r\n                        />\r\n                        <div className=\"text-over-img d-flex flex-column\">\r\n                          <div className=\"info1\">Total Teacher</div>\r\n                          <div className=\"info2\">27</div>\r\n                          <div className=\"info3\">Active 23</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* total student */}\r\n                    <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                      <div className=\"thumbnail\">\r\n                        <img\r\n                          src=\"img/total_student.png\"\r\n                          className=\"img-fluid\"\r\n                        />\r\n                        <div className=\"text-over-img d-flex flex-column\">\r\n                          <div className=\"info1\">Total Student</div>\r\n                          <div className=\"info2\">273</div>\r\n                          <div className=\"info3\">Enrolled 223</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* total course */}\r\n                    <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                      <div className=\"thumbnail\">\r\n                        <img src=\"img/total_course.png\" className=\"img-fluid\" />\r\n                        <div className=\"text-over-img d-flex flex-column\">\r\n                          <div className=\"info1\">Total Course</div>\r\n                          <div className=\"info2\">27</div>\r\n                          <div className=\"info3\">Available 13</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* infobox end */}\r\n                  {/* attendance full div start */}\r\n                  <div className=\"row p-2 mt-3\">\r\n                    <div className=\"col\">\r\n                      <div className=\"info-box\">\r\n                        <div className=\"info-box-content attendance-thumbnail\">\r\n                          <img\r\n                            src=\"img/attendance.png\"\r\n                            className=\"attendance-img mr-5\"\r\n                          />\r\n                          <span className=\"info-box-text attendance-text\">\r\n                            Attendance\r\n                          </span>\r\n                          <div className=\"row\">\r\n                            {/* attendance left part */}\r\n                            <div className=\"col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                              {/* select input part */}\r\n                              <div className=\"row p-2 mt-3\">\r\n                                <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                                  {/* select */}\r\n                                  <div className=\"form-group\">\r\n                                    <select className=\"form-control font\">\r\n                                      <option value>Select Class</option>\r\n                                      <option>1</option>\r\n                                      <option>2</option>\r\n                                      <option>3</option>\r\n                                      <option>4</option>\r\n                                      <option>5</option>\r\n                                      <option>6</option>\r\n                                      <option>7</option>\r\n                                      <option>8</option>\r\n                                      <option>9</option>\r\n                                      <option>10</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                                  {/* select */}\r\n                                  <div className=\" form-group\">\r\n                                    <select className=\"form-control font\">\r\n                                      <option value>Select Subject</option>\r\n                                      <option>Bangla</option>\r\n                                      <option>English</option>\r\n                                      <option>Math</option>\r\n                                      <option>Physics</option>\r\n                                      <option>Chemistry</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-sm-12 col-md-4 col-lg-4\">\r\n                                  <div className=\" form-group float-right\">\r\n                                    <img\r\n                                      src=\"img/ok2.png\"\r\n                                      className=\"img-fluid btn p-0\"\r\n                                      type=\"button\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              {/* PROGRESS PART */}\r\n                              <div className=\"row p-2 mt-3\">\r\n                                <div className=\"col-12\">\r\n                                  <div className=\"progress-group\">\r\n                                    <span className=\"prog-text\">\r\n                                      Total Class\r\n                                    </span>\r\n                                    <span className=\"float-right tot-value\">\r\n                                      50<span className=\"tot-percent\">/70</span>\r\n                                    </span>\r\n                                    <div className=\"progress progress-sm progress-height\">\r\n                                      <div\r\n                                        className=\"progress-bar progress1 rounded\"\r\n                                        style={{ width: \"71%\" }}\r\n                                      ></div>\r\n                                    </div>\r\n                                  </div>\r\n                                  {/* /.progress-group */}\r\n                                  <div className=\"progress-group\">\r\n                                    <span className=\"prog-text\">\r\n                                      Average Attendance\r\n                                    </span>\r\n                                    <span className=\"float-right tot-value\">\r\n                                      35<span className=\"tot-percent\">/70</span>\r\n                                    </span>\r\n                                    <div className=\"progress progress-sm progress-height\">\r\n                                      <div\r\n                                        className=\"progress-bar progress2 rounded\"\r\n                                        style={{ width: \"50%\" }}\r\n                                      ></div>\r\n                                    </div>\r\n                                  </div>\r\n                                  {/* /.progress-group */}\r\n                                  <div className=\"progress-group\">\r\n                                    <span className=\"prog-text\">\r\n                                      Average Participation\r\n                                    </span>\r\n                                    <span className=\"float-right tot-value\">\r\n                                      75\r\n                                      <span className=\"tot-percent\">/100</span>\r\n                                    </span>\r\n                                    <div className=\"progress progress-sm progress-height\">\r\n                                      <div\r\n                                        className=\"progress-bar progress3 rounded\"\r\n                                        style={{ width: \"75%\" }}\r\n                                      ></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            {/* attendance right part */}\r\n                            <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                              {/* DONUT CHART START*/}\r\n                              <canvas\r\n                                id=\"donutChart\"\r\n                                style={{\r\n                                  minHeight: 250,\r\n                                  height: 250,\r\n                                  maxHeight: 250,\r\n                                  maxWidth: \"100%\",\r\n                                }}\r\n                              />\r\n                              {/* DONUT CHART END*/}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                      </div>\r\n                      {/* /.info-box */}\r\n                    </div>\r\n                  </div>\r\n                  {/* attendance full div end */}\r\n                </div>\r\n                {/* right side content */}\r\n                <div className=\"col-sm-12 col-md-12 col-lg-4\">\r\n                  {/* Info boxes */}\r\n                  <div className=\"row p-2\">\r\n                    <div className=\"col-12 mb-2\">\r\n                      <div className=\"info-box red-border\">\r\n                        <div className=\"info-box-content calender-thumbnail\">\r\n                          <img\r\n                            src=\"img/calender.png\"\r\n                            className=\"calender-img mr-5\"\r\n                          />\r\n                          <p className=\"info-box-text calender-text\">\r\n                            Academic Calendar\r\n                          </p>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                      </div>\r\n                      {/* /.info-box */}\r\n                    </div>\r\n                    {/* /.col */}\r\n                    <div className=\"col-12 mb-2\">\r\n                      <div className=\"info-box red-border\">\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text text-left-margin\">\r\n                            <span className=\"text-live\">Live </span> Class\r\n                            Schedule\r\n                          </span>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                      </div>\r\n                      {/* /.info-box */}\r\n                    </div>\r\n                    {/* /.col */}\r\n                    <div className=\"col-12 mb-2\">\r\n                      <div className=\"info-box red-border\">\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text text-left-margin\">\r\n                            Current <span className=\"text-live\">Live </span>\r\n                            Class\r\n                          </span>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                      </div>\r\n                      {/* /.info-box */}\r\n                    </div>\r\n                    {/* /.col */}\r\n                    <div className=\"col-12 mb-2\">\r\n                      <div className=\"info-box red-border\">\r\n                        <div className=\"info-box-content text-left-margin\">\r\n                          <span className=\"info-box-text\">Upcoming Events</span>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                      </div>\r\n                      {/* /.info-box */}\r\n                    </div>\r\n                    {/* /.col */}\r\n                  </div>\r\n                  {/* /.row */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingIndicator = (props) => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#F8F8F8AD\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#ff3462\"\r\n          height=\"50\"\r\n          width=\"50\"\r\n          style={{\r\n            zIndex: \"10000\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateUserForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/RegisterNewUserNormal\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"User Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/user-list-view\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  //GET USERTYPE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setRole(userTypeApiResp.data.data.typename);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE -END\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* firstname and lastname */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* email and mobile no */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Email\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n            {errors.email && <ErrorMsg>{errors.email.message}</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^\\+[1-9]{1}[0-9]{3,14}$/,\r\n                  message: \"* Please Enter Valid Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* gender and date of birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* username and password */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.username && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Password\r\n            </label>\r\n            <br />\r\n            <input\r\n              id=\"password-field1\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n              })}\r\n            />\r\n\r\n            <span\r\n              onClick={togglePasswordVisiblity}\r\n              toggle=\"#password-field1\"\r\n              className={`fa fa-fw ${\r\n                passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n              } field-icon toggle-password`}\r\n            />\r\n            {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* User Type  */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>User Type\r\n            </label>\r\n            <br />\r\n            {data.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"role\"\r\n                name=\"role\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select User Type--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {data\r\n                  .sort((a, b) => a.typename.localeCompare(b.typename))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.typename}>\r\n                        {e.typename}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.typename && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Create\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateUserForm from \"./CreateUserForm\";\r\n\r\nexport default function CreateUser() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/user-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateUserForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\n\r\nexport default function PaginationComponent({\r\n  total = 0,\r\n  itemsPerPage = 10,\r\n  currentPage = 1,\r\n  onPageChange,\r\n}) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  //total = total items in response object\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0) {\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  }, [totalPages, currentPage]);\r\n\r\n  if (totalPages === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"float-right\" size=\"sm\">\r\n        <Pagination.Prev\r\n          onClick={() => onPageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n          style={{ fontSize: \"16px\" }}\r\n        >\r\n          Previous\r\n        </Pagination.Prev>\r\n        {paginationItems}\r\n        <Pagination.Next\r\n          onClick={() => onPageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </Pagination.Next>\r\n      </Pagination>\r\n    </>\r\n  );\r\n}\r\n","import Pagination from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function DatatableUserList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Name</th>\r\n            <th className=\"inst-list-th text-center\">User Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"fname\"]} {row[\"lname\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"username\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"mobile\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"role\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/user-detail-view\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-user\",\r\n                    state: { email: row[\"email\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i className=\"fas fa-toggle-on action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserList from \"./DatatableUserList\";\r\nexport default function UserListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllUserNormalList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userListApiResp - \" + JSON.stringify(userListApiResp.data.msg)\r\n      // );\r\n      setData(userListApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.fname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.lname.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.email.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.role.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">User Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/create-user\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create User\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableUserList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo(props) {\r\n  const [user, setUser] = useState({});\r\n\r\n  //const location = useLocation();\r\n  //console.log(\"Email: \" + props.email);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserAddress\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: props.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(\"Address Info: \" + response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function UserDetailView() {\r\n  const [user, setUser] = useState({});\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetNormalUserProfileInfo\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: {\r\n        email: location.state.email,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        // console.log(\"User Profile Info: \" + JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          {/*   */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {user.date_of_birth\r\n                                        ? Moment(\r\n                                            new Date(user.date_of_birth)\r\n                                          ).format(\"DD/MM/YYYY\")\r\n                                        : null}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo email={location.state.email} />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = (props) => {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useState(false);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={[isProfileUpdate, setIsProfileUpdate]}>\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAvatar(props) {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAvatarImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                {profileImg ? (\r\n                  <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/avatar-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgAvatar\"\r\n                  />\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserCover(props) {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n    formData.append(\"email\", props.email);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserCoverImageUpload\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateUserProfile(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n\r\n  //console.log(location);\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(\"selectedDate ... \" + selectedDate);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n        email: props.email,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/NormalUserProfileInfoUpdate\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n      //console.log(\"data ... \" + JSON.stringify(data));\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push({\r\n              pathname: \"/user-detail-view\",\r\n              state: { email: props.email },\r\n            });\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  //**************************************************************************** */\r\n  const [user, setUser] = useState({});\r\n  //GetNormalUserProfileInfo\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserProfileInfo\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        //console.log(\"Date: \" + response.data.msg.date_of_birth);\r\n        if (response.data.msg.date_of_birth) {\r\n          setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        }\r\n\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              //defaultValue={new Date()}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateUserAddress(props) {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n    data[\"email\"] = props.email;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/NormalUserAddressUpdate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n    console.log(\"Data...\" + JSON.stringify(data));\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          //history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetNormalUserAddress\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email: props.email,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Address - \" + JSON.stringify(userApiResp.data.msg));\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        {/* address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            {perDivisionData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_division\"\r\n                id=\"per_division\"\r\n                value={user.per_division}\r\n                onChange={(e) => ChangePerDivision(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDivisionData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            {perDistrictData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"per_district\"\r\n                id=\"per_district\"\r\n                value={user.per_district}\r\n                onChange={(e) => ChangePerDistrict(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {perDistrictData\r\n                  .sort((a, b) => a.name.localeCompare(b.name))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateUserProfile from \"./UpdateUserProfile\";\r\nimport UpdateUserAddress from \"./UpdateUserAddress\";\r\n\r\nexport default function UpdateInformation({ location }) {\r\n  //console.log(location);\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Update Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? (\r\n          <UpdateUserProfile email={location.state.email} />\r\n        ) : null}\r\n        {showAddressInfo ? (\r\n          <UpdateUserAddress email={location.state.email} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport UpdateUserAvatar from \"./UpdateUserAvatar\";\r\nimport UpdateUserCover from \"./UpdateUserCover\";\r\nimport UpdateInformation from \"./UpdateInformation\";\r\nexport default function UpdateUser() {\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Update start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 style={{ marginBottom: \"32px\", color: \"black\" }}>\r\n                        Update Profile\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Update\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                //console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? (\r\n                              <UpdateInformation location={location} />\r\n                            ) : null}\r\n                            {showProfilePhoto ? (\r\n                              <UpdateUserAvatar email={location.state.email} />\r\n                            ) : null}\r\n                            {showCoverPhoto ? (\r\n                              <UpdateUserCover email={location.state.email} />\r\n                            ) : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Update end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Footer from \"../Layout/Footer\";\r\nimport logo from \"../Layout/logo2.png\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function Login(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  /*REMEMBER ME START*/\r\n  const [isRememberMe, setIsRememberMe] = useState(false);\r\n  /*REMEMBER ME END*/\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"Username & Password \" + JSON.stringify(data));\r\n\r\n    const email = data.email;\r\n\r\n    trackPromise(\r\n      axios.post(\"/authenticate\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\" || response.data.status === 200) {\r\n          localStorage.setItem(\r\n            \"token\",\r\n            JSON.stringify(response.data.msg.token)\r\n          );\r\n          localStorage.setItem(\"emailAddress\", email);\r\n          // console.log(\"email: \" + email);\r\n          // localStorage.setItem(\"email\", \"email\");\r\n          //console.log(this.props.history.push(\"/Dashboard\"));\r\n          if (isRememberMe) {\r\n            localStorage.setItem(\"email\", data.email);\r\n            localStorage.setItem(\"password\", data.password);\r\n          } else {\r\n            localStorage.removeItem(\"email\");\r\n            localStorage.removeItem(\"password\");\r\n          }\r\n          props.history.push(\"/dashboard\");\r\n        } else {\r\n          toast(\"Wrong Email Or Password\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper login-page\">\r\n        <div className=\"\" style={{ width: \"90%\", maxWidth: \"550px\" }}>\r\n          <div className=\"row m-2 justify-content-center align-items-center\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body login-card-body\">\r\n                  <div className=\"d-flex flex-column mt-5\">\r\n                    <h2 className=\"font-weight-normal text-center\">\r\n                      <img\r\n                        src={logo}\r\n                        alt=\"Babylon Logo\"\r\n                        className=\"logo-babylon-login img-fluid\"\r\n                        height=\"50\"\r\n                        width=\"150\"\r\n                      />\r\n                      <span className=\"prd-title ml-3\">Learnerscafe</span>\r\n                    </h2>\r\n                    <h4 className=\"font-weight-normal text-center\">\r\n                      User Login\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <form className=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"mb-3\">\r\n                      <label>User Name</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        defaultValue={\r\n                          localStorage.getItem(\"email\")\r\n                            ? localStorage.getItem(\"email\")\r\n                            : \"\"\r\n                        }\r\n                        placeholder=\"Enter Your Email Address\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      {errors.email && (\r\n                        <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label>Password</label>\r\n                      <input\r\n                        id=\"password-field1\"\r\n                        type={passwordShown ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        defaultValue={\r\n                          localStorage.getItem(\"password\")\r\n                            ? localStorage.getItem(\"password\")\r\n                            : \"\"\r\n                        }\r\n                        placeholder=\"Enter Your Password\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      <span\r\n                        onClick={togglePasswordVisiblity}\r\n                        toggle=\"#password-field1\"\r\n                        className={`fa fa-fw ${\r\n                          passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                        } field-icon toggle-password`}\r\n                      />\r\n                      {errors.password && (\r\n                        <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                      <div className=\"float-left\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input check-input\"\r\n                          id=\"exampleCheck1\"\r\n                          checked={isRememberMe}\r\n                          onChange={() => setIsRememberMe(!isRememberMe)}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"exampleCheck1\"\r\n                        >\r\n                          Remember Me\r\n                        </label>\r\n                      </div>\r\n                      <p className=\"mb-1\">\r\n                        <Link\r\n                          to=\"/forget-password\"\r\n                          className=\"float-right small mt-1\"\r\n                        >\r\n                          Forgot Password?\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-5\">\r\n                      <button\r\n                        className=\"btn bg-color shadow text-white float-left mt-4 pr-5 pl-5\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                  <Footer />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function ForgetPassword(props) {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    trackPromise(\r\n      axios.post(\"/password-reset-request\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\r\n            \"Password reset link has been sent to your mail.  \\nPlease check your mail.\",\r\n            { closeOnClick: true, autoClose: false, className: \"toast-error\" }\r\n          );\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid login-page\">\r\n        <div className=\"\" style={{ width: \"90%\", maxWidth: \"550px\" }}>\r\n          <div className=\"row m-2 justify-content-center align-items-center\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body login-card-body\">\r\n                  <div className=\"d-flex flex-column mt-5\">\r\n                    <h4 className=\"font-weight-normal float-left\">\r\n                      Forgot your password?\r\n                    </h4>\r\n                    <p className=\"font-weight-normal text-size float-left\">\r\n                      Enter your email below to receive your password <br />\r\n                      <span className=\"font-weight-normal text-size float-left p-0 m-0\">\r\n                        reset instruction\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <form className=\"mt-5\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"mb-3\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter your email ID\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      {errors.email && (\r\n                        <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                      <button\r\n                        className=\"btn bg-color shadow text-white float-left mt-5 pr-5 pl-5\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                    <p className=\"mb-5 mt-1 \">\r\n                      <Link to=\"/\" className=\"small\">\r\n                        <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back\r\n                        to Login Page\r\n                      </Link>\r\n                    </p>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./password.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ResetPassword({ match, props }) {\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    // data[\"property\"] = value;\r\n    const reset_token = match.params.token;\r\n    data[\"token\"] = reset_token;\r\n    trackPromise(\r\n      axios.post(\"/password-reset\", data).then((response) => {\r\n        // console.log(JSON.stringify(response.data.status));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Password Reset Success\", {\r\n            className: \"toast-error\",\r\n          });\r\n          props.history.push(\"/\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid login-page\">\r\n        <div className=\"\" style={{ width: \"90%\", maxWidth: \"550px\" }}>\r\n          <div className=\"row m-2 justify-content-center align-items-center\">\r\n            <div className=\"col\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body login-card-body\">\r\n                  <div className=\"d-flex flex-column mt-5\">\r\n                    <h3 className=\"font-weight-normal float-left\">\r\n                      Learning Management System\r\n                    </h3>\r\n                    <h4 className=\"font-weight-normal text-center\">\r\n                      Reset Password\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <form className=\"mt-3\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"mb-3\">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Your Email Address\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      {errors.email && (\r\n                        <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label>New Password</label>\r\n                      <input\r\n                        id=\"password-field2\"\r\n                        type={newPasswordShown ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your New Password\"\r\n                        name=\"password\"\r\n                        ref={register({\r\n                          required: \"* This Field is Required\",\r\n                          minLength: {\r\n                            value: 8,\r\n                            message: \"* Minimum 8 Character Required\",\r\n                          },\r\n                        })}\r\n                      />\r\n                      <span\r\n                        onClick={toggleNewPasswordVisiblity}\r\n                        toggle=\"#password-field2\"\r\n                        className={`fa fa-fw ${\r\n                          newPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                        } field-icon toggle-password`}\r\n                      />\r\n                      {errors.password && (\r\n                        <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label>Confirm Password</label>\r\n                      <input\r\n                        id=\"password-field3\"\r\n                        type={confirmPasswordShown ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your Confirm Password\"\r\n                        name=\"password_confirmation\"\r\n                        ref={register({\r\n                          required: \"* This Field is Required\",\r\n                          minLength: {\r\n                            value: 8,\r\n                            message: \"* Minimum 8 Character Required\",\r\n                          },\r\n                          validate: (value) =>\r\n                            value === password.current ||\r\n                            \"Both Password Should Match\",\r\n                        })}\r\n                      />\r\n                      <span\r\n                        onClick={toggleConfirmPasswordVisiblity}\r\n                        toggle=\"#password-field3\"\r\n                        className={`fa fa-fw ${\r\n                          confirmPasswordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                        } field-icon toggle-password`}\r\n                      />\r\n                      {errors.password_confirmation && (\r\n                        <ErrorMsg>\r\n                          {errors.password_confirmation.message}\r\n                        </ErrorMsg>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                      <button\r\n                        className=\"btn bg-color shadow text-white float-left mt-5 pr-4 pl-4\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Reset Password\r\n                      </button>\r\n                    </div>\r\n                    <p className=\"mb-5 mt-1\">\r\n                      <Link to=\"/\" className=\"small\">\r\n                        <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>Back\r\n                        to Login Page\r\n                      </Link>\r\n                    </p>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AccountInfo() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/password-update\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(\"The old password you have entered is incorrect\", {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  // -api for get user info\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [oldPasswordShown, setOldPasswordShown] = useState(false);\r\n  const [newPasswordShown, setNewPasswordShown] = useState(false);\r\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n  const toggleOldPasswordVisiblity = () => {\r\n    setOldPasswordShown(oldPasswordShown ? false : true);\r\n  };\r\n  const toggleNewPasswordVisiblity = () => {\r\n    setNewPasswordShown(newPasswordShown ? false : true);\r\n  };\r\n  const toggleConfirmPasswordVisiblity = () => {\r\n    setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <h4 className=\"heading\">Account Info</h4>\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Account Details\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Change Password\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table  table-sm table-borderless w-50 table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.fname} {user.lname}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Name</td>\r\n                                  <td className=\"text-left\">\r\n                                    : {user.username}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">User Type</td>\r\n                                  <td className=\"text-left\">: {user.role}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"text-left\">Password</td>\r\n                                  <td className=\"text-left\">: ********</td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* input field */}\r\n                          {/* form start */}\r\n                          <form\r\n                            className=\"form-horizontal\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"card-body padding-left\">\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type Your Old Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field1\"\r\n                                    type={\r\n                                      oldPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"old_password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleOldPasswordVisiblity}\r\n                                    toggle=\"#password-field1\"\r\n                                    className={`fa fa-fw ${\r\n                                      oldPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.old_password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.old_password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Type New Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field2\"\r\n                                    type={\r\n                                      newPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                    })}\r\n                                  />\r\n\r\n                                  <span\r\n                                    onClick={toggleNewPasswordVisiblity}\r\n                                    toggle=\"#password-field2\"\r\n                                    className={`fa fa-fw ${\r\n                                      newPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col max-width\">\r\n                                  <label>Confirm Password</label>\r\n                                  <br />\r\n                                  <input\r\n                                    id=\"password-field3\"\r\n                                    type={\r\n                                      confirmPasswordShown ? \"text\" : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    name=\"password_confirmation\"\r\n                                    ref={register({\r\n                                      required: \"* This Field is Required\",\r\n                                      minLength: {\r\n                                        value: 8,\r\n                                        message:\r\n                                          \"* Minimum 8 Character Required\",\r\n                                      },\r\n                                      validate: (value) =>\r\n                                        value === password.current ||\r\n                                        \"Both Password Should Match\",\r\n                                    })}\r\n                                  />\r\n                                  <span\r\n                                    onClick={toggleConfirmPasswordVisiblity}\r\n                                    toggle=\"#password-field3\"\r\n                                    className={`fa fa-fw ${\r\n                                      confirmPasswordShown\r\n                                        ? \"fa-eye-slash\"\r\n                                        : \"fa-eye\"\r\n                                    } field-icon toggle-password`}\r\n                                  />\r\n                                  {errors.password_confirmation && (\r\n                                    <ErrorMsg>\r\n                                      {errors.password_confirmation.message}\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <button type=\"submit\" className=\"btn btn-update\">\r\n                                Update\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteCreate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  const [allPkgData, setAllPkgData] = useState([]);\r\n  const [instituteTypes, setInstituteTypes] = useState([]);\r\n  const [typeOfInst, setTypeOfInst] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setAllPkgData(allPkgApiResp.data.msg);\r\n      //get institute type data\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setInstituteTypes(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  let history = useHistory();\r\n  // POST INSTITUTE & PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    // delete id and package_id key from pkgParamList object\r\n    let checkKeyPresenceInArray = (key) =>\r\n      pkgParamList.some((obj) => Object.keys(obj).includes(key));\r\n    var isKeyPresent = checkKeyPresenceInArray(\"id\");\r\n    if (isKeyPresent) {\r\n      pkgParamList.map(function (item) {\r\n        delete item.id;\r\n        delete item.package_id;\r\n        return item;\r\n      });\r\n    }\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      package: {\r\n        title: data.packageTitle,\r\n        description: data.packageDescription,\r\n        display: data.display,\r\n        type: data.packageType,\r\n      },\r\n      parameters: pkgParamList,\r\n    };\r\n    // console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    let institute_id =\r\n      typeOfInst + \"-\" + data.instNameShortForm + \"-\" + data.serialNum;\r\n    //console.log(\"institute ID: \" + institute_id);\r\n    //seperate institute vlaues from data object start\r\n    const instituteData = {\r\n      institute_id: institute_id,\r\n      password: data.password,\r\n      name: data.instituteName,\r\n      address: data.address,\r\n      email: data.email,\r\n      phone: data.phone,\r\n      subscription_s_date: data.subscription_s_date,\r\n      subscription_e_date: data.subscription_e_date,\r\n      last_payment: data.last_payment,\r\n      payment_amount: data.payment_amount,\r\n    };\r\n    // console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n    //seperate institute vlaues from data object end\r\n\r\n    let package_id;\r\n    postData(packageData, instituteData);\r\n    async function postData(packageData, instituteData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-save\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const savePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n      if (savePkgApiResp.data.status === \"ok\") {\r\n        package_id = savePkgApiResp.data.msg.package_id;\r\n        // toast(\"Institute Created Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n      } else {\r\n        toast(savePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n\r\n      // console.log(\"package_id: \" + package_id);\r\n      instituteData.package_id = package_id; //get package_id from savePkgApiResp\r\n      var config2 = {\r\n        method: \"post\",\r\n        url: \"/institute-create\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: instituteData,\r\n      };\r\n      const createInstApiResp = await trackPromise(axios(config2));\r\n      //console.log(\"createInstApiResp - \" + createInstApiResp.data);\r\n      if (createInstApiResp.data.status === \"ok\") {\r\n        toast(\"Institute Created Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/institute-list-view\");\r\n      } else {\r\n        toast(createInstApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // POST INSTITUTE & PACKAGE DATA -END\r\n  // ---------------------------------------------------------------------------------------------\r\n  /*PACKAGE START***************************************************************************************************/\r\n  const [isCreateNewPackage, setIsCreateNewPackage] = useState(false);\r\n  const [isPackageName, setIsPackageName] = useState(false);\r\n\r\n  const [pkgTitle, setPkgTitle] = useState(\"\");\r\n  const [pkgDescription, setPkgDescription] = useState(\"\");\r\n  //select a package name and update package title and package description -start\r\n  const handlePackageName = (e) => {\r\n    if (!isPackageName) {\r\n      setIsPackageName(true); //dropdown\r\n    }\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    let pkgId = parseInt(optionElement.getAttribute(\"data-id\"));\r\n    // console.log(\"PKGID : \" + pkgId);\r\n    // console.log(\"TITLE: \" + allPkgData.find((x) => x.id === pkgId).title);\r\n    // console.log(\r\n    //   \"DESCRIPTION: \" + allPkgData.find((x) => x.id === pkgId).description\r\n    // );\r\n\r\n    setPkgTitle(allPkgData.find((x) => x.id === pkgId).title);\r\n    setPkgDescription(allPkgData.find((x) => x.id === pkgId).description);\r\n\r\n    // get package parameter (name, price, quantity) by pkgId\r\n    async function fetchData(pkgId) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/parameters/\" + pkgId,\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const pkgParamApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgParamApiResp - \" + pkgParamApiResp.data.msg);\r\n      if (pkgParamApiResp.data.status === \"ok\") {\r\n        setPkgParamList(pkgParamApiResp.data.msg);\r\n        // toast(\"Institute Created Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n      } else {\r\n        toast(pkgParamApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n    fetchData(pkgId);\r\n  };\r\n  //select a package name and update package title and package description -end\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n    // if (name === \"price\" || name === \"quantity\") {\r\n    //   console.log(\"Executing.......\");\r\n    //   const list = [...pkgParamList];\r\n    //   list[index][name] = parseInt(value);\r\n    //   setPkgParamList(list);\r\n    // } else {\r\n    //   const list = [...pkgParamList];\r\n    //   list[index][name] = value;\r\n    //   setPkgParamList(list);\r\n    // }\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setPkgParamList([...pkgParamList, { name: \"\", price: \"\", quantity: \"\" }]);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  /*PACKAGE END****************************************************************************************************/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create an Institute</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            {/* institute id */}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-12\">\r\n                                <label>\r\n                                  <b>Institute ID:</b>\r\n                                </label>\r\n                                <br />\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Type of\r\n                                  Institute\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  name=\"typeOfInst\"\r\n                                  defaultValue={typeOfInst}\r\n                                  onChange={(e) =>\r\n                                    setTypeOfInst(e.target.value)\r\n                                  }\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                >\r\n                                  <option defaultValue hidden>\r\n                                    --Select--\r\n                                  </option>\r\n                                  {instituteTypes\r\n                                    .sort((a, b) =>\r\n                                      a.short_form.localeCompare(b.short_form)\r\n                                    )\r\n                                    .map((e, key) => {\r\n                                      return e.active === \"1\" ? (\r\n                                        <option\r\n                                          key={key}\r\n                                          data-id={e.id}\r\n                                          value={e.short_form}\r\n                                        >\r\n                                          {e.short_form}\r\n                                        </option>\r\n                                      ) : null;\r\n                                    })}\r\n                                </select>\r\n                                {errors.typeOfInst && (\r\n                                  <ErrorMsg>\r\n                                    {errors.typeOfInst.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instNameShortForm\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.instNameShortForm && (\r\n                                  <ErrorMsg>\r\n                                    {errors.instNameShortForm.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Serial\r\n                                  Number\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"serialNum\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.serialNum && (\r\n                                  <ErrorMsg>\r\n                                    {errors.serialNum.message}\r\n                                  </ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instituteName\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instituteName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Mail Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Phone No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  {isCreateNewPackage ? null : (\r\n                                    <span className=\"red-star\">*</span>\r\n                                  )}\r\n                                  Package Name\r\n                                </label>\r\n                                <button\r\n                                  disabled={isPackageName ? true : false}\r\n                                  onClick={() => setIsCreateNewPackage(true)}\r\n                                  className=\"shadow float-right badge badge-pill badge-bg mb-3\"\r\n                                  style={{ padding: \"10px 24px\" }}\r\n                                >\r\n                                  Create New Package\r\n                                </button>\r\n                                <br />\r\n                                {/* IF BUTTON PRESS THEN DROPDOWN WILL DISABLE */}\r\n                                {isCreateNewPackage ? (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    disabled\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                  </select>\r\n                                ) : (\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"package\"\r\n                                    defaultValue=\"--Select Package--\"\r\n                                    onChange={(e) => handlePackageName(e)}\r\n                                    ref={register}\r\n                                  >\r\n                                    <option defaultValue hidden>\r\n                                      --Select Package--\r\n                                    </option>\r\n                                    {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) \r\n                                    ONLY SHOW DEFAULT PACKAGE*/}\r\n                                    {allPkgData\r\n                                      .sort((a, b) =>\r\n                                        a.title.localeCompare(b.title)\r\n                                      )\r\n                                      .map((e, key) => {\r\n                                        return e.type === \"default\" ? (\r\n                                          <option\r\n                                            key={key}\r\n                                            data-id={e.id}\r\n                                            value={e.title}\r\n                                          >\r\n                                            {e.title}\r\n                                          </option>\r\n                                        ) : null;\r\n                                      })}\r\n                                  </select>\r\n                                )}\r\n                                {errors.package && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF BUTTON PRESS THEN DYNAMICALLY INPUT FIELD CREATED */}\r\n                            {isCreateNewPackage ? (\r\n                              <div>\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Name\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM BUTTON SO CUSTOM PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"custom\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div>\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Title\r\n                                    </label>\r\n                                    <br />\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      readOnly\r\n                                      value={pkgTitle}\r\n                                      className=\"form-control\"\r\n                                      name=\"packageTitle\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.packageTitle && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <label>\r\n                                      <span className=\"red-star\">*</span>Package\r\n                                      Description\r\n                                    </label>\r\n                                    <br />\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      name=\"packageDescription\"\r\n                                      readOnly\r\n                                      value={pkgDescription}\r\n                                      ref={register({ required: true })}\r\n                                      rows=\"1\"\r\n                                      cols=\"30\"\r\n                                    ></textarea>\r\n                                    {errors.packageDescription && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                {/* PACKAGE IS CREATED FROM DROPDOWN SO DEFAULT PACKAGE */}\r\n                                <div className=\"form-group row\">\r\n                                  <div className=\"col\">\r\n                                    <input\r\n                                      type=\"hidden\"\r\n                                      className=\"form-control\"\r\n                                      name=\"packageType\"\r\n                                      value=\"default\"\r\n                                      ref={register}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Display Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      type=\"radio\"\r\n                                      className=\"mr-2\"\r\n                                      value=\"On\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      className=\"mr-2\"\r\n                                      type=\"radio\"\r\n                                      value=\"Off\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            {/* IF DROPDOWN SELECTED THEN INPUT WILL AUTO FILLUP AND VALUE WILL BE READONLY */}\r\n                            {isPackageName ? (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                  <button\r\n                                    onClick={handleAddClick}\r\n                                    disabled\r\n                                    className=\"shadow round-plus float-right badge badge-bg mb-3\"\r\n                                    style={{ padding: \"10px 24px\" }}\r\n                                  >\r\n                                    <i className=\"fas fa-plus\"></i>\r\n                                  </button>\r\n                                </label>\r\n                                <br />\r\n                                {pkgParamList.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          readOnly\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          value={x.name}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          readOnly\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          value={x.price}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          readOnly\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          value={x.quantity}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\"></div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"form-group\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Package\r\n                                  Parameter\r\n                                  <span\r\n                                    onClick={handleAddClick}\r\n                                    title=\"Add New Parameter\"\r\n                                    className=\"shadow round-plus float-right badge badge-bg mb-3\"\r\n                                    style={{ padding: \"10px 24px\" }}\r\n                                  >\r\n                                    <i className=\"fas fa-plus\"></i>\r\n                                  </span>\r\n                                </label>\r\n                                <br />\r\n                                {pkgParamList.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          name=\"name\"\r\n                                          value={x.name}\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          placeholder=\"Title\"\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          name=\"price\"\r\n                                          value={x.price}\r\n                                          min=\"0\"\r\n                                          required\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          placeholder=\"Price\"\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          name=\"quantity\"\r\n                                          value={x.quantity}\r\n                                          min=\"0\"\r\n                                          required\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          placeholder=\"Quantity\"\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            title=\"Delete This Parameter\"\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            )}\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_s_date\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_s_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_e_date\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_e_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Last\r\n                                  Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"date\"\r\n                                  className=\"form-control\"\r\n                                  name=\"last_payment\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.last_payment && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Payable\r\n                                  Amount\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"payment_amount\"\r\n                                  min=\"0\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.payment_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstList({ data }) {\r\n  const history = useHistory();\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Phone / Mobile No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Subscription End</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"email\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"phone\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {Moment.utc(row[\"subscription_e_date\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Active\" : \"Inactive\"}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() => history.push(`/institute-detail/${row[\"id\"]}`)}\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/institute-update/${row[\"id\"]}/${row[\"package_id\"]}`\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                {row[\"id\"] ? (\r\n                  <i\r\n                    onClick={() => toggleInstStatus(row[\"id\"])}\r\n                    className={`fas ${\r\n                      isActive ? \"fa-toggle-off\" : \"fa-toggle-on\"\r\n                    } action-icon`}\r\n                  ></i>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstList from \"./DatatableInstList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function InstituteListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.phone.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.subscription_e_date.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/institute-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Institute\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstDetail({ data }) {\r\n  //console.log(\"Institute Details: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8 table-font-100\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute ID</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.institute_id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Institute Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.name}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Status</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              :{\" \"}\r\n              {data.active === \"1\" ? (\r\n                <span className=\"text-green\">Active</span>\r\n              ) : (\r\n                <span className=\"text-red\">Inactive</span>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Email Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Phone / Mobile No.</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.phone}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Address</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Package Name</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              <Link to={`/package-details/${data.package_id}`}>\r\n                : {data.package_title}\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription Start Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_s_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Subscription End Date</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">\r\n              : {Moment(data.subscription_e_date).format(\"DD-MM-YYYY\")}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-text text-left\">\r\n              <b>Payable Amount</b>\r\n            </td>\r\n            <td className=\"border-0 text-left\">: {data.payment_amount}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport DatatableInstDetail from \"./DatatableInstDetail\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function InstituteDetails() {\r\n  //GET INSTITUTE DETAIL -START\r\n  const [instDetail, setInstDetail] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instDetailApiResp - \" + instDetailApiResp.data.msg);\r\n      setInstDetail(instDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INSTITUTE DETAIL -END\r\n  //\r\n\r\n  let history = useHistory();\r\n  //institute delete\r\n  async function deleteInstitute(instituteId) {\r\n    // console.log(\"instituteId : \" + instituteId);\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"delete\",\r\n      url: `/institute-delete/${instituteId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const deleteInstApiResp = await trackPromise(axios(config));\r\n    //console.log(\"deleteInstApiResp - \" + deleteInstApiResp.data);\r\n    if (deleteInstApiResp.data.status === \"ok\") {\r\n      toast(\"Institute Deleted Successfully\", {\r\n        className: \"toast-error\",\r\n      });\r\n      history.push(\"/institute-list-view\");\r\n    } else {\r\n      toast(deleteInstApiResp.data.msg, {\r\n        className: \"toast-error\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Institute Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            {/* DISPLAY IN DETAILS FULL INFO OF INSTITUTE  */}\r\n                            <DatatableInstDetail data={instDetail} />\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function InstituteUpdate() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const { id, package_id } = useParams();\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: package_id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [package_id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  //GET INSTITUTE DATA -START\r\n  const [instData, setInstData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"instApiResp - \" + JSON.stringify(instApiResp.data.msg.params));\r\n      setInstData(instApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, [id]);\r\n  //GET INSTITUTE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    // console.log(\"Form Data: \" + JSON.stringify(data));\r\n\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: package_id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    // console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        //console.log(\"Package Update Successfully\");\r\n        // toast(\"Package Update Successfully\", {\r\n        //   className: \"toast-error\",\r\n        // });\r\n        // history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n\r\n    //seperate institute vlaues from data object start\r\n    const instituteData = {\r\n      id: id,\r\n      package_id: package_id,\r\n      institute_id: data.institute_id,\r\n      password: data.password,\r\n      name: data.instName,\r\n      address: data.address,\r\n      email: data.email,\r\n      phone: data.phone,\r\n      subscription_s_date: data.subscription_s_date,\r\n      subscription_e_date: data.subscription_e_date,\r\n      last_payment: data.last_payment,\r\n      payment_amount: data.payment_amount,\r\n    };\r\n    // console.log(\"Institute Data: \" + JSON.stringify(instituteData));\r\n    //seperate institute vlaues from data object end\r\n    postInstData(instituteData);\r\n    async function postInstData(instituteData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: instituteData,\r\n      };\r\n      const updateInstApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updateInstApiResp - \" + updateInstApiResp.data);\r\n      if (updateInstApiResp.data.status === \"ok\") {\r\n        toast(\"Institute Information Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        // history.push(\"/institute-list-view\");\r\n      } else {\r\n        toast(updateInstApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  /*SHOW OR HIDE PASSWORD START*/\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  /*SHOW OR HIDE PASSWORD END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Information</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/institute-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  ID\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_id\"\r\n                                  defaultValue={instData.institute_id}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_id && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Password\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  id=\"password-field1\"\r\n                                  type={passwordShown ? \"text\" : \"password\"}\r\n                                  className=\"form-control\"\r\n                                  name=\"password\"\r\n                                  defaultValue={instData.password}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                    minLength: {\r\n                                      value: 6,\r\n                                      message: \"* Minimum 6 Character Required\",\r\n                                    },\r\n                                  })}\r\n                                />\r\n\r\n                                <span\r\n                                  onClick={togglePasswordVisiblity}\r\n                                  toggle=\"#password-field1\"\r\n                                  className={`fa fa-fw ${\r\n                                    passwordShown ? \"fa-eye-slash\" : \"fa-eye\"\r\n                                  } field-icon toggle-password`}\r\n                                />\r\n                                {errors.password && (\r\n                                  <ErrorMsg>{errors.password.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"instName\"\r\n                                  defaultValue={instData.name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.instName && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  defaultValue={instData.address}\r\n                                  name=\"address\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.address && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>Institute\r\n                                  Mail Address\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"email\"\r\n                                  className=\"form-control\"\r\n                                  name=\"email\"\r\n                                  defaultValue={instData.email}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.email && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Institute\r\n                                  Phone No.\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control\"\r\n                                  name=\"phone\"\r\n                                  defaultValue={instData.phone}\r\n                                  ref={register({\r\n                                    required: \"* This Field is Required\",\r\n                                  })}\r\n                                />\r\n                                {errors.phone && (\r\n                                  <ErrorMsg>{errors.phone.message}</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Subscription Duration\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_s_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_s_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_s_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"mt-2 mr-3 ml-3\">to</p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      className=\"form-control\"\r\n                                      name=\"subscription_e_date\"\r\n                                      defaultValue={\r\n                                        instData.subscription_e_date\r\n                                      }\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    {errors.subscription_e_date && (\r\n                                      <ErrorMsg>\r\n                                        * This Field is Required\r\n                                      </ErrorMsg>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-6\">\r\n                                <label>\r\n                                  <span className=\"red-star\">* </span>\r\n                                  Last Payment Date\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"date\"\r\n                                  className=\"form-control\"\r\n                                  name=\"last_payment\"\r\n                                  defaultValue={instData.last_payment}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.last_payment && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span> Payable\r\n                                  Amount\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  name=\"payment_amount\"\r\n                                  defaultValue={instData.payment_amount}\r\n                                  min=\"0\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.payment_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n\r\n                            {/* PACKAGE PART START IT WILL COPY FROM EDIT PACKAGE ************************************************/}\r\n                            {/* <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null} */}\r\n\r\n                            {/* PACKAGE PART END-------------------------------------------- */}\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function ViewAddressInfo() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  console.log(user);\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <table className=\"table table-borderless table-responsive table-font-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Present Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.division}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" className=\"text-left\">\r\n                <b>Permanent Address</b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Address</td>\r\n              <td className=\"text-left\">: {user.per_address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Postal Code</td>\r\n              <td className=\"text-left\">: {user.per_post_code}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Post Office</td>\r\n              <td className=\"text-left\">: {user.per_post_office}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Upazila</td>\r\n              <td className=\"text-left\">: {user.per_thana}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">District</td>\r\n              <td className=\"text-left\">: {user.per_district}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\">Division</td>\r\n              <td className=\"text-left\">: {user.per_division}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport ViewAddressInfo from \"./ViewAddressInfo\";\r\nimport Moment from \"moment\";\r\nexport default function ViewProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n    var response = {};\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          setIsProfileUpdate(false);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  //console.log(user);\r\n  //\r\n  //format date => 09-09-2020(dd-mm-yyyy) to 9 Sep, 2020\r\n  function formatDate(date) {\r\n    //convert dd-mm-yyyy to mm-dd-yyyy\r\n    var initial = date.split(/\\-/);\r\n    date = [initial[1], initial[0], initial[2]].join(\"-\");\r\n\r\n    if (date !== undefined && date !== \"\") {\r\n      var myDate = new Date(date);\r\n      var month = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ][myDate.getMonth()];\r\n\r\n      var str = myDate.getDate() + \" \" + month + \", \" + myDate.getFullYear();\r\n\r\n      return str;\r\n    }\r\n    return \"\";\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              {/* Profile header section start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  {/* Widget: user widget style 1 */}\r\n                  <div className=\"card card-widget widget-user\">\r\n                    {/* Add the bg color to the header using any of the bg-* classes */}\r\n\r\n                    {(() => {\r\n                      if (user.cover_img) {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background: `url('${user.cover_img}') center center`,\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            className=\"widget-user-header text-white\"\r\n                            style={{\r\n                              background:\r\n                                \"url('dist/img/cover_default.jpg') center center\",\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      }\r\n                    })()}\r\n\r\n                    <div className=\"widget-user-image\">\r\n                      {(() => {\r\n                        if (user.avatar_img) {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src={`${user.avatar_img}`}\r\n                            />\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <img\r\n                              className=\"img-fluid\"\r\n                              src=\"dist/img/avatar_default.jpg\"\r\n                              alt=\"User Avatar\"\r\n                            />\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                      {(() => {\r\n                        if (\r\n                          user.fname &&\r\n                          user.lname &&\r\n                          user.role &&\r\n                          user.created_at\r\n                        ) {\r\n                          return (\r\n                            <>\r\n                              <h3 className=\"info-color\">\r\n                                {user.fname} {user.lname}\r\n                                <span className=\"badge badge-pill badge-bg pr-2 pl-2 pt-1 pb-1\">\r\n                                  {user.role}\r\n                                </span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\">\r\n                                Date of Joining: {formatDate(user.created_at)}\r\n                              </h6>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <h3\r\n                                className=\"info-color\"\r\n                                style={{ paddingTop: \"70px\" }}\r\n                              >\r\n                                <span className=\"badge badge-pill badge-bg\"></span>\r\n                              </h3>\r\n                              <h6 className=\"info-color\"></h6>\r\n                            </>\r\n                          );\r\n                        }\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"card-footer bg-white\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"description-block\"></div>\r\n                          {/* /.description-block */}\r\n                        </div>\r\n                      </div>\r\n                      {/* /.row */}\r\n                    </div>\r\n                  </div>\r\n                  {/* /.widget-user */}\r\n                </div>\r\n              </div>\r\n              {/* Profile header section end */}\r\n              {/* Profile View start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12 pl-3\">\r\n                  <div className=\"col p-0\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header p-2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <h4\r\n                              style={{\r\n                                paddingLeft: \"16px\",\r\n                                paddingTop: \"10px\",\r\n                                color: \"black\",\r\n                                marginLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              View Profile\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"col-6\" style={{ paddingTop: \"8px\" }}>\r\n                            <Link to=\"/edit-profile\">\r\n                              <span\r\n                                className=\"shadow float-right badge badge-pill badge-bg\"\r\n                                style={{ padding: \"10px 24px\" }}\r\n                              >\r\n                                <i className=\"far fa-edit pr-2\"></i>Edit Profile\r\n                              </span>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* /.card-header */}\r\n                      <div className=\"card-body\">\r\n                        <div className=\"tab-content\">\r\n                          <div className=\"active tab-pane\" id=\"activity\">\r\n                            {/* Post */}\r\n                            <p className=\"title-border\">General Information</p>\r\n                            <div className=\"post\">\r\n                              <table className=\"table table-borderless table-responsive table-font-100\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">First Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.fname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Last Name</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.lname}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Date of Birth</td>\r\n                                    <td className=\"text-left\">\r\n                                      :{\" \"}\r\n                                      {Moment(\r\n                                        new Date(user.date_of_birth)\r\n                                      ).format(\"DD/MM/YYYY\")}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Gender</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.gender}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Nationality</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.nationality}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Mobile No.</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.mobile}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Email</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.email}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Designation</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.designation}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Place of Birth\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.place_of_birth}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">\r\n                                      Marital Status\r\n                                    </td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.marital_status}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Religion</td>\r\n                                    <td className=\"text-left\">\r\n                                      : {user.religion}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">NID</td>\r\n                                    <td className=\"text-left\">: {user.nid}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"text-left\">Employee ID</td>\r\n                                    <td className=\"text-left\">: {user.id}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            {/* /.post */}\r\n                            <p className=\"title-border\">Address Information</p>\r\n                            <ViewAddressInfo />\r\n                          </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                      </div>\r\n                      {/* /.card-body */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                  </div>\r\n                </div>\r\n                {/* /.col */}\r\n              </div>\r\n              {/* Profile View end */}\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n      <LoadingIndicator />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadAvatar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [profileImg, setProfileImg] = useState(\"./img/avatar-default.png\");\r\n\r\n  //GET PROFILE PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.avatar_img));\r\n      setProfileImg(userApiResp.avatar_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PROFILE PICTURE  -END\r\n\r\n  const imageHandlerAvatar = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        console.log(\r\n          \"imageHandlerAvatar calling....\" + JSON.stringify(reader.result)\r\n        );\r\n        setProfileImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitAvatar = (data) => {\r\n    //console.log(data.avatar_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"avatar_img\", data.avatar_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/avatar-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Profile Picture Uploaded Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload profile image start */}\r\n      <form onSubmit={handleSubmit(onSubmitAvatar)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-avatar\">\r\n                <img src={profileImg} id=\"img\" className=\"imgAvatar\" />\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputAvatar\"\r\n                  onChange={imageHandlerAvatar}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 1000000) {\r\n                        return \"Photo size exceeds 1 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-avatar\"\r\n                  htmlFor=\"inputAvatar\"\r\n                  title=\"Upload Profile Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Profile Photo (Max: 1 MB | File Type: jpg, png, jpeg,\r\n                gif)\r\n              </span>\r\n              <br />\r\n              {errors.avatar_img && (\r\n                <ErrorMsg>{errors.avatar_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload profile image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UploadCover() {\r\n  const [coverImg, setCoverImg] = useState(\"\");\r\n\r\n  //GET COVER PICTURE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      let id = localStorage.getItem(\"id\");\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let userApiResp = await trackPromise(axios(config));\r\n      userApiResp = userApiResp.data.msg;\r\n      // console.log(\"userApiResp - \" + JSON.stringify(userApiResp.cover_img));\r\n      setCoverImg(userApiResp.cover_img);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET COVER PICTURE -END\r\n\r\n  const imageHandlerCover = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setCoverImg(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const onSubmitCover = (data) => {\r\n    //console.log(data.cover_img[0]);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cover_img\", data.cover_img[0]);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/cover-img-update?\",\r\n      data: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Cover photo uploaded successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* Upload cover image start */}\r\n      <form onSubmit={handleSubmit(onSubmitCover)}>\r\n        <div className=\"form-group row\" style={{ margin: \"24px\" }}>\r\n          <div className=\"col\">\r\n            <div style={{ marginTop: \"16px\", textAlign: \"center\" }}>\r\n              <div className=\"img-holder-cover\">\r\n                {coverImg ? (\r\n                  <img src={coverImg} id=\"img\" className=\"imgCover\" />\r\n                ) : (\r\n                  <img\r\n                    src={\"./img/cover-default.png\"}\r\n                    id=\"img\"\r\n                    className=\"imgCover\"\r\n                  />\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cover_img\"\r\n                  accept=\"image/*\"\r\n                  id=\"inputCover\"\r\n                  onChange={imageHandlerCover}\r\n                  ref={register({\r\n                    required: \"* Please Select a File\",\r\n                    validate: (value) => {\r\n                      if (value[0].size > 5000000) {\r\n                        return \"Photo size exceeds 5 MB\";\r\n                      }\r\n                      return true;\r\n                    },\r\n                  })}\r\n                />\r\n                <label\r\n                  className=\"image-upload-cover\"\r\n                  htmlFor=\"inputCover\"\r\n                  title=\"Upload Cover Picture\"\r\n                >\r\n                  <i className=\"fas fa-camera\"></i>\r\n                </label>\r\n              </div>\r\n              <span className=\"small\">\r\n                Upload Cover Photo (Max: 5 MB | File Type: jpg, png, jpeg, gif)\r\n              </span>\r\n              <br />\r\n              {errors.cover_img && (\r\n                <ErrorMsg>{errors.cover_img.message}</ErrorMsg>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-update mt-3\">\r\n                <i className=\"far fa-caret-square-up mr-3\"></i>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* Upload cover image end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport Moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateProfile() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    if (selectedDate) {\r\n      //console.log(data);\r\n\r\n      data = {\r\n        ...data,\r\n        date_of_birth: selectedDate,\r\n      };\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/info-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data,\r\n      };\r\n\r\n      async function fetchData() {\r\n        const userApiResp = await trackPromise(axios(config));\r\n        // console.log(JSON.stringify(userApiResp.data));\r\n        if (userApiResp.data.status === \"ok\") {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          setIsProfileUpdate(true);\r\n        } else {\r\n          toast(userApiResp.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      }\r\n      fetchData();\r\n    } else {\r\n      setErrors_date_of_birth(true);\r\n    }\r\n  };\r\n\r\n  ///api for get user info--------------\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      // test\r\n      let response = await trackPromise(axios(config));\r\n      if (response.data.status === \"ok\") {\r\n        // console.log(response.data.msg);\r\n        setSelectedDate(new Date(response.data.msg.date_of_birth));\r\n        setSelectedGender(response.data.msg.gender);\r\n        setSelectedMaritalStatus(response.data.msg.marital_status);\r\n        setSelectedReligion(response.data.msg.religion);\r\n        setUser(response.data.msg);\r\n      }\r\n      if (isProfileUpdate) {\r\n        history.push(\"/view-profile\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [isProfileUpdate]);\r\n  //console.log(user.date_of_birth);\r\n  //\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedGender, setSelectedGender] = useState(\"\");\r\n  const [selectedMaritalStatus, setSelectedMaritalStatus] = useState(\"\");\r\n  const [selectedReligion, setSelectedReligion] = useState(\"\");\r\n  const [errors_date_of_birth, setErrors_date_of_birth] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {/* edit form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* First Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> First Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fname\"\r\n              defaultValue={user.fname}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fname && <ErrorMsg>{errors.fname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Last Name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Last Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lname\"\r\n              defaultValue={user.lname}\r\n              ref={register({\r\n                pattern: {\r\n                  value: /^[a-z\\s]{0,255}$/i,\r\n                  message: \"* Please Enter Valid Name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.lname && <ErrorMsg>{errors.lname.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Date of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Date of Birth\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={selectedDate}\r\n              onChange={(date) => {\r\n                setSelectedDate(date);\r\n                setErrors_date_of_birth(false);\r\n              }}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={new Date()}\r\n              showYearDropdown\r\n              scrollableMonthYearDropdown\r\n            />\r\n            {errors_date_of_birth && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Gender */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Gender\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"gender\"\r\n              ref={register({ required: true })}\r\n              value={selectedGender}\r\n              onChange={(e) => setSelectedGender(e.target.value)}\r\n            >\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            {errors.gender && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Nationality */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Nationality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nationality\"\r\n              defaultValue={user.nationality}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Mobile No. */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>\r\n              <span className=\"red-star\">*</span> Mobile No.\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"mobile\"\r\n              defaultValue={user.mobile}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^(?:\\+88|01)?\\d{11}\\r?$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.mobile && <ErrorMsg>{errors.mobile.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Designation */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Designation</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"designation\"\r\n              defaultValue={user.designation}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Place of Birth */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Place of Birth</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"place_of_birth\"\r\n              defaultValue={user.place_of_birth}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Marital Status */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Marital Status</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"marital_status\"\r\n              ref={register}\r\n              value={selectedMaritalStatus}\r\n              onChange={(e) => setSelectedMaritalStatus(e.target.value)}\r\n            >\r\n              <option value=\"Single\">Single</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* Religion */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Religion</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"religion\"\r\n              defaultValue={user.religion}\r\n              ref={register}\r\n              value={selectedReligion}\r\n              onChange={(e) => setSelectedReligion(e.target.value)}\r\n            >\r\n              <option value=\"Islam\">Islam</option>\r\n              <option value=\"Hinduism\">Hinduism</option>\r\n              <option value=\"Buddhism\">Buddhism</option>\r\n              <option value=\"Christianity\">Christianity</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {/* NID */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>NID</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"nid\"\r\n              defaultValue={user.nid}\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form general info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function UpdateAddress() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  let user_id = localStorage.getItem(\"id\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data[\"user_id\"] = user_id;\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/update-user-address\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/view-profile\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA START */\r\n  const [user, setUser] = useState({});\r\n  const [divisionData, setDivisionData] = useState([]);\r\n  const [districtData, setDistrictData] = useState([]);\r\n  const [thanaUpazilaData, setThanaUpazila] = useState([]);\r\n\r\n  const [perDivisionData, setPerDivisionData] = useState([]);\r\n  const [perDistrictData, setPerDistrictData] = useState([]);\r\n  const [perThanaUpazilaData, setPerThanaUpazila] = useState([]);\r\n\r\n  const [isSameAsPresent, setIsSameAsPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/user-address\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userApiResp = await trackPromise(axios(config));\r\n      //console.log(\"TEST user - \" + userApiResp.data.msg);\r\n      setUser(userApiResp.data.msg);\r\n\r\n      const divisionUrl = \"/GetAllDivisions\";\r\n\r\n      const divisionApiResp = await trackPromise(axios.get(divisionUrl));\r\n      // console.log(\r\n      //   \"Division - \" + JSON.stringify(divisionApiResp.data.data.divisions)\r\n      // );\r\n      setDivisionData(divisionApiResp.data.data.divisions);\r\n      setPerDivisionData(divisionApiResp.data.data.divisions);\r\n\r\n      //console.log(\"TEST user.divison - \" + userApiResp.data.msg.division); //------------------------------------------------\r\n\r\n      let divisionArray = []; //store divison in array\r\n      divisionApiResp.data.data.divisions\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          divisionArray.push(e.name);\r\n        });\r\n      //console.log(\"divisionArray - \" + divisionArray);\r\n      // console.log(\r\n      //   \"divisionId - \" +\r\n      //     (divisionArray.indexOf(userApiResp.data.msg.division) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let divisionId = divisionArray.indexOf(userApiResp.data.msg.division) + 1;\r\n\r\n      //console.log(\"Division ID \" + divisionId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetDistricts\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { division_id: divisionId },\r\n      };\r\n\r\n      const districtApiResp = await trackPromise(axios(config));\r\n\r\n      //console.log(\"District - \" + JSON.stringify(districtApiResp.data.data));\r\n      setDistrictData(districtApiResp.data.data);\r\n      setPerDistrictData(districtApiResp.data.data);\r\n\r\n      // console.log(\"TEST user.district - \" + userApiResp.data.msg.district); //------------------------------------------------\r\n\r\n      let districtArray = []; //store divison in array\r\n      districtApiResp.data.data\r\n        .sort((a, b) => parseInt(a.id, 10) - parseInt(b.id, 10))\r\n        .map((e, key) => {\r\n          //console.log(\"TEST name - \" + e.name);\r\n          districtArray.push(e.name);\r\n        });\r\n      //console.log(\"districtArray - \" + districtArray);\r\n      // console.log(\r\n      //   \"districtId - \" +\r\n      //     (districtArray.indexOf(userApiResp.data.msg.district) + 1)\r\n      // ); //dhaka - [dhaka, khulna, barisal]\r\n\r\n      let districtId = districtArray.indexOf(userApiResp.data.msg.district) + 1;\r\n      //console.log(\"District ID \" + districtId);\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetUpazillas\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: { district_id: districtId },\r\n      };\r\n\r\n      const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n      //console.log(\"Upazila - \" + JSON.stringify(thanaUpazilaApiResp.data.data));\r\n\r\n      setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n      setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange division dropdown menu, district value will update -start\r\n  const ChangeDivision = async (e) => {\r\n    setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var divisionId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + divisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange division dropdown menu, district value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangeDistrict = async (e) => {\r\n    setUser({ ...user, district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var districtId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + districtId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n\r\n    setThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangeThanaUpazila = (e) => {\r\n    setUser({ ...user, thana: e.target.value });\r\n    //console.log(\"Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  //onchange perDivision dropdown menu, perDistrict value will update -start\r\n  const ChangePerDivision = async (e) => {\r\n    setUser({ ...user, per_division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDivisionId = optionElement.getAttribute(\"data-id\");\r\n    // console.log(\"vlaue of e : \" + perDivisionId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: perDivisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n  };\r\n  //onchange perDivision dropdown menu, perDistrict value will update -end\r\n\r\n  //onchange district dropdown menu, thana/upazila value will update -start\r\n  const ChangePerDistrict = async (e) => {\r\n    setUser({ ...user, per_district: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var perDistrictId = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"vlaue of e : \" + perDistrictId);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: perDistrictId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  };\r\n  //onchange district dropdown menu, thana/upazila value will update -end\r\n\r\n  //onchange thana/upazila dropdown menu -start\r\n  const ChangePerThanaUpazila = (e) => {\r\n    setUser({ ...user, per_thana: e.target.value });\r\n    //console.log(\"Per Thana/Upazila onchange method executing.....\");\r\n  };\r\n  //onchange thana/upazila dropdown menu -end\r\n\r\n  async function fetchData(divisionId, districtId) {\r\n    //console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetDistricts\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { division_id: divisionId },\r\n    };\r\n\r\n    const districtApiResp = await trackPromise(axios(config));\r\n\r\n    // console.log(\r\n    //   \"OnChange Division -> District - \" +\r\n    //     JSON.stringify(districtApiResp.data.data)\r\n    // );\r\n    setPerDistrictData(districtApiResp.data.data);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/GetUpazillas\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: { district_id: districtId },\r\n    };\r\n\r\n    const thanaUpazilaApiResp = await trackPromise(axios(config));\r\n    // console.log(\r\n    //   \"OnChange District -> Upazila- \" +\r\n    //     JSON.stringify(thanaUpazilaApiResp.data.data)\r\n    // );\r\n    setPerThanaUpazila(thanaUpazilaApiResp.data.data);\r\n  }\r\n  //ChangeDivisionIsSame -start\r\n  const ChangeDivisionIsSame = (divisionId, districtId) => {\r\n    fetchData(divisionId, districtId);\r\n  };\r\n  //ChangeDivisionIsSame -end\r\n\r\n  //onchange is same present -start\r\n  const ChangeIsSameAsPresent = (e) => {\r\n    setIsSameAsPresent(e.target.checked);\r\n    // setUser({ ...user, per_thana: e.target.value });\r\n    // console.log(\"CAlled---------\" + e.target.checked);\r\n    if (e.target.checked) {\r\n      let address = document.querySelector(\"#address\").value;\r\n      let post_code = document.querySelector(\"#post_code\").value;\r\n      let post_office = document.querySelector(\"#post_office\").value;\r\n      let division = document.querySelector(\"#division\").value;\r\n      let district = document.querySelector(\"#district\").value;\r\n      let thana = document.querySelector(\"#thana\").value;\r\n\r\n      // document.querySelector(\"#per_address\").value = address;\r\n      // document.querySelector(\"#per_post_code\").value = post_code;\r\n      // document.querySelector(\"#per_post_office\").value = post_office;\r\n      // document.querySelector(\"#per_division\").value = division;\r\n      // document.querySelector(\"#per_district\").value = district;\r\n      // document.querySelector(\"#per_thana\").value = thana;\r\n\r\n      // alert(division + district + thana);\r\n\r\n      //get division and district id\r\n      let index = document.querySelector(\"#division\").selectedIndex;\r\n      let optionElement = document.querySelector(\"#division\").childNodes[index];\r\n      let divisionId = optionElement.getAttribute(\"data-id\");\r\n      let index2 = document.querySelector(\"#district\").selectedIndex;\r\n      let optionElement2 = document.querySelector(\"#district\").childNodes[\r\n        index2\r\n      ];\r\n      let districtId = optionElement2.getAttribute(\"data-id\");\r\n      // console.log(\"DIV- \" + divisionId + \" DIS- \" + districtId);\r\n      ChangeDivisionIsSame(divisionId, districtId);\r\n\r\n      setUser({\r\n        ...user,\r\n        per_address: address,\r\n        per_post_code: post_code,\r\n        per_post_office: post_office,\r\n        per_division: division,\r\n        per_district: district,\r\n        per_thana: thana,\r\n      });\r\n\r\n      // setTimeout(() => {\r\n      //   alert(JSON.stringify(user));\r\n      // }, 2000);\r\n\r\n      // console.log(\r\n      //   \"Changed Value========== \" +\r\n      //     address +\r\n      //     \"-\" +\r\n      //     post_code +\r\n      //     \"-\" +\r\n      //     post_office +\r\n      //     \"-\" +\r\n      //     division +\r\n      //     \"-\" +\r\n      //     district +\r\n      //     \"-\" +\r\n      //     thana\r\n      // );\r\n    }\r\n  };\r\n  //onchange is same present -end\r\n\r\n  /*CASCADING DROPDOWN DIVISION, DISTRICT, THANA/UPAZILA END */\r\n\r\n  return (\r\n    <>\r\n      {/* edit form address info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h5>Present Address</h5>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Address</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              defaultValue={user.address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.address && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"post_code\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              name=\"post_code\"\r\n              defaultValue={user.post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_code && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"post_office\"\r\n              className=\"form-control\"\r\n              name=\"post_office\"\r\n              defaultValue={user.post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"division\"\r\n              name=\"division\"\r\n              value={user.division}\r\n              onChange={(e) => ChangeDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.division ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {divisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.division && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"district\"\r\n              id=\"district\"\r\n              onChange={(e) => ChangeDistrict(e)}\r\n              value={user.district}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.district ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {districtData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.district && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"thana\"\r\n              id=\"thana\"\r\n              onChange={(e) => ChangeThanaUpazila(e)}\r\n              value={user.thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {user.thana ? null : <option hidden>--Select--</option>}\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {thanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-sm-row flex-column\">\r\n          <div className=\"mr-auto\">\r\n            <h5>Permanent Address</h5>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-check float-right\">\r\n              <input\r\n                className=\"form-check-input check-input\"\r\n                type=\"checkbox\"\r\n                onChange={(e) => ChangeIsSameAsPresent(e)}\r\n                checked={isSameAsPresent}\r\n                id=\"defaultCheck1\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                Same as Present Address\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* permanent address */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <div className=\"row pb-2\">\r\n              <div className=\"col\">\r\n                <label>Address</label>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_address\"\r\n              name=\"per_address\"\r\n              defaultValue={user.per_address}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_address && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent postal code */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Postal Code</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              className=\"form-control\"\r\n              id=\"per_post_code\"\r\n              name=\"per_post_code\"\r\n              defaultValue={user.per_post_code}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_code && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent post office */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Post Office</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"per_post_office\"\r\n              name=\"per_post_office\"\r\n              defaultValue={user.per_post_office}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.per_post_office && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent division */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Division</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_division\"\r\n              id=\"per_division\"\r\n              value={user.per_division}\r\n              onChange={(e) => ChangePerDivision(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDivisionData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_division && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent district */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>District</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_district\"\r\n              id=\"per_district\"\r\n              value={user.per_district}\r\n              onChange={(e) => ChangePerDistrict(e)}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perDistrictData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_district && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* permanent upazila */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col\">\r\n            <label>Upazila</label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"per_thana\"\r\n              id=\"per_thana\"\r\n              onChange={(e) => ChangePerThanaUpazila(e)}\r\n              value={user.per_thana}\r\n              ref={register({ required: true })}\r\n            >\r\n              {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n              {perThanaUpazilaData\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((e, key) => {\r\n                  return (\r\n                    <option key={key} data-id={e.id} value={e.name}>\r\n                      {e.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {errors.per_thana && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Save\r\n        </button>\r\n      </form>\r\n      {/* edit form address info end */}\r\n      <LoadingIndicator />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport UpdateAddress from \"./UpdateAddress\";\r\n\r\nexport default function EditInformation() {\r\n  const [showGeneralInfo, setShowGeneralInfo] = useState(true);\r\n  const [showAddressInfo, setShowAddressInfo] = useState(false);\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4>Edit Information</h4>\r\n      <ul className=\"nav nav-tabs\" id=\"custom-content-below-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showGeneralInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(true);\r\n              setShowAddressInfo(false);\r\n              //console.log(\"GeneralInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n              marginRight: \"40px\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">General Information</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ${\r\n              showAddressInfo ? \"active border-red\" : null\r\n            }`}\r\n            onClick={() => {\r\n              setShowGeneralInfo(false);\r\n              setShowAddressInfo(true);\r\n              //console.log(\"AddressInfo true\");\r\n            }}\r\n            style={{\r\n              padding: \"0.5rem 0rem\",\r\n            }}\r\n          >\r\n            <span className=\"border-bottom-red\">Address Information</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"custom-content-below-tabContent\">\r\n        {showGeneralInfo ? <UpdateProfile /> : null}\r\n        {showAddressInfo ? <UpdateAddress /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadAvatar from \"./UploadAvatar\";\r\nimport UploadCover from \"./UploadCover\";\r\nimport EditInformation from \"./EditInformation\";\r\n\r\nexport default function EditProfile() {\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [showCoverPhoto, setShowCoverPhoto] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Edit Profile</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link to=\"/view-profile\">\r\n                        <span\r\n                          className=\"shadow float-right badge badge-pill badge-bg\"\r\n                          style={{ padding: \"10px 24px\" }}\r\n                        >\r\n                          <i className=\"far fa-user pr-2\"></i>View My Profile\r\n                        </span>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showEdit ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(true);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Edit true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-edit pr-2 pl-3\"></i>Edit\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showProfilePhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(true);\r\n                                setShowCoverPhoto(false);\r\n                                //console.log(\"Profile Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-address-card pr-2 pl-3\"></i>\r\n                              Profile Photo\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showCoverPhoto ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowEdit(false);\r\n                                setShowProfilePhoto(false);\r\n                                setShowCoverPhoto(true);\r\n                                // console.log(\"Cover Photo true\");\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-image pr-2 pl-3\"></i>Cover\r\n                              Photo\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showEdit ? <EditInformation /> : null}\r\n                            {showProfilePhoto ? <UploadAvatar /> : null}\r\n                            {showCoverPhoto ? <UploadCover /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function Logout() {\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  // alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n  // const apiUrl = \"https://jsonplaceholder.typicode.com/posts?userId=1\";\r\n\r\n  // alert(accessToken);\r\n\r\n  var config = {\r\n    method: \"get\",\r\n    url: \"/logout\",\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    },\r\n  };\r\n\r\n  axios(config).then(function (response) {\r\n    // console.log(JSON.stringify(response.data));\r\n    if (response.data.status === \"ok\") {\r\n      // localStorage.clear();\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"emailAddress\");\r\n\r\n      // if logout success\r\n      //props.history.push(\"/\");\r\n      // auth.logout(() => {\r\n\r\n      // });\r\n    }\r\n  });\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport { ProfileContext } from \"../../ProfileContext\";\r\nimport logo from \"./logo2.png\";\r\n\r\nexport default function Navbar() {\r\n  const [isProfileUpdate, setIsProfileUpdate] = useContext(ProfileContext);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    // alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n    var config = {\r\n      method: \"get\",\r\n      url: \"/user-detail\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then((response) => {\r\n        //console.log(JSON.stringify(response.data.msg));\r\n        if (response.data.status === \"ok\") {\r\n          // console.log(response.data.msg);\r\n          setUser(response.data.msg);\r\n          //console.log(\"nav updated\");\r\n        }\r\n      })\r\n    );\r\n  }, [isProfileUpdate]);\r\n  //console.log(user);\r\n  //\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* TOP NAVBAR START */}\r\n      <nav className=\"sticky-top main-header navbar navbar-expand-lg navbar-white navbar-light\">\r\n        <div className=\"container-fluid layout-width\">\r\n          <Link to=\"/dashboard\" className=\"mr-4\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Babylon Logo\"\r\n              height=\"50\"\r\n              width=\"150\"\r\n              className=\"img-fluid\"\r\n            />\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            {/* left side menu item */}\r\n            {/* <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item vertical-bar\">\r\n                <Link to=\"/dashboard\" className=\"nav-link hov-effect\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            </ul> */}\r\n            {/* right side menu item */}\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {/* Email Dropdown Menu */}\r\n              <li className=\"nav-item dropdown\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <i className=\"far fa-envelope\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">3</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 mr-3 img-circle\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Brad Diesel\r\n                          <span className=\"float-right text-sm text-danger\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">Call me whenever you can...</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"img/ninad.png\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          John Pierce\r\n                          <span className=\"float-right text-sm text-muted\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">I got your message bro</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Nora Silvester\r\n                          <span className=\"float-right text-sm text-warning\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">The subject goes here</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Messages\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Alarm Dropdown Menu */}\r\n              <li className=\"nav-item dropdown\">\r\n                <Link\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                  to=\"#\"\r\n                >\r\n                  <i className=\"far fa-bell\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">15</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <span className=\"dropdown-item dropdown-header\">\r\n                    15 Notifications\r\n                  </span>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-envelope mr-2\" /> 4 new messages\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      3 mins\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-users mr-2\" /> 8 friend requests\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      12 hours\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    <i className=\"fas fa-file mr-2\" /> 3 new reports\r\n                    <span className=\"float-right text-muted text-sm\">\r\n                      2 days\r\n                    </span>\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Notifications\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Flag Dropdown Menu */}\r\n              <li className=\"nav-item dropdown mr-3\">\r\n                <Link\r\n                  className=\"nav-link hov-effect pt-3\"\r\n                  data-toggle=\"dropdown\"\r\n                  to=\"#\"\r\n                >\r\n                  <i className=\"far fa-flag\" />\r\n                  <span className=\"badge badge-danger navbar-badge\">3</span>\r\n                </Link>\r\n                <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 mr-3 img-circle\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Brad Diesel\r\n                          <span className=\"float-right text-sm text-danger\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">Call me whenever you can...</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user8-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          John Pierce\r\n                          <span className=\"float-right text-sm text-muted\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">I got your message bro</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item\">\r\n                    {/* Message Start */}\r\n                    <div className=\"media\">\r\n                      <img\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                        className=\"img-size-50 img-circle mr-3\"\r\n                      />\r\n                      <div className=\"media-body\">\r\n                        <h3 className=\"dropdown-item-title\">\r\n                          Nora Silvester\r\n                          <span className=\"float-right text-sm text-warning\">\r\n                            <i className=\"fas fa-star\" />\r\n                          </span>\r\n                        </h3>\r\n                        <p className=\"text-sm\">The subject goes here</p>\r\n                        <p className=\"text-sm text-muted\">\r\n                          <i className=\"far fa-clock mr-1\" />4 Hours Ago\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Message End */}\r\n                  </Link>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <Link to=\"#\" className=\"dropdown-item dropdown-footer\">\r\n                    See All Messages\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              {/* Ninad Hossain Profile Menu*/}\r\n              <li className=\"nav-item dropdown d-flex\">\r\n                <div className=\"profile-image\">\r\n                  {(() => {\r\n                    if (user.avatar_img) {\r\n                      return (\r\n                        <img\r\n                          src={`${user.avatar_img}`}\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <img\r\n                          src=\"dist/img/avatar_default.jpg\"\r\n                          className=\"img-circle\"\r\n                          height=\"40px\"\r\n                          width=\"40px\"\r\n                          alt=\"User Avatar\"\r\n                        />\r\n                      );\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                  <Link\r\n                    className=\"dropdown-toggle d-block nav-link pr-0\"\r\n                    data-toggle=\"dropdown\"\r\n                    to=\"#\"\r\n                    role=\"button\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    {user.fname} {user.lname}\r\n                  </Link>\r\n                  <div className=\"dropdown-menu sub-menu\">\r\n                    <Link className=\"dropdown-item\" to=\"/view-profile\">\r\n                      My Profile\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/account-info\">\r\n                      Account Info\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/\" onClick={Logout}>\r\n                      Logout\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* TOP NAVBAR END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nexport default function Sidebar() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n  //console.log(width);\r\n  if (width < 576) {\r\n    var sidebar_mini = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    sidebar_mini.classList.add(\"sidebar-collapse\");\r\n  }\r\n  function mySidebar() {\r\n    // alert(\"hi\");\r\n    var menu = document.querySelector(\".sidebar-mini\"); // Using a class instead, see note below.\r\n    menu.classList.toggle(\"sidebar-collapse\");\r\n  }\r\n\r\n  // extract pathname from location\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <React.Fragment>\r\n      {/* LEFT SIDEBAR MENU START */}\r\n      <aside className=\"main-sidebar sidebar-no-expand elevation-4\">\r\n        <div className=\"sidebar\">\r\n          <nav className=\"\" style={{ marginTop: \"82px\" }}>\r\n            <ul\r\n              className=\"nav nav-pills nav-sidebar flex-column\"\r\n              role=\"menu\"\r\n              data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link button-left\"\r\n                  role=\"button\"\r\n                  id=\"sidebar-toggle\"\r\n                  onClick={mySidebar}\r\n                >\r\n                  <i className=\"nav-icon fa fa-fw fa-bars\" />\r\n                  <p />\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/dashboard\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  exact\r\n                >\r\n                  <i className=\"nav-icon fas fa-border-all\" />\r\n                  <p>Dashboard</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/user-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/user-list-view\",\r\n                      \"/create-user\",\r\n                      \"/user-detail-view\",\r\n                      \"/update-user\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-plus-square\"></i>\r\n                  <p>Create User</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/institute-list-view\"\r\n                  className=\"nav-link dropbtn\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/institute-list-view\", \"/institute-create\"].includes(\r\n                      pathname\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-edit\" />\r\n                  <p>Registration</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-list-view\"\r\n                  className=\"nav-link dropbtn\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\"/package-list-view\", \"/package-create\"].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-copy\" />\r\n                  <p>Package System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/package-history\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                >\r\n                  <i className=\"nav-icon fas fa-history\"></i>\r\n                  <p>Package History</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/billing-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/billing-list-view\",\r\n                      \"/create-bill\",\r\n                      \"/billing-invoice-view\",\r\n                      \"/update-bill\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-alt\" />\r\n                  <p>Billing System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/payment-list-view\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/payment-list-view\",\r\n                      \"/payment-approve\",\r\n                      \"/payment-history-view\",\r\n                      \"/inst-payment-history\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-file-powerpoint\" />\r\n                  <p>Payment System</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/email\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() => [\"/email\"].includes(pathname)}\r\n                >\r\n                  <i className=\"nav-icon far fa-envelope\"></i>\r\n                  <p>Email</p>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to=\"/settings\"\r\n                  className=\"nav-link\"\r\n                  activeclassname=\"active\"\r\n                  isActive={() =>\r\n                    [\r\n                      \"/settings\",\r\n                      \"/create-user-type\",\r\n                      \"/view-user-type\",\r\n                      \"/edit-user-type\",\r\n                      \"/add-new-pkg-item\",\r\n                      \"/edit-new-pkg-item\",\r\n                      \"/add-new-inst-type\",\r\n                      \"/edit-new-inst-type\",\r\n                    ].includes(pathname)\r\n                  }\r\n                >\r\n                  <i className=\"nav-icon far fa-sun\" />\r\n                  <p>Settings</p>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </aside>\r\n      {/* LEFT SIDEBAR MENU END */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport Sidebar from \"../Layout/Sidebar\";\r\nimport { ProfileProvider } from \"../../ProfileContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          if (localStorage.getItem(\"token\")) {\r\n            return (\r\n              <ProfileProvider>\r\n                <div>\r\n                  <Navbar />\r\n                  <Sidebar />\r\n                  <Component {...props} />\r\n                </div>\r\n              </ProfileProvider>\r\n            );\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: {\r\n                    from: props.location,\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreatePackage() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let history = useHistory();\r\n  // POST PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      package: {\r\n        title: data.packageTitle,\r\n        description: data.packageDescription,\r\n        display: data.display,\r\n        type: \"default\",\r\n      },\r\n      parameters: pkgParamList,\r\n    };\r\n    // console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n    postData(packageData);\r\n    async function postData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-save\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      // console.log(\"PACKAGE DATA---\" + JSON.stringify(packageData));\r\n      const savePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"savePkgApiResp - \" + savePkgApiResp.data);\r\n      if (savePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Created Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(savePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // POST PACKAGE DATA -END\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setPkgParamList([...pkgParamList, { name: \"\", price: \"\", quantity: \"\" }]);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER END*/\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create a Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create package form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"packageTitle\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.packageTitle && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Description\r\n                                </label>\r\n                                <br />\r\n                                <textarea\r\n                                  className=\"form-control\"\r\n                                  name=\"packageDescription\"\r\n                                  ref={register({ required: true })}\r\n                                  rows=\"1\"\r\n                                  cols=\"30\"\r\n                                ></textarea>\r\n                                {errors.packageDescription && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-4\">\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Is Package Display on Front-end ?\r\n                                </label>\r\n                                <br />\r\n                                <div className=\"d-flex flex-sm-row flex-column\">\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      type=\"radio\"\r\n                                      className=\"mr-2\"\r\n                                      value=\"On\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    On\r\n                                  </div>\r\n                                  <div className=\"p-2\">\r\n                                    <input\r\n                                      name=\"display\"\r\n                                      className=\"mr-2\"\r\n                                      type=\"radio\"\r\n                                      value=\"Off\"\r\n                                      ref={register({ required: true })}\r\n                                    />\r\n                                    Off\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {errors.display && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                                <span\r\n                                  onClick={handleAddClick}\r\n                                  title=\"Add New Parameter\"\r\n                                  className=\"shadow round-plus float-right badge badge-bg mb-3\"\r\n                                  style={{ padding: \"10px 24px\" }}\r\n                                >\r\n                                  <i className=\"fas fa-plus\"></i>\r\n                                </span>\r\n                              </label>\r\n                              <br />\r\n                              {pkgParamList.map((x, i) => {\r\n                                return (\r\n                                  <div className=\"row\" key={i}>\r\n                                    <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        name=\"name\"\r\n                                        value={x.name}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(e, i)\r\n                                        }\r\n                                        placeholder=\"Title\"\r\n                                        required\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      {errors.name && (\r\n                                        <ErrorMsg>\r\n                                          * This Field is Required\r\n                                        </ErrorMsg>\r\n                                      )}\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        name=\"price\"\r\n                                        value={x.price}\r\n                                        min=\"0\"\r\n                                        required\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(e, i)\r\n                                        }\r\n                                        placeholder=\"Price\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      {errors.price && (\r\n                                        <ErrorMsg>\r\n                                          * This Field is Required\r\n                                        </ErrorMsg>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        name=\"quantity\"\r\n                                        value={x.quantity}\r\n                                        min=\"0\"\r\n                                        required\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(e, i)\r\n                                        }\r\n                                        placeholder=\"Quantity\"\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      {errors.quantity && (\r\n                                        <ErrorMsg>\r\n                                          * This Field is Required\r\n                                        </ErrorMsg>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2\">\r\n                                      {i === 0 ? null : (\r\n                                        <span\r\n                                          onClick={() => handleRemoveClick(i)}\r\n                                          title=\"Delete\"\r\n                                          className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                          style={{ padding: \"10px 24px\" }}\r\n                                        >\r\n                                          <i className=\"fas fa-minus\"></i>\r\n                                        </span>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create package form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\n\r\nexport default function Datatable({ data }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Package Type</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"type\"].charAt(0).toUpperCase() + row[\"type\"].slice(1)}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"display\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() => history.push(`/package-details/${row[\"id\"]}`)}\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() => history.push(`/package-edit/${row[\"id\"]}`)}\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport DatatablePkgList from \"./DatatablePkgList\";\r\nexport default function PackageListView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      let allPkgApiResp = await trackPromise(axios(config));\r\n      allPkgApiResp = allPkgApiResp.data.msg.reverse();\r\n      // console.log(\"allPkgApiResp - \" + JSON.stringify(allPkgApiResp));\r\n      // formatObject(allPkgApiResp);\r\n      setData(allPkgApiResp);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.type.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package List</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/package-create\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Create Package\"\r\n                            >\r\n                              <i className=\"fas fa-plus add-button-icon\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Datatable({ data }) {\r\n  // console.log(\"Params: \" + JSON.stringify(data));\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Title</th>\r\n            <th className=\"inst-list-th text-center\">Quantity</th>\r\n            <th className=\"inst-list-th text-center\">Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"name\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"quantity\"]}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"price\"]}</td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td className=\"inst-list-td text-center\"></td>\r\n            <td className=\"inst-list-td text-center\">\r\n              <b>Total</b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all quantity */}\r\n              <b>\r\n                {data.reduce(\r\n                  (a, b) => parseInt(a) + parseInt(b[\"quantity\"] || 0),\r\n                  0\r\n                )}\r\n              </b>\r\n            </td>\r\n            <td className=\"inst-list-td text-center\">\r\n              {/* sum of all price */}\r\n              <b>\r\n                {data\r\n                  .reduce(\r\n                    (a, b) => parseFloat(a) + parseFloat(b[\"price\"] || 0),\r\n                    0\r\n                  )\r\n                  .toFixed(2)}\r\n              </b>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\nimport DatatableParams from \"./DatatableParams\";\r\nexport default function PackageDetails() {\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: id },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg);\r\n      setPackageDetail(pkgDetailApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  let history = useHistory();\r\n  //package delete\r\n  async function deletePackage(packageId, packageType) {\r\n    if (packageType === \"custom\") {\r\n      toast(\"First Delete Institute. Then Delete Custom Package\", {\r\n        className: \"toast-error\",\r\n      });\r\n    } else {\r\n      // console.log(\"package id: \" + packageId);\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"delete\",\r\n        url: `/package-delete/${packageId}`,\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const deletePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"deletePkgApiResp - \" + deletePkgApiResp.data);\r\n      if (deletePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Deleted Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(deletePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Package Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    {/* /.card-header */}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"tab-content\">\r\n                        <div className=\"active tab-pane\" id=\"activity\">\r\n                          {/* Post */}\r\n                          <div className=\"post\">\r\n                            <table className=\"table table-borderless table-responsive table-font-100\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">Title</td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.title}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Description\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.description}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Display\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.display}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"pt-0 pb-0 text-left\">\r\n                                    Package Type\r\n                                  </td>\r\n                                  <td className=\"pt-0 pb-0 pl-0 text-left\">\r\n                                    : {packageDetail.type}\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            {packageDetail.params ? (\r\n                              <DatatableParams data={packageDetail.params} />\r\n                            ) : null}\r\n\r\n                            {/* <div className=\"text-center\">\r\n                              <button\r\n                                className=\"btn btn-update mt-2 mb-2\"\r\n                                onClick={() =>\r\n                                  deletePackage(\r\n                                    packageDetail.id,\r\n                                    packageDetail.type\r\n                                  )\r\n                                }\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div> */}\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.card-body */}\r\n\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function PackageEdit() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //GET PACKAGE DATA -START\r\n  const [pkgData, setPkgData] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { package_id: id },\r\n      };\r\n\r\n      const pkgApiResp = await trackPromise(axios(config));\r\n      //   console.log(\"pkgApiResp - \" + JSON.stringify(pkgApiResp.data.msg.params));\r\n      setPkgData(pkgApiResp.data.msg);\r\n      setSelectedOption(pkgApiResp.data.msg.display); // set initial value for radio button display\r\n    }\r\n    fetchData();\r\n  }, [id]);\r\n  //GET PACKAGE DATA -END\r\n\r\n  let history = useHistory();\r\n  // UPDATE PACKAGE DATA -START\r\n  const onSubmit = (data) => {\r\n    //seperate package vlaues from data object start\r\n    const packageData = {\r\n      id: id,\r\n      title: data.packageTitle,\r\n      description: data.packageDescription,\r\n      display: data.display,\r\n    };\r\n    //console.log(\"Package Data: \" + JSON.stringify(packageData));\r\n    //seperate package vlaues from data object end\r\n\r\n    updatePkgData(packageData);\r\n    async function updatePkgData(packageData) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: packageData,\r\n      };\r\n      const updatePkgApiResp = await trackPromise(axios(config));\r\n      //console.log(\"updatePkgApiResp - \" + updatePkgApiResp.data);\r\n      if (updatePkgApiResp.data.status === \"ok\") {\r\n        toast(\"Package Updated Successfully\", {\r\n          className: \"toast-error\",\r\n        });\r\n        history.push(\"/package-list-view\");\r\n      } else {\r\n        toast(updatePkgApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // UPDATE PACKAGE DATA -END\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  // handle radio change\r\n  const handleRadioChange = (e) => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  /* PACKAGE PARAMETER START*/\r\n  const [pkgParamList, setPkgParamList] = useState([\r\n    { name: \"\", price: \"\", quantity: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...pkgParamList];\r\n    list[index][name] = value;\r\n    setPkgParamList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...pkgParamList];\r\n    list.splice(index, 1);\r\n    setPkgParamList(list);\r\n  };\r\n  /* PACKAGE PARAMETER END*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Package</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/package-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create institute form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Title\r\n                                  </label>\r\n                                  <br />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    defaultValue={pkgData.title}\r\n                                    className=\"form-control\"\r\n                                    name=\"packageTitle\"\r\n                                    ref={register({ required: true })}\r\n                                  />\r\n                                  {errors.packageTitle && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Description\r\n                                  </label>\r\n                                  <br />\r\n                                  <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"packageDescription\"\r\n                                    defaultValue={pkgData.description}\r\n                                    ref={register({ required: true })}\r\n                                    rows=\"1\"\r\n                                    cols=\"30\"\r\n                                  ></textarea>\r\n                                  {errors.packageDescription && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <div className=\"col-4\">\r\n                                  <label>\r\n                                    <span className=\"red-star\">*</span>\r\n                                    Package Display Front-end ?\r\n                                  </label>\r\n                                  <br />\r\n                                  <div className=\"d-flex flex-sm-row flex-column\">\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        type=\"radio\"\r\n                                        className=\"mr-2\"\r\n                                        checked={selectedOption === \"On\"}\r\n                                        value=\"On\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      On\r\n                                    </div>\r\n                                    <div className=\"p-2\">\r\n                                      <input\r\n                                        name=\"display\"\r\n                                        className=\"mr-2\"\r\n                                        type=\"radio\"\r\n                                        checked={selectedOption === \"Off\"}\r\n                                        value=\"Off\"\r\n                                        onChange={(e) => handleRadioChange(e)}\r\n                                        ref={register({ required: true })}\r\n                                      />\r\n                                      Off\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {errors.displayFrontend && (\r\n                                    <ErrorMsg>\r\n                                      * This Field is Required\r\n                                    </ErrorMsg>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* IF PACKAGE NAME IS SELECTED FROM DROPDOWN THEN SHOW READONLY FILED */}\r\n\r\n                            <div className=\"form-group\">\r\n                              <label>\r\n                                <span className=\"red-star\">*</span> Package\r\n                                Parameter\r\n                              </label>\r\n                              <br />\r\n                            </div>\r\n                            {pkgData.params\r\n                              ? pkgData.params.map((x, i) => {\r\n                                  return (\r\n                                    <div className=\"row\" key={i}>\r\n                                      <div className=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.name}\r\n                                          name=\"name\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.name && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.price}\r\n                                          name=\"price\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.price && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control mb-3\"\r\n                                          defaultValue={x.quantity}\r\n                                          name=\"quantity\"\r\n                                          onChange={(e) =>\r\n                                            handleInputChange(e, i)\r\n                                          }\r\n                                          required\r\n                                          ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.quantity && (\r\n                                          <ErrorMsg>\r\n                                            * This Field is Required\r\n                                          </ErrorMsg>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-sm-12 col-md-2 col-lg-2 col-xl-2 text-center\">\r\n                                        {i === 0 ? null : (\r\n                                          <span\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                            title=\"Delete This Package\"\r\n                                            className=\"shadow round-minus badge badge-bg mb-3\"\r\n                                            style={{ padding: \"10px 24px\" }}\r\n                                          >\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                              : null}\r\n\r\n                            {/* -------------------------------------------- */}\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create institute form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePkgHistoryList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Package Name</th>\r\n            <th className=\"inst-list-th text-center\">Description</th>\r\n            <th className=\"inst-list-th text-center\">Display</th>\r\n            <th className=\"inst-list-th text-center\">Created Date</th>\r\n            <th className=\"inst-list-th text-center\">Updated Date</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td\"> {row[\"title\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"description\"]}</td>\r\n              <td className=\"inst-list-td\"> {row[\"display\"]}</td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"created_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td className=\"inst-list-td\">\r\n                {Moment.utc(row[\"updated_at\"]).format(\"DD-MM-YYYY\")}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push(`/package-history-detail/${row[\"id\"]}`)\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePkgHistoryList from \"./DatatablePkgHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function PackageHistory() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchInstData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/all-packages\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg);\r\n      setData(allPkgApiResp.data.msg);\r\n    }\r\n    fetchInstData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.title.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.display.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.description.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.created_at.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.updated_at.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Package History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePkgHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nexport default function PackageHistoryDetail() {\r\n  //GET ALL PACKAGE NAME -START\r\n  const [packageDetail, setPackageDetail] = useState([]);\r\n  const [packageTitle, setPackageTitle] = useState(\"\");\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/package-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          package_id: id,\r\n        },\r\n      };\r\n\r\n      const pkgDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\"pkgDetailApiResp - \" + pkgDetailApiResp.data.msg.params);\r\n      setPackageTitle(pkgDetailApiResp.data.msg.title);\r\n      setPackageDetail(pkgDetailApiResp.data.msg.params);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n  //\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* PAGE CONTENT START */}\r\n      <div className=\"content-wrapper pt-3 pb-5\">\r\n        <div className=\"content\">\r\n          <div className=\"container-fluid layout-width\">\r\n            {/*  */}\r\n            {/* Content Start */}\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <h4 className=\"heading\">Package Parameter History</h4>\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <Link\r\n                      to=\"/package-history\"\r\n                      className=\"border ml-1 add-button shadow float-right\"\r\n                      title=\"Back\"\r\n                    >\r\n                      <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body p-0\">\r\n                    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                        <div className=\"col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                          <b>{packageTitle}</b>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover institute-table col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n                            <thead>\r\n                              <tr className=\"inst-list-heading\">\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  SL No.\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Name\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Quantity\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Price\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Created At\r\n                                </th>\r\n                                <th className=\"inst-list-th text-center\">\r\n                                  Updated At\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {packageDetail.map((row, index) => (\r\n                                <tr key={index}>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {index + 1}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"name\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"quantity\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\">\r\n                                    {row[\"price\"]}\r\n                                  </td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                  <td className=\"inst-list-td text-center\"></td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                        <LoadingIndicator />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function DatatableUserTypeList({ data }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">User Type</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"typename\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableUserTypeList from \"./DatatableUserTypeList\";\r\nexport default function UserPermission() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetUserTypeList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET USERTYPE LIST -END\r\n\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/create-user-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Create User Type\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableUserTypeList data={data} />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatablePackageSetup() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsPackageList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsPackageActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Items For Package</th>\r\n            <th className=\"inst-list-th text-center\">Number / Size</th>\r\n            <th className=\"inst-list-th text-center\">Amount / Value</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_item_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_number\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"package_amount\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-pkg-item\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePackageSetup from \"./DatatablePackageSetup\";\r\nexport default function PackageSetup() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-pkg-item\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatablePackageSetup />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DatatableInstType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [updateApi, setUpdateApi] = useState(false);\r\n  //GET USERTYPE LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetSettingsInstituteList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const userTypeApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"userTypeApiResp - \" + JSON.stringify(userTypeApiResp.data.data)\r\n      // );\r\n      setData(userTypeApiResp.data.data);\r\n      setUpdateApi(false);\r\n    }\r\n    fetchData();\r\n  }, [updateApi]);\r\n  //GET USERTYPE LIST -END\r\n\r\n  const history = useHistory();\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  function togglePackageStatus(id, status) {\r\n    // console.log(\"ID: \" + id + \"Status: \" + status);\r\n\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateSettingsInstituteActiveStatus\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status === \"1\" ? \"0\" : \"1\",\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Status ${status === \"1\" ? \"Disable\" : \"Enable\"} Successfully`, {\r\n          className: \"toast-error\",\r\n        });\r\n        setUpdateApi(true);\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Type Name</th>\r\n            <th className=\"inst-list-th text-center\">Short Form</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"short_form\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"active\"] === \"1\" ? \"Enable\" : \"Disable\"}\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Status\">\r\n                <i\r\n                  onClick={() => togglePackageStatus(row[\"id\"], row[\"active\"])}\r\n                  className={`fas ${\r\n                    row[\"active\"] === \"1\" ? \"fa-toggle-on\" : \"fa-toggle-off\"\r\n                  } action-icon`}\r\n                  style={{ fontSize: \"20px\" }}\r\n                ></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-new-inst-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstType from \"./DatatableInstType\";\r\nexport default function InstituteType() {\r\n  return (\r\n    <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n      <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n        <div className=\"d-flex float-left mb-3\">\r\n          <Link\r\n            to=\"/add-new-inst-type\"\r\n            className=\"border ml-1 add-button shadow\"\r\n            title=\"Add New Package Item\"\r\n          >\r\n            <i className=\"fas fa-plus add-button-icon\"></i>\r\n          </Link>\r\n        </div>\r\n        <DatatableInstType />\r\n        <LoadingIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport UserPermission from \"./UserPermission\";\r\nimport PackageSetup from \"./PackageSetup\";\r\nimport InstituteType from \"./InstituteType\";\r\n\r\nexport default function Settings() {\r\n  const [showUserPermission, setShowUserPermission] = useState(true);\r\n  const [showPackageSetup, setShowPackageSetup] = useState(false);\r\n  const [showInstituteType, setShowInstituteType] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Settings</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-md-3\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#F8F8F8\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showUserPermission ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(true);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-user pr-2 pl-3\"></i>User\r\n                              Permission\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showPackageSetup ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(true);\r\n                                setShowInstituteType(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-list-alt pr-2 pl-3\"></i>\r\n                              Package Setup\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInstituteType ? \"active\" : null\r\n                              }`}\r\n                              onClick={() => {\r\n                                setShowUserPermission(false);\r\n                                setShowPackageSetup(false);\r\n                                setShowInstituteType(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-university pr-2 pl-3\"></i>\r\n                              Institute Type\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-md-9\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showUserPermission ? <UserPermission /> : null}\r\n                            {showPackageSetup ? <PackageSetup /> : null}\r\n                            {showInstituteType ? <InstituteType /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function CreateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/CreateNewInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Bill Created Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [instituteName, setInstituteName] = useState(\"\");\r\n  const [billingAmount, setBillingAmount] = useState(\"\");\r\n  /*INSTITUTE ID DROPDOWN START */\r\n  const [instituteIdData, setInstituteIdData] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteIDs\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instIdApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instIdApiResp - \" + JSON.stringify(instIdApiResp.data.msg.data)\r\n      // );\r\n      setInstituteIdData(instIdApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //onchange institute id dropdown menu, institute name value will update -start\r\n  const ChangeInstName = (e) => {\r\n    //setUser({ ...user, division: e.target.value });\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"data-id\");\r\n    //console.log(\"id: \" + id);\r\n\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-detail\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: { institute_id: id },\r\n      };\r\n\r\n      const instDetailApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instDetailApiResp - \" + JSON.stringify(instDetailApiResp.data.msg)\r\n      // );\r\n      setInstituteName(instDetailApiResp.data.msg.name);\r\n      setBillingAmount(instDetailApiResp.data.msg.payment_amount);\r\n    }\r\n    fetchData();\r\n  };\r\n  //onchange institute id dropdown menu, institute name value will update -end\r\n  /*INSTITUTE ID DROPDOWN END */\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        {/* institute id */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute ID\r\n            </label>\r\n            <br />\r\n            {instituteIdData.length === 0 ? null : (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"institute_id\"\r\n                name=\"institute_id\"\r\n                defaultValue=\"--Select Institute ID--\"\r\n                onChange={(e) => ChangeInstName(e)}\r\n                ref={register({ required: true })}\r\n              >\r\n                <option defaultValue hidden>\r\n                  --Select Institute ID--\r\n                </option>\r\n                {/* FOR SORTING ASCENDING ORDER ->  .sort((a, b) => a.name.localeCompare(b.name)) */}\r\n                {instituteIdData\r\n                  .sort((a, b) => a.institute_id.localeCompare(b.institute_id))\r\n                  .map((e, key) => {\r\n                    return (\r\n                      <option key={key} data-id={e.id} value={e.institute_id}>\r\n                        {e.institute_id}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            )}\r\n            {errors.institute_id && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* institute name */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Institute Name\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              defaultValue={instituteName}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.institute_name && (\r\n              <ErrorMsg>* This Field is Required</ErrorMsg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* billing month */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* billing year */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              ref={register({ required: true })}\r\n            >\r\n              <option hidden defaultValue>\r\n                ---Select---\r\n              </option>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n              <option value=\"2031\">2031</option>\r\n              <option value=\"2032\">2032</option>\r\n              <option value=\"2033\">2033</option>\r\n              <option value=\"2034\">2034</option>\r\n              <option value=\"2035\">2035</option>\r\n              <option value=\"2036\">2036</option>\r\n              <option value=\"2037\">2037</option>\r\n              <option value=\"2038\">2038</option>\r\n              <option value=\"2039\">2039</option>\r\n              <option value=\"2040\">2040</option>\r\n              <option value=\"2041\">2041</option>\r\n              <option value=\"2042\">2042</option>\r\n              <option value=\"2043\">2043</option>\r\n              <option value=\"2044\">2044</option>\r\n              <option value=\"2045\">2045</option>\r\n              <option value=\"2046\">2046</option>\r\n              <option value=\"2047\">2047</option>\r\n              <option value=\"2048\">2048</option>\r\n              <option value=\"2049\">2049</option>\r\n              <option value=\"2050\">2050</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n        {/* Billing Amount */}\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              readOnly\r\n              defaultValue={billingAmount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[+]?\\d+([.]\\d+)?$/,\r\n                  message: \"* Please Enter Positive Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Bill Generate\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateBillForm from \"./CreateBillForm\";\r\nexport default function CreateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Generate Bill</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <CreateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UpdateBillForm() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    const userEmail = localStorage.getItem(\"emailAddress\");\r\n    data[\"generated_by\"] = userEmail;\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateInvoice\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"/billing-list-view\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n      setMonth(invoiceApiResp.data.msg.month);\r\n      setYear(invoiceApiResp.data.msg.year);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      {/* create form general info start */}\r\n      <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute ID</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_id\"\r\n              readOnly\r\n              defaultValue={data.institute_id}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>Institute Name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"institute_name\"\r\n              readOnly\r\n              defaultValue={data.institute_name}\r\n              ref={register({ required: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Month\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"month\"\r\n              value={month}\r\n              onChange={(e) => setMonth(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"January\">January</option>\r\n              <option value=\"February\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"August\">August</option>\r\n              <option value=\"September\">September</option>\r\n              <option value=\"October\">October</option>\r\n              <option value=\"November\">November</option>\r\n              <option value=\"December\">December</option>\r\n            </select>\r\n            {errors.month && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Year\r\n            </label>\r\n            <br />\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"year\"\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2021\">2021</option>\r\n              <option value=\"2022\">2022</option>\r\n              <option value=\"2023\">2023</option>\r\n              <option value=\"2024\">2024</option>\r\n              <option value=\"2025\">2025</option>\r\n              <option value=\"2026\">2026</option>\r\n              <option value=\"2027\">2027</option>\r\n              <option value=\"2028\">2028</option>\r\n              <option value=\"2029\">2029</option>\r\n              <option value=\"2030\">2030</option>\r\n            </select>\r\n            {errors.year && <ErrorMsg>* This Field is Required</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <label>\r\n              <span className=\"red-star\">*</span>Billing Amount\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              defaultValue={data.amount}\r\n              ref={register({\r\n                required: \"* This Field is Required\",\r\n                pattern: {\r\n                  value: /^[1-9]\\d*$/,\r\n                  message: \"* Please Enter Number\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.amount && <ErrorMsg>{errors.amount.message}</ErrorMsg>}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-update\">\r\n          Update\r\n        </button>\r\n      </form>\r\n      {/* create form general info end */}\r\n      <LoadingIndicator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UpdateBillForm from \"./UpdateBillForm\";\r\nexport default function UpdateBill() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Create start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Billing Info</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <UpdateBillForm />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile create end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableBillingList({ data }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Bill Generate Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"3\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"created_at\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/update-bill\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-edit action-icon\"></i>\r\n              </td>\r\n              <td className=\"inst-list-td text-center action\" title=\"Send Bill\">\r\n                <Link to=\"#\">\r\n                  <i className=\"far fa-share-square  action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import PaginationComponent from \"../Pagination/PaginationComponent\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nexport default function DatatableBillingHistoryList() {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Approved\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Amount</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentData.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"month\"]}-{row[\"year\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{row[\"amount\"]}</td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/billing-invoice-view\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        total={totalItems}\r\n        itemsPerPage={ITEMS_PER_PAGE}\r\n        currentPage={currentPage}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableBillingList from \"./DatatableBillingList\";\r\nimport DatatableBillingHistoryList from \"./DatatableBillingHistoryList\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\nexport default function BillingListView() {\r\n  const [data, setData] = useState([]);\r\n  //GET ALL BILLING LIST -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInvoiceList\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const billingListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"billingListApiResp - \" +\r\n      //     JSON.stringify(billingListApiResp.data.msg.data)\r\n      // );\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  START*/\r\n      let jsObjects = billingListApiResp.data.msg.data;\r\n      let result = jsObjects.filter((obj) => {\r\n        return obj.status === \"Pending\";\r\n      });\r\n      //console.log(result);\r\n      /*BILLING STATUS FILTER BY INVOICE STATUS == PENDING  END*/\r\n\r\n      setData(result);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL BILLING LIST -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Billing Information</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/* start here */}\r\n                  <div className=\"card card-primary card-outline card-outline-tabs\">\r\n                    <div className=\"card-header p-0 border-bottom-0\">\r\n                      <ul\r\n                        className=\"nav nav-tabs\"\r\n                        id=\"custom-tabs-four-tab\"\r\n                        role=\"tablist\"\r\n                      >\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link active\"\r\n                            id=\"custom-tabs-four-home-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-home\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-home\"\r\n                            aria-selected=\"true\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice List\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a\r\n                            className=\"nav-link\"\r\n                            id=\"custom-tabs-four-profile-tab\"\r\n                            data-toggle=\"pill\"\r\n                            href=\"#custom-tabs-four-profile\"\r\n                            role=\"tab\"\r\n                            aria-controls=\"custom-tabs-four-profile\"\r\n                            aria-selected=\"false\"\r\n                          >\r\n                            <span className=\"border-bottom-red\">\r\n                              Invoice History\r\n                            </span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div\r\n                        className=\"tab-content\"\r\n                        id=\"custom-tabs-four-tabContent\"\r\n                      >\r\n                        <div\r\n                          className=\"tab-pane fade show active\"\r\n                          id=\"custom-tabs-four-home\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-home-tab\"\r\n                        >\r\n                          {/* 1st content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-left mb-3\">\r\n                                <Link\r\n                                  to=\"/create-bill\"\r\n                                  className=\"border ml-1 add-button shadow\"\r\n                                  title=\"Create Bill\"\r\n                                >\r\n                                  <i className=\"fas fa-plus add-button-icon\"></i>\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  value={search}\r\n                                  onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                    setCurrentPage(1);\r\n                                  }}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingList data={currentData} />\r\n                              <PaginationComponent\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={(page) => setCurrentPage(page)}\r\n                              />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"tab-pane fade\"\r\n                          id=\"custom-tabs-four-profile\"\r\n                          role=\"tabpanel\"\r\n                          aria-labelledby=\"custom-tabs-four-profile-tab\"\r\n                        >\r\n                          {/* 2nd content here */}\r\n                          <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex float-right mb-3\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"inst-list-search\"\r\n                                  //value={q}\r\n                                  //onChange={(e) => setQ(e.target.value)}\r\n                                />\r\n                                <div className=\"border ml-1 inst-list-search-div\">\r\n                                  <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <DatatableBillingHistoryList />\r\n                              <LoadingIndicator />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nexport default function BillingInvoiceView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET INVOICE -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg)\r\n      // );\r\n      setData(invoiceApiResp.data.msg);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET INVOICE -END\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Invoice Details</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/billing-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Invoice ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.institute_name}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.month}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.year}\r\n                                </td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Amount\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  {data.amount}\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentList({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Payment Document</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Payment Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* CODE WILL COPY FROM DATATABLE INST LIST */}\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">1</td>\r\n            <td className=\"inst-list-td  text-center\">01FA5WE99874D</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-BRAC-102</td>\r\n            <td className=\"inst-list-td  text-center\">Brac University</td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">September-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Pending</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"inst-list-td  text-center\">2</td>\r\n            <td className=\"inst-list-td  text-center\">45DFS8554G85SD</td>\r\n            <td className=\"inst-list-td  text-center\">UNIV-NSU-420</td>\r\n            <td className=\"inst-list-td  text-center\">\r\n              North South University\r\n            </td>\r\n            <td className=\"inst-list-td  text-center\">File.pdf</td>\r\n            <td className=\"inst-list-td  text-center\">October-2020</td>\r\n            <td className=\"inst-list-td  text-center\">12/12/20</td>\r\n            <td className=\"inst-list-td  text-center\">Approved</td>\r\n            <td\r\n              className=\"inst-list-td text-center action\"\r\n              title=\"View Details\"\r\n            >\r\n              <Link to=\"/payment-approve\">\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentList from \"./DatatablePaymentList\";\r\nexport default function PaymentListView() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Payment Information</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <Link\r\n                              to=\"/payment-history-view\"\r\n                              className=\"border ml-1 add-button shadow\"\r\n                              title=\"Payment History\"\r\n                            >\r\n                              <i className=\"add-button-icon fas fa-history\"></i>\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={q}\r\n                              onChange={(e) => setQ(e.target.value)}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentList data={search(data)} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatablePaymentHistoryList({ data }) {\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Institute ID</th>\r\n            <th className=\"inst-list-th text-center\">Institute Name</th>\r\n            <th className=\"inst-list-th text-center\">Contact</th>\r\n            <th className=\"inst-list-th text-center\">Email</th>\r\n            <th className=\"inst-list-th text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_id\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"institute_name\"]}\r\n              </td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n              >\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/inst-payment-history\",\r\n                    state: { institute_id_string: row[\"institute_id\"] },\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-eye action-icon\"></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatablePaymentHistoryList from \"./DatatablePaymentHistoryList\";\r\nexport default function PaymentHistoryView() {\r\n  const [data, setData] = useState([]);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/GetAllInstituteListWithInvoice\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const instListApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"instListApiResp - \" + JSON.stringify(instListApiResp.data.msg.data)\r\n      // );\r\n      setData(instListApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Payment History</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatablePaymentHistoryList data={currentData} />\r\n                          <PaginationComponent\r\n                            total={totalItems}\r\n                            itemsPerPage={ITEMS_PER_PAGE}\r\n                            currentPage={currentPage}\r\n                            onPageChange={(page) => setCurrentPage(page)}\r\n                          />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { toast } from \"react-toastify\";\r\nimport Moment from \"moment\";\r\nexport default function DatatableInstPaymentHistory({ data }) {\r\n  //pagination\r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    // console.log(start, end);\r\n    setPagination({ start: start, end: end });\r\n  };\r\n\r\n  /*TOGGLE INSTITUTE STATUS START*/\r\n  const [isActive, setisActive] = useState(false);\r\n  let status;\r\n  function toggleInstStatus(id) {\r\n    setisActive(isActive ? false : true);\r\n    isActive ? (status = 1) : (status = 0);\r\n    // console.log(\"STATUS: \" + id);\r\n    postData(id, status);\r\n    async function postData(id, status) {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      //alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/institute-status-update\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          id: id,\r\n          active: status,\r\n        },\r\n      };\r\n      const instStatusApiResp = await trackPromise(axios(config));\r\n      //console.log(\"instStatusApiResp - \" + instStatusApiResp.data);\r\n      if (instStatusApiResp.data.status === \"ok\") {\r\n        toast(`Institute Status ${status ? \"Active\" : \"Inactive\"}`, {\r\n          className: \"toast-error\",\r\n        });\r\n      } else {\r\n        toast(instStatusApiResp.data.msg, {\r\n          className: \"toast-error\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  /*TOGGLE INSTITUTE STATUS END*/\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">SL No.</th>\r\n            <th className=\"inst-list-th text-center\">Invoice Number</th>\r\n            <th className=\"inst-list-th text-center\">Initial Doc Attachment</th>\r\n            <th className=\"inst-list-th text-center\">Billing Month</th>\r\n            <th className=\"inst-list-th text-center\">Billing Year</th>\r\n            <th className=\"inst-list-th text-center\">Submitted Date</th>\r\n            <th className=\"inst-list-th text-center\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">{index + 1}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"id\"]}</td>\r\n              <td className=\"inst-list-td text-center\">-</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"month\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"year\"]}</td>\r\n              <td className=\"inst-list-td text-center\"></td>\r\n              <td className=\"inst-list-td text-center\">{row[\"status\"]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function InstPaymentHistory() {\r\n  const [data, setData] = useState([]);\r\n  const [instData, setInstData] = useState([]);\r\n\r\n  const location = useLocation();\r\n  //console.log(location);\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetAllInvoicesSingleInstitute\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          institute_id_string: location.state.institute_id_string,\r\n        },\r\n      };\r\n\r\n      const invoiceApiResp = await trackPromise(axios(config));\r\n      // console.log(\r\n      //   \"invoiceApiResp - \" + JSON.stringify(invoiceApiResp.data.msg.details)\r\n      // );\r\n\r\n      setInstData(invoiceApiResp.data.msg.details);\r\n      setData(invoiceApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  /*SEARCH AND PAGINATION CODE START*/\r\n  const [search, setSearch] = useState(\"\");\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ITEMS_PER_PAGE = 20;\r\n\r\n  const currentData = useMemo(() => {\r\n    let computedData = data; //data = response data\r\n\r\n    /*SEARCH CODE START */\r\n    if (search) {\r\n      computedData = computedData.filter(\r\n        (d) =>\r\n          d.id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_id.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.institute_name.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.month.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.year.toLowerCase().includes(search.toLowerCase()) ||\r\n          d.amount.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    /*SEARCH CODE END */\r\n\r\n    setTotalItems(computedData.length);\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [data, currentPage, search]);\r\n  //console.log(\"totalItems \" + totalItems);\r\n  /*SEARCH AND PAGINATION CODE END*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <h4 className=\"heading\">Institute Payment History</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0\">\r\n                                  {instData.institute_id}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Institute Name</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.name}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0\">Contact</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.phone}</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0\">Email</td>\r\n                                <td className=\"pl-0 pr-0\">{instData.email}</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-right mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"inst-list-search\"\r\n                              value={search}\r\n                              onChange={(e) => {\r\n                                setSearch(e.target.value);\r\n                                setCurrentPage(1);\r\n                              }}\r\n                            />\r\n                            <div className=\"border ml-1 inst-list-search-div\">\r\n                              <i className=\"fas fa-search serach-icon-inst-list\"></i>\r\n                            </div>\r\n                          </div>\r\n                          <DatatableInstPaymentHistory data={currentData} />\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport DatatableInstPaymentHistory from \"./DatatableInstPaymentHistory\";\r\nexport default function PaymentApprove() {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  //GET ALL PACKAGE NAME -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"get\",\r\n        url: \"/institutes\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      const allPkgApiResp = await trackPromise(axios(config));\r\n      // console.log(\"allPkgApiResp - \" + allPkgApiResp.data.msg.data);\r\n      setData(allPkgApiResp.data.msg.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET ALL PACKAGE NAME -END\r\n\r\n  //search\r\n  function search(rows) {\r\n    const columns = rows[0] && Object.keys(rows[0]);\r\n\r\n    return rows.filter((row) =>\r\n      columns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/*  */}\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Approve Payment</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/payment-list-view\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          <table className=\"table table-sm table-borderless table-responsive table-font-100\">\r\n                            <tbody className=\"p-0 m-0\">\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Institute ID</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  UNIV-BRAC-102\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Institute Name\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">\r\n                                  Brac University\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">\r\n                                  Billing Month\r\n                                </td>\r\n                                <td className=\"pl-0 pr-0 text-left\">January</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td className=\"pl-0 text-left\">Billing Year</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">2020</td>\r\n                              </tr>\r\n                              <tr className=\"bottom-border\">\r\n                                <td className=\"pl-0 text-left\">Initial Doc</td>\r\n                                <td className=\"pl-0 pr-0 text-left\">Pay.pdf</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div className=\"d-flex float-left mb-3\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Approve\r\n                            </button>\r\n                          </div>\r\n                          <LoadingIndicator />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function CreateUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (data) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"active\"] = \"1\";\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/CreateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Created Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Create User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Create\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function ViewUserType() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      // console.log(\"response - \" + response.data.msg);\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">View User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          <form className=\"mt-4\">\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>{data.typename}</label>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        readOnly\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </form>\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditUserType() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [permissionError, setPermissionError] = useState(false);\r\n\r\n  let accessToken = localStorage.getItem(\"token\");\r\n  //alert(accessToken);\r\n  accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n  let history = useHistory();\r\n\r\n  // POST ROLE & PERMISSION DATA -START\r\n  const onSubmit = (/*data*/) => {\r\n    //console.log(JSON.stringify(data));\r\n    // console.log(\"user value- \" + user);\r\n    // console.log(\"institute value- \" + institute);\r\n    // console.log(\"package value- \" + pkg);\r\n    // console.log(\"bill value- \" + bill);\r\n    // console.log(\"payment value- \" + payment);\r\n\r\n    if (\r\n      user === \"0000\" &&\r\n      institute === \"0000\" &&\r\n      pkg === \"0000\" &&\r\n      bill === \"0000\" &&\r\n      payment === \"0000\"\r\n    ) {\r\n      setPermissionError(true);\r\n    } else {\r\n      setPermissionError(false);\r\n      data[\"user\"] = user;\r\n      data[\"institute\"] = institute;\r\n      data[\"package\"] = pkg;\r\n      data[\"bill\"] = bill;\r\n      data[\"payment\"] = payment;\r\n\r\n      //console.log(JSON.stringify(data));\r\n\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/UpdateUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      trackPromise(\r\n        axios(config).then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n          if (response.data.status === \"ok\") {\r\n            toast(\"Permission Updated Successfully\", {\r\n              className: \"toast-error\",\r\n            });\r\n            history.push(\"/settings\");\r\n          } else {\r\n            toast(response.data.msg, {\r\n              className: \"toast-error\",\r\n            });\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // POST ROLE & PERMISSION DATA -END\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"0000\");\r\n  const [institute, setInstitute] = useState(\"0000\");\r\n  const [pkg, setPkg] = useState(\"0000\");\r\n  const [bill, setBill] = useState(\"0000\");\r\n  const [payment, setPayment] = useState(\"0000\");\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/ViewSingleUserType\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.msg));\r\n      setData(response.data.msg);\r\n      setUser(response.data.msg.user);\r\n      setInstitute(response.data.msg.institute);\r\n      setPkg(response.data.msg.package);\r\n      setBill(response.data.msg.bill);\r\n      setPayment(response.data.msg.payment);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n  }\r\n\r\n  /*USER PERMISSION START */\r\n  function toggleUserCreate() {\r\n    user.charAt(0) === \"1\"\r\n      ? setUser(setCharAt(user, 0, \"0\"))\r\n      : setUser(setCharAt(user, 0, \"1\"));\r\n  }\r\n  function toggleUserView() {\r\n    user.charAt(1) === \"1\"\r\n      ? setUser(setCharAt(user, 1, \"0\"))\r\n      : setUser(setCharAt(user, 1, \"1\"));\r\n  }\r\n  function toggleUserUpdate() {\r\n    user.charAt(2) === \"1\"\r\n      ? setUser(setCharAt(user, 2, \"0\"))\r\n      : setUser(setCharAt(user, 2, \"1\"));\r\n  }\r\n  function toggleUserDelete() {\r\n    user.charAt(3) === \"1\"\r\n      ? setUser(setCharAt(user, 3, \"0\"))\r\n      : setUser(setCharAt(user, 3, \"1\"));\r\n  }\r\n  function toggleUserAll() {\r\n    user === \"1111\" ? setUser(\"0000\") : setUser(\"1111\");\r\n  }\r\n  /*USER PERMISSION END */\r\n\r\n  /*INSTITUTE PERMISSION START */\r\n  function toggleInstCreate() {\r\n    institute.charAt(0) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 0, \"0\"))\r\n      : setInstitute(setCharAt(institute, 0, \"1\"));\r\n  }\r\n  function toggleInstView() {\r\n    institute.charAt(1) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 1, \"0\"))\r\n      : setInstitute(setCharAt(institute, 1, \"1\"));\r\n  }\r\n  function toggleInstUpdate() {\r\n    institute.charAt(2) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 2, \"0\"))\r\n      : setInstitute(setCharAt(institute, 2, \"1\"));\r\n  }\r\n  function toggleInstDelete() {\r\n    institute.charAt(3) === \"1\"\r\n      ? setInstitute(setCharAt(institute, 3, \"0\"))\r\n      : setInstitute(setCharAt(institute, 3, \"1\"));\r\n  }\r\n  function toggleInstAll() {\r\n    institute === \"1111\" ? setInstitute(\"0000\") : setInstitute(\"1111\");\r\n  }\r\n  /*INSTITUTE PERMISSION END */\r\n\r\n  /*PACKAGE PERMISSION START */\r\n  function togglePkgCreate() {\r\n    pkg.charAt(0) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 0, \"0\"))\r\n      : setPkg(setCharAt(pkg, 0, \"1\"));\r\n  }\r\n  function togglePkgView() {\r\n    pkg.charAt(1) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 1, \"0\"))\r\n      : setPkg(setCharAt(pkg, 1, \"1\"));\r\n  }\r\n  function togglePkgUpdate() {\r\n    pkg.charAt(2) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 2, \"0\"))\r\n      : setPkg(setCharAt(pkg, 2, \"1\"));\r\n  }\r\n  function togglePkgDelete() {\r\n    pkg.charAt(3) === \"1\"\r\n      ? setPkg(setCharAt(pkg, 3, \"0\"))\r\n      : setPkg(setCharAt(pkg, 3, \"1\"));\r\n  }\r\n  function togglePkgAll() {\r\n    pkg === \"1111\" ? setPkg(\"0000\") : setPkg(\"1111\");\r\n  }\r\n  /*PACKAGE PERMISSION END */\r\n\r\n  /*BILL PERMISSION START */\r\n  function toggleBillCreate() {\r\n    bill.charAt(0) === \"1\"\r\n      ? setBill(setCharAt(bill, 0, \"0\"))\r\n      : setBill(setCharAt(bill, 0, \"1\"));\r\n  }\r\n  function toggleBillView() {\r\n    bill.charAt(1) === \"1\"\r\n      ? setBill(setCharAt(bill, 1, \"0\"))\r\n      : setBill(setCharAt(bill, 1, \"1\"));\r\n  }\r\n  function toggleBillUpdate() {\r\n    bill.charAt(2) === \"1\"\r\n      ? setBill(setCharAt(bill, 2, \"0\"))\r\n      : setBill(setCharAt(bill, 2, \"1\"));\r\n  }\r\n  function toggleBillDelete() {\r\n    bill.charAt(3) === \"1\"\r\n      ? setBill(setCharAt(bill, 3, \"0\"))\r\n      : setBill(setCharAt(bill, 3, \"1\"));\r\n  }\r\n  function toggleBillAll() {\r\n    bill === \"1111\" ? setBill(\"0000\") : setBill(\"1111\");\r\n  }\r\n  /*BILL PERMISSION END */\r\n\r\n  /*PAYMENT PERMISSION START */\r\n  function togglePaymentCreate() {\r\n    payment.charAt(0) === \"1\"\r\n      ? setPayment(setCharAt(payment, 0, \"0\"))\r\n      : setPayment(setCharAt(payment, 0, \"1\"));\r\n  }\r\n  function togglePaymentView() {\r\n    payment.charAt(1) === \"1\"\r\n      ? setPayment(setCharAt(payment, 1, \"0\"))\r\n      : setPayment(setCharAt(payment, 1, \"1\"));\r\n  }\r\n  function togglePaymentUpdate() {\r\n    payment.charAt(2) === \"1\"\r\n      ? setPayment(setCharAt(payment, 2, \"0\"))\r\n      : setPayment(setCharAt(payment, 2, \"1\"));\r\n  }\r\n  function togglePaymentDelete() {\r\n    payment.charAt(3) === \"1\"\r\n      ? setPayment(setCharAt(payment, 3, \"0\"))\r\n      : setPayment(setCharAt(payment, 3, \"1\"));\r\n  }\r\n  function togglePaymentAll() {\r\n    payment === \"1111\" ? setPayment(\"0000\") : setPayment(\"1111\");\r\n  }\r\n  /*PAYMENT PERMISSION END */\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update User Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* update role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  User Type\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"typename\"\r\n                                  readOnly\r\n                                  defaultValue={data.typename}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.typename && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ************************************************************ */}\r\n                            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                              <label>Select Permission</label>\r\n                            </div>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-hover institute-table\">\r\n                                <thead>\r\n                                  <tr className=\"inst-list-heading\">\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Feature Name\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Create\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      View\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Update\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      Delete\r\n                                    </th>\r\n                                    <th className=\"inst-list-th text-center\">\r\n                                      All\r\n                                    </th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* USER */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      User\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          user.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleUserDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={user === \"1111\" ? true : false}\r\n                                        onChange={() => toggleUserAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* INSTITUTE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Institute\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => toggleInstDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          institute === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleInstAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PACKAGE */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Package\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          pkg.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePkgDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={pkg === \"1111\" ? true : false}\r\n                                        onChange={() => togglePkgAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* BILL */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Bill\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(0) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(1) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(2) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          bill.charAt(3) === \"1\" ? true : false\r\n                                        }\r\n                                        onChange={() => toggleBillDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={bill === \"1111\" ? true : false}\r\n                                        onChange={() => toggleBillAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                  {/* PAYMENT */}\r\n                                  <tr>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      Payment\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(0) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentCreate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(1) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentView()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(2) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentUpdate()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment.charAt(3) === \"1\"\r\n                                            ? true\r\n                                            : false\r\n                                        }\r\n                                        onChange={() => togglePaymentDelete()}\r\n                                      />\r\n                                    </td>\r\n                                    <td className=\"inst-list-td text-center\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={\r\n                                          payment === \"1111\" ? true : false\r\n                                        }\r\n                                        onChange={() => togglePaymentAll()}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              {permissionError && (\r\n                                <ErrorMsg>\r\n                                  * Minimum 1 Permission Required\r\n                                </ErrorMsg>\r\n                              )}\r\n                            </div>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* update role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsPackageCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewPkgItem() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsPackage\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Package Item Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsPackageWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update New Package Item</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Package Item Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_item_name\"\r\n                                  defaultValue={data.package_item_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_item_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Number / Size\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_number\"\r\n                                  defaultValue={data.package_number}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_number && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Amount / Value\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"package_amount\"\r\n                                  defaultValue={data.package_amount}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.package_amount && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function AddNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let history = useHistory();\r\n  const onSubmit = (data) => {\r\n    //console.log(data);\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/SettingsInstituteCreate\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Added Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Add New Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Add\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport default function EditNewInstType() {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let history = useHistory();\r\n\r\n  const location = useLocation();\r\n  //console.log(location.state.id);\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(\"DATA: \" + JSON.stringify(data));\r\n    data[\"id\"] = location.state.id;\r\n    data[\"short_form\"] = data[\"short_form\"].toUpperCase();\r\n\r\n    let accessToken = localStorage.getItem(\"token\");\r\n    //alert(accessToken);\r\n    accessToken = accessToken.substring(1, accessToken.length - 1);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"/UpdateSettingsInstitute\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    trackPromise(\r\n      axios(config).then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        if (response.data.status === \"ok\") {\r\n          toast(\"Institute Type Updated Successfully\", {\r\n            className: \"toast-error\",\r\n          });\r\n          history.push(\"settings\");\r\n        } else {\r\n          toast(response.data.msg, {\r\n            className: \"toast-error\",\r\n          });\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  //GET PACKAGE ITEM -START\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetSettingsInstituteWithID\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          id: location.state.id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"Response - \" + JSON.stringify(response.data.data[0]));\r\n      setData(response.data.data[0]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //GET PACKAGE ITEM -END\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Update Institute Type</h4>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <Link\r\n                        to=\"/settings\"\r\n                        className=\"border ml-1 add-button shadow float-right\"\r\n                        title=\"Back\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-12\" style={{ padding: \"2rem\" }}>\r\n                          {/* ------------------------------------------------------------------ */}\r\n                          {/* create role & permission form start */}\r\n                          <form\r\n                            className=\"mt-4\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                          >\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Type Name\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"institute_name\"\r\n                                  defaultValue={data.institute_name}\r\n                                  ref={register({ required: true })}\r\n                                />\r\n                                {errors.institute_name && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                              <div\r\n                                className=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                <label>\r\n                                  <span className=\"red-star\">*</span>\r\n                                  Short Form\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  name=\"short_form\"\r\n                                  defaultValue={data.short_form}\r\n                                  ref={register({ required: true })}\r\n                                  style={{ textTransform: \"uppercase\" }}\r\n                                />\r\n                                {errors.short_form && (\r\n                                  <ErrorMsg>* This Field is Required</ErrorMsg>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              className=\"form-control\"\r\n                              name=\"active\"\r\n                              defaultValue={data.active}\r\n                              ref={register({ required: true })}\r\n                            />\r\n\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-update mt-2 mb-2\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                          </form>\r\n                          {/* create role & permission form end */}\r\n                          <LoadingIndicator />\r\n                          {/* ----------------------------------------------------------------------- */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Compose() {\r\n  return (\r\n    <div>\r\n      <h1>Compose</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\n\r\nexport default function ViewEmail({ email_id }) {\r\n  const [data, setData] = useState([]);\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailFullDetails\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          email_id: email_id,\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <p>{JSON.stringify(data)}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nimport ViewEmail from \"./ViewEmail\";\r\nexport default function Inbox() {\r\n  const [data, setData] = useState([]);\r\n  const [showViewEmail, setShowViewEmail] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH GetEmailForInbox\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForInbox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          //email: emailAddress,\r\n          email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"row mb-4 float-right mr-2 mt-3\">\r\n        {showViewEmail ? (\r\n          <span\r\n            className=\"border ml-1 add-button shadow float-right\"\r\n            style={{ cursor: \"pointer\" }}\r\n            title=\"Back to Inbox\"\r\n            onClick={() => {\r\n              setShowViewEmail(false);\r\n              setShowInbox(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-arrow-left add-button-icon\"></i>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n      <div className={`table-responsive ${showViewEmail ? null : \"mt-5 pt-5\"}`}>\r\n        {showInbox ? (\r\n          <table className=\"table table-hover institute-table\">\r\n            <thead>\r\n              <tr className=\"inst-list-heading\">\r\n                <th className=\"inst-list-th text-center\">\r\n                  <input type=\"checkbox\" />\r\n                </th>\r\n                <th className=\"inst-list-th text-center\">From</th>\r\n                <th className=\"inst-list-th text-center\">To</th>\r\n                <th className=\"inst-list-th text-center\">Subject</th>\r\n                <th className=\"inst-list-th text-center\">Date</th>\r\n                <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    <input type=\"checkbox\" />\r\n                  </td>\r\n                  <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n                  <td className=\"inst-list-td text-center\"> {row[\"sender\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n                  <td className=\"inst-list-td text-center\">\r\n                    {row[\"sending_date\"]}\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"View Details\"\r\n                    onClick={() => {\r\n                      setShowViewEmail(true);\r\n                      setShowInbox(false);\r\n                      setEmailId(row[\"email_id\"]);\r\n                    }}\r\n                  >\r\n                    <i className=\"far fa-eye action-icon\"></i>\r\n                  </td>\r\n                  <td\r\n                    className=\"inst-list-td text-center action\"\r\n                    title=\"Edit\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/edit-user-type\",\r\n                        state: { id: row[\"id\"] },\r\n                      })\r\n                    }\r\n                  >\r\n                    <i className=\"far fa-trash-alt action-icon\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n        {showViewEmail ? <ViewEmail email_id={emailId} /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nexport default function Sent() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForSentBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          //email: emailAddress,\r\n          email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"table-responsive mt-5 pt-5\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">\r\n              <input type=\"checkbox\" />\r\n            </th>\r\n            <th className=\"inst-list-th text-center\">From</th>\r\n            <th className=\"inst-list-th text-center\">To</th>\r\n            <th className=\"inst-list-th text-center\">Subject</th>\r\n            <th className=\"inst-list-th text-center\">Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">\r\n                <input type=\"checkbox\" />\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"receiver\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"sending_date\"]}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nexport default function Draft() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForDraftBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          //email: emailAddress,\r\n          email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"table-responsive mt-5 pt-5\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">\r\n              <input type=\"checkbox\" />\r\n            </th>\r\n            <th className=\"inst-list-th text-center\">From</th>\r\n            <th className=\"inst-list-th text-center\">To</th>\r\n            <th className=\"inst-list-th text-center\">Subject</th>\r\n            <th className=\"inst-list-th text-center\">Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">\r\n                <input type=\"checkbox\" />\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"receiver\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"sending_date\"]}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { LoadingIndicator } from \"../Loading/LoadingIndicator\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../App.css\";\r\nimport Moment from \"moment\";\r\nexport default function Trash() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const emailAddress = localStorage.getItem(\"emailAddress\");\r\n\r\n  // FETCH USERTYPE LIST\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let accessToken = localStorage.getItem(\"token\");\r\n      // alert(accessToken);\r\n      accessToken = accessToken.substring(1, accessToken.length - 1);\r\n      var config = {\r\n        method: \"post\",\r\n        url: \"/GetEmailForTrashBox\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        data: {\r\n          //email: emailAddress,\r\n          email: \"turzoxpress3@gmail.com\",\r\n        },\r\n      };\r\n\r\n      const response = await trackPromise(axios(config));\r\n      //console.log(\"response - \" + JSON.stringify(response.data.data));\r\n      setData(response.data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"table-responsive mt-5 pt-5\">\r\n      <table className=\"table table-hover institute-table\">\r\n        <thead>\r\n          <tr className=\"inst-list-heading\">\r\n            <th className=\"inst-list-th text-center\">\r\n              <input type=\"checkbox\" />\r\n            </th>\r\n            <th className=\"inst-list-th text-center\">From</th>\r\n            <th className=\"inst-list-th text-center\">To</th>\r\n            <th className=\"inst-list-th text-center\">Subject</th>\r\n            <th className=\"inst-list-th text-center\">Date</th>\r\n            <th className=\"inst-list-th text-center\" colSpan=\"2\">\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td className=\"inst-list-td text-center\">\r\n                <input type=\"checkbox\" />\r\n              </td>\r\n              <td className=\"inst-list-td text-center\">{emailAddress}</td>\r\n              <td className=\"inst-list-td text-center\"> {row[\"receiver\"]}</td>\r\n              <td className=\"inst-list-td text-center\">{row[\"title\"]}</td>\r\n              <td className=\"inst-list-td text-center\">\r\n                {row[\"sending_date\"]}\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"View Details\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/view-user-type\",\r\n                    state: { email_id: row[\"email_id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-eye action-icon\"></i>\r\n              </td>\r\n              <td\r\n                className=\"inst-list-td text-center action\"\r\n                title=\"Edit\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/edit-user-type\",\r\n                    state: { id: row[\"id\"] },\r\n                  })\r\n                }\r\n              >\r\n                <i className=\"far fa-trash-alt action-icon\"></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Compose from \"./Compose\";\r\nimport Inbox from \"./Inbox\";\r\nimport Sent from \"./Sent\";\r\nimport Draft from \"./Draft\";\r\nimport Trash from \"./Trash\";\r\n\r\nexport default function Email() {\r\n  const [showCompose, setShowCompose] = useState(false);\r\n  const [showInbox, setShowInbox] = useState(true);\r\n  const [showSent, setShowSent] = useState(false);\r\n  const [showDraft, setShowDraft] = useState(false);\r\n  const [showTrash, setShowTrash] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        {/* PAGE CONTENT START */}\r\n        <div className=\"content-wrapper pt-3 pb-5\">\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid layout-width\">\r\n              {/* Content Start */}\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* Profile Edit start */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                      <h4 className=\"heading\">Email</h4>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body p-0\">\r\n                      <div className=\"row\" style={{ minHeight: \"70vh\" }}>\r\n                        <div className=\"col-lg-2 col-md-3 col-sm-6\">\r\n                          <div\r\n                            className=\"nav flex-column nav-tabs h-100\"\r\n                            id=\"vert-tabs-tab\"\r\n                            role=\"tablist\"\r\n                            aria-orientation=\"vertical\"\r\n                            style={{\r\n                              backgroundColor: \"#fff\",\r\n                              paddingTop: \"40px\",\r\n                            }}\r\n                          >\r\n                            <span\r\n                              className=\"shadow badge badge-pill compose__btn\"\r\n                              onClick={() => {\r\n                                setShowCompose(true);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-plus compose__icon\"></i>\r\n                              Compose\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                borderBottom: \"1px solid #B9B9B9\",\r\n                                margin: \"24px 10px 8px 10px\",\r\n                              }}\r\n                            ></span>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showInbox ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(true);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-inbox pr-2 pl-3\"></i>\r\n                              Inbox\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showSent ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(true);\r\n                                setShowDraft(false);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-share pr-2 pl-3\"></i>Sent\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showDraft ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(true);\r\n                                setShowTrash(false);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-file pr-2 pl-3\"></i>Draft\r\n                            </a>\r\n                            <a\r\n                              className={`nav-link edit-profile ${\r\n                                showTrash ? \"active\" : null\r\n                              }`}\r\n                              style={{ color: \"#656565\" }}\r\n                              onClick={() => {\r\n                                setShowCompose(false);\r\n                                setShowInbox(false);\r\n                                setShowSent(false);\r\n                                setShowDraft(false);\r\n                                setShowTrash(true);\r\n                              }}\r\n                            >\r\n                              <i className=\"far fa-trash-alt pr-2 pl-3\"></i>\r\n                              Trash\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-lg-10 col-md-9 col-sm-6\"\r\n                          style={{ padding: \"1.25rem\" }}\r\n                        >\r\n                          <div\r\n                            className=\"tab-content\"\r\n                            id=\"vert-tabs-tabContent\"\r\n                          >\r\n                            {showCompose ? <Compose /> : null}\r\n                            {showInbox ? <Inbox /> : null}\r\n                            {showSent ? <Sent /> : null}\r\n                            {showDraft ? <Draft /> : null}\r\n                            {showTrash ? <Trash /> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* /.card */}\r\n                  </div>\r\n                  {/* Profile Edit end */}\r\n                </div>\r\n              </div>\r\n              {/* Content End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* PAGE CONTENT END */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport CreateUser from \"./Components/User/CreateUser\";\nimport UserListView from \"./Components/User/UserListView\";\nimport UserDetailView from \"./Components/User/UserDetailView\";\nimport UpdateUser from \"./Components/User/UpdateUser\";\nimport Login from \"./Components/Login/Login\";\nimport ForgetPassword from \"./Components/Password/ForgetPassword\";\nimport ResetPassword from \"./Components/Password/ResetPassword\";\nimport AccountInfo from \"./Components/AccountInfo/AccountInfo\";\nimport InstituteCreate from \"./Components/InstituteRegistration/InstituteCreate\";\nimport InstituteListView from \"./Components/InstituteRegistration/InstituteListView\";\nimport InstituteDetails from \"./Components/InstituteRegistration/InstituteDetails\";\nimport InstituteUpdate from \"./Components/InstituteRegistration/InstituteUpdate\";\nimport ViewProfile from \"./Components/Profile/ViewProfile\";\nimport EditProfile from \"./Components/Profile/EditProfile\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\nimport ErrorHandle from \"./Components/ErrorHandling/errorHandle\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreatePackage from \"./Components/PackageSystem/CreatePackage\";\nimport PackageListView from \"./Components/PackageSystem/PackageListView\";\nimport PackageDetails from \"./Components/PackageSystem/PackageDetails\";\nimport PackageEdit from \"./Components/PackageSystem/PackageEdit\";\nimport PackageHistory from \"./Components/PackageSystem/PackageHistory\";\nimport PackageHistoryDetail from \"./Components/PackageSystem/PackageHistoryDetail\";\nimport Settings from \"./Components/Settings/Settings\";\nimport CreateBill from \"./Components/BillingSystem/CreateBill\";\nimport UpdateBill from \"./Components/BillingSystem/UpdateBill\";\nimport BillingListView from \"./Components/BillingSystem/BillingListView\";\nimport BillingInvoiceView from \"./Components/BillingSystem/BillingInvoiceView\";\nimport PaymentListView from \"./Components/PaymentSystem/PaymentListView\";\nimport PaymentHistoryView from \"./Components/PaymentSystem/PaymentHistoryView\";\nimport InstPaymentHistory from \"./Components/PaymentSystem/InstPaymentHistory\";\nimport PaymentApprove from \"./Components/PaymentSystem/PaymentApprove\";\nimport CreateUserType from \"./Components/Settings/CreateUserType\";\nimport ViewUserType from \"./Components/Settings/ViewUserType\";\nimport EditUserType from \"./Components/Settings/EditUserType\";\nimport AddNewPkgItem from \"./Components/Settings/AddNewPkgItem\";\nimport EditNewPkgItem from \"./Components/Settings/EditNewPkgItem\";\nimport AddNewInstType from \"./Components/Settings/AddNewInstType\";\nimport EditNewInstType from \"./Components/Settings/EditNewInstType\";\nimport Email from \"./Components/Email/Email\";\n\nexport default function App() {\n  ErrorHandle();\n  return (\n    <div>\n      <BrowserRouter basename=\"/lms/\">\n        <div className=\"wrapper\">\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/forget-password\" component={ForgetPassword} />\n            <Route\n              path=\"/password-reset-request/:token\"\n              component={ResetPassword}\n            />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute path=\"/create-user\" component={CreateUser} />\n            <PrivateRoute path=\"/user-list-view\" component={UserListView} />\n            <PrivateRoute path=\"/user-detail-view\" component={UserDetailView} />\n            <PrivateRoute path=\"/update-user\" component={UpdateUser} />\n            <PrivateRoute path=\"/account-info\" component={AccountInfo} />\n            <PrivateRoute\n              path=\"/institute-create\"\n              component={InstituteCreate}\n            />\n            <PrivateRoute\n              path=\"/institute-list-view\"\n              component={InstituteListView}\n            />\n            <PrivateRoute\n              path=\"/institute-detail/:id\"\n              component={InstituteDetails}\n            />\n            <PrivateRoute\n              path=\"/institute-update/:id/:package_id\"\n              component={InstituteUpdate}\n            />\n            <PrivateRoute path=\"/package-create\" component={CreatePackage} />\n            <PrivateRoute\n              path=\"/package-list-view\"\n              component={PackageListView}\n            />\n            <PrivateRoute\n              path=\"/package-details/:id\"\n              component={PackageDetails}\n            />\n            <PrivateRoute path=\"/package-edit/:id\" component={PackageEdit} />\n            <PrivateRoute path=\"/package-history\" component={PackageHistory} />\n            <PrivateRoute\n              path=\"/package-history-detail/:id\"\n              component={PackageHistoryDetail}\n            />\n            <PrivateRoute path=\"/create-bill\" component={CreateBill} />\n            <PrivateRoute path=\"/update-bill\" component={UpdateBill} />\n            <PrivateRoute\n              path=\"/billing-list-view\"\n              component={BillingListView}\n            />\n            <PrivateRoute\n              path=\"/billing-invoice-view\"\n              component={BillingInvoiceView}\n            />\n            <PrivateRoute\n              path=\"/payment-list-view\"\n              component={PaymentListView}\n            />\n            <PrivateRoute\n              path=\"/payment-history-view\"\n              component={PaymentHistoryView}\n            />\n            <PrivateRoute\n              path=\"/inst-payment-history\"\n              component={InstPaymentHistory}\n            />\n            <PrivateRoute path=\"/payment-approve\" component={PaymentApprove} />\n\n            <PrivateRoute path=\"/view-profile\" component={ViewProfile} />\n            <PrivateRoute path=\"/edit-profile\" component={EditProfile} />\n            <PrivateRoute path=\"/settings\" component={Settings} />\n            <PrivateRoute path=\"/create-user-type\" component={CreateUserType} />\n            <PrivateRoute path=\"/view-user-type\" component={ViewUserType} />\n            <PrivateRoute path=\"/edit-user-type\" component={EditUserType} />\n            <PrivateRoute path=\"/add-new-pkg-item\" component={AddNewPkgItem} />\n            <PrivateRoute\n              path=\"/edit-new-pkg-item\"\n              component={EditNewPkgItem}\n            />\n\n            <PrivateRoute\n              path=\"/add-new-inst-type\"\n              component={AddNewInstType}\n            />\n            <PrivateRoute\n              path=\"/edit-new-inst-type\"\n              component={EditNewInstType}\n            />\n            <PrivateRoute path=\"/email\" component={Email} />\n            <Route path=\"*\" component={() => \"404 PAGE NOT FOUND\"} />\n          </Switch>\n          <ToastContainer\n            position=\"top-center\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            transition={Zoom}\n          />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\n\r\nexport default function ErrorHandle() {\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      //console.log(config);\r\n      console.log(\r\n        `${config.method.toUpperCase()} request sent to ${\r\n          config.url\r\n        } at ${new Date().toLocaleString()}`\r\n      );\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  axios.interceptors.response.use(\r\n    (config) => {\r\n      // console.log(config);\r\n      console.log(\r\n        `Status: ${config.status} ${config.statusText}\\nResp Status: ${config.data.status}\\nResp Msg: ${config.data.msg}`\r\n      );\r\n      if (config.status === 401) {\r\n        alert(\"You are not authorized\");\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\n\n//change base url for backend api connection\naxios.defaults.baseURL = \"http://18.188.174.161:5000\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo2.b064fe4f.png\";"],"sourceRoot":""}